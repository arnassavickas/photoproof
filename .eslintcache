[{"D:\\Projektai\\photoproof\\src\\index.tsx":"1","D:\\Projektai\\photoproof\\src\\App.tsx":"2","D:\\Projektai\\photoproof\\src\\utils\\makeId.tsx":"3","D:\\Projektai\\photoproof\\src\\firebase.tsx":"4","D:\\Projektai\\photoproof\\src\\types.ts":"5","D:\\Projektai\\photoproof\\src\\components\\Dashboard\\Dashboard.tsx":"6","D:\\Projektai\\photoproof\\src\\components\\NewCollectionPage\\NewCollection.tsx":"7","D:\\Projektai\\photoproof\\src\\components\\SignIn\\SignIn.tsx":"8","D:\\Projektai\\photoproof\\src\\components\\Settings\\Settings.tsx":"9","D:\\Projektai\\photoproof\\src\\components\\CollectionPage\\CollectionPage.tsx":"10","D:\\Projektai\\photoproof\\src\\components\\Dashboard\\CollectionsList\\CollectionsList.tsx":"11","D:\\Projektai\\photoproof\\src\\components\\EditCollection\\EditCollection.tsx":"12"},{"size":199,"mtime":1612088648431,"results":"13","hashOfConfig":"14"},{"size":1800,"mtime":1612352703559,"results":"15","hashOfConfig":"14"},{"size":336,"mtime":1611690852583,"results":"16","hashOfConfig":"14"},{"size":8640,"mtime":1612455111278,"results":"17","hashOfConfig":"14"},{"size":400,"mtime":1611941595334,"results":"18","hashOfConfig":"14"},{"size":804,"mtime":1612371669241,"results":"19","hashOfConfig":"14"},{"size":5094,"mtime":1612455206896,"results":"20","hashOfConfig":"14"},{"size":2071,"mtime":1612284871911,"results":"21","hashOfConfig":"14"},{"size":710,"mtime":1612284911426,"results":"22","hashOfConfig":"14"},{"size":8854,"mtime":1612300845175,"results":"23","hashOfConfig":"14"},{"size":3370,"mtime":1612372264339,"results":"24","hashOfConfig":"14"},{"size":9086,"mtime":1612371917600,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jl4ilk",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"28"},"D:\\Projektai\\photoproof\\src\\index.tsx",[],["53","54"],"D:\\Projektai\\photoproof\\src\\App.tsx",[],"D:\\Projektai\\photoproof\\src\\utils\\makeId.tsx",[],"D:\\Projektai\\photoproof\\src\\firebase.tsx",[],"D:\\Projektai\\photoproof\\src\\types.ts",[],"D:\\Projektai\\photoproof\\src\\components\\Dashboard\\Dashboard.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\NewCollectionPage\\NewCollection.tsx",["55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70"],"D:\\Projektai\\photoproof\\src\\components\\SignIn\\SignIn.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\Settings\\Settings.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\CollectionPage\\CollectionPage.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\Dashboard\\CollectionsList\\CollectionsList.tsx",["71","72","73","74","75","76","77","78","79"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Collection, Photo } from '../../../types';\nimport { getCollections, deleteCollection } from '../../../firebase';\nimport styles from './styles.module.scss';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Toolbar,\n  IconButton,\n  Typography,\n  Tooltip,\n  Backdrop,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\n\nconst CollectionList: React.FC = () => {\n  const [collections, setCollections] = useState<Collection[] | null>(null);\n\n  useEffect(() => {\n    getCollections().then((data) => setCollections(data));\n  }, []);\n\n  const selectedPhotos = (photos: Photo[]) => {\n    return photos.filter((photo) => photo.selected).length;\n  };\n\n  const handleDeleteCollection = (collectionId: string) => {\n    deleteCollection(collectionId);\n  };\n\n  if (collections === null) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  } else {\n    return (\n      <div>\n        <TableContainer>\n          <Table size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell>first image</TableCell>\n                <TableCell>name</TableCell>\n                <TableCell>status</TableCell>\n                <TableCell>selected/all photos</TableCell>\n                <TableCell>delete</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {collections.map((collection) => {\n                return (\n                  <TableRow\n                    key={collection.id}\n                    component={Link}\n                    to={`edit/${collection.id}`}\n                    hover={true}\n                  >\n                    <TableCell>\n                      {collection.photos[0] ? (\n                        <picture>\n                          <source\n                            srcSet={collection.photos[0].thumbnailWebp}\n                            type='image/webp'\n                          />\n                          <img\n                            src={collection.photos[0].thumbnail}\n                            alt='first collection img'\n                            className={styles.thumbnail}\n                          />\n                        </picture>\n                      ) : null}\n                    </TableCell>\n                    <TableCell>{collection.title}</TableCell>\n                    <TableCell>{collection.status}</TableCell>\n                    <TableCell>\n                      {selectedPhotos(collection.photos)}/\n                      {collection.photos.length}\n                    </TableCell>\n                    <TableCell></TableCell>\n                    <TableCell>\n                      <Button\n                        onClick={(event) =>\n                          handleDeleteCollection(collection.id)\n                        }\n                        variant='outlined'\n                      >\n                        delete\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    );\n  }\n};\n\nexport default CollectionList;\n","D:\\Projektai\\photoproof\\src\\components\\EditCollection\\EditCollection.tsx",["80"],"import React, { useEffect, useState } from 'react';\nimport styles from './styles.module.scss';\nimport { useParams, Link } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport { Collection, Photo } from '../../types';\nimport { getSingleCollection, deletePhotos } from '../../firebase';\n// @ts-ignore\nimport { isWebpSupported } from 'react-image-webp/dist/utils';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Toolbar,\n  IconButton,\n  Typography,\n  Tooltip,\n  Backdrop,\n  CircularProgress,\n} from '@material-ui/core';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\ninterface Row {\n  id: string;\n  thumbnail: string;\n  filename: string;\n  selected: boolean;\n  comment: string;\n}\n\nconst EditCollection: React.FC = () => {\n  const { id: collectionId } = useParams<{ id: string }>();\n\n  const [collection, setCollection] = useState<Collection | null>(null);\n  const [filteredPhotos, setFilteredPhotos] = useState<Photo[] | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [lightboxIndex, setLightboxIndex] = useState(0);\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [selected, setSelected] = useState<string[]>([]);\n\n  useEffect(() => {\n    getSingleCollection(collectionId).then((collection) => {\n      setCollection(collection);\n      setFilteredPhotos(collection.photos);\n    });\n  }, [collectionId]);\n\n  const changeFilter = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setFilter(e.target.value as string);\n  };\n\n  useEffect(() => {\n    if (collection) {\n      switch (filter) {\n        case 'all':\n          return setFilteredPhotos(collection.photos);\n        case 'selected':\n          const selectedPhotos = collection.photos.filter(\n            (photo) => photo.selected\n          );\n          return setFilteredPhotos(selectedPhotos);\n        case 'unselected':\n          const unselectedPhotos = collection.photos.filter(\n            (photo) => !photo.selected\n          );\n          return setFilteredPhotos(unselectedPhotos);\n      }\n    }\n  }, [filter, collection]);\n\n  const openLightbox = (index: number) => (event: any) => {\n    setLightboxIndex(index);\n    setLightboxOpen(true);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked && filteredPhotos) {\n      const newSelecteds = filteredPhotos.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const isSelected = (id: string) => selected.indexOf(id) !== -1;\n\n  const deleteSelected = () => {\n    deletePhotos(collectionId, selected);\n    if (collection) {\n      const removeDeleted = collection.photos.filter((photo) => {\n        for (let id of selected) {\n          if (photo.id === id) {\n            return false;\n          }\n        }\n        return true;\n      });\n      setCollection({\n        ...collection,\n        photos: removeDeleted,\n      });\n    }\n    setSelected([]);\n  };\n\n  if (collection === null || filteredPhotos === null) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  } else {\n    return (\n      <div>\n        <Link to='/'>\n          <button>Home</button>\n        </Link>\n        <Typography variant='h4'>{collection.title}</Typography>\n\n        <Toolbar>\n          {selected.length > 0 ? (\n            <div className={styles.toolbarSelected}>\n              <Typography color='inherit' variant='subtitle1' component='div'>\n                {selected.length} to be deleted\n              </Typography>\n              <Tooltip title='Delete'>\n                <IconButton aria-label='delete' onClick={deleteSelected}>\n                  <DeleteIcon />\n                </IconButton>\n              </Tooltip>\n            </div>\n          ) : (\n            <div className={styles.toolbarSelected}></div>\n          )}\n          <FormControl className={styles.toolbarFilter}>\n            <InputLabel>Filter</InputLabel>\n            <Select value={filter} onChange={changeFilter}>\n              <MenuItem value={'all'}>All</MenuItem>\n              <MenuItem value={'selected'}>Selected</MenuItem>\n              <MenuItem value={'unselected'}>Unselected</MenuItem>\n            </Select>\n          </FormControl>\n        </Toolbar>\n        <TableContainer>\n          <Table size='small'>\n            <TableHead>\n              <TableRow>\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    indeterminate={\n                      selected.length > 0 &&\n                      selected.length < filteredPhotos.length\n                    }\n                    checked={\n                      filteredPhotos.length > 0 &&\n                      selected.length === filteredPhotos.length\n                    }\n                    onChange={handleSelectAllClick}\n                    inputProps={{ 'aria-label': 'select all desserts' }}\n                  />\n                </TableCell>\n                <TableCell>thumbnail</TableCell>\n                <TableCell>filename</TableCell>\n                <TableCell padding='checkbox'></TableCell>\n                <TableCell>comment</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {filteredPhotos.map((photo, index) => (\n                <TableRow\n                  key={photo.id}\n                  selected={isSelected(photo.id)}\n                  hover={true}\n                >\n                  <TableCell\n                    padding='checkbox'\n                    onClick={(event) => handleClick(event, photo.id)}\n                  >\n                    <Checkbox\n                      checked={isSelected(photo.id)}\n                      inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                  </TableCell>\n                  <TableCell padding='none'>\n                    <picture>\n                      <source srcSet={photo.thumbnailWebp} type='image/webp' />\n                      <img\n                        src={photo.thumbnail}\n                        alt={collection.title}\n                        className={styles.thumbnail}\n                        onClick={openLightbox(index)}\n                      />\n                    </picture>\n                  </TableCell>\n                  <TableCell>{photo.filename}</TableCell>\n                  <TableCell padding='checkbox'>\n                    {photo.selected ? <StarBorderIcon /> : null}\n                  </TableCell>\n                  <TableCell>{photo.comment}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        {lightboxOpen && filteredPhotos.length > 0 && (\n          <Lightbox\n            mainSrc={\n              isWebpSupported\n                ? filteredPhotos[lightboxIndex].cloudUrlWebp\n                : filteredPhotos[lightboxIndex].cloudUrl\n            }\n            nextSrc={\n              isWebpSupported\n                ? filteredPhotos[(lightboxIndex + 1) % filteredPhotos.length]\n                    .cloudUrlWebp\n                : filteredPhotos[(lightboxIndex + 1) % filteredPhotos.length]\n                    .cloudUrl\n            }\n            prevSrc={\n              isWebpSupported\n                ? filteredPhotos[\n                    (lightboxIndex + filteredPhotos.length - 1) %\n                      filteredPhotos.length\n                  ].cloudUrlWebp\n                : filteredPhotos[\n                    (lightboxIndex + filteredPhotos.length - 1) %\n                      filteredPhotos.length\n                  ].cloudUrl\n            }\n            onCloseRequest={() => setLightboxOpen(false)}\n            onMovePrevRequest={() =>\n              setLightboxIndex(\n                (lightboxIndex + filteredPhotos.length - 1) %\n                  filteredPhotos.length\n              )\n            }\n            onMoveNextRequest={() =>\n              setLightboxIndex((lightboxIndex + 1) % filteredPhotos.length)\n            }\n            toolbarButtons={[\n              filteredPhotos[lightboxIndex].selected ? (\n                <StarBorderIcon />\n              ) : null,\n            ]}\n          />\n        )}\n      </div>\n    );\n  }\n};\n\nexport default EditCollection;\n",{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":4,"column":19,"nodeType":"87","messageId":"88","endLine":4,"endColumn":29},{"ruleId":"85","severity":1,"message":"89","line":6,"column":3,"nodeType":"87","messageId":"88","endLine":6,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":7,"column":3,"nodeType":"87","messageId":"88","endLine":7,"endColumn":13},{"ruleId":"85","severity":1,"message":"91","line":8,"column":3,"nodeType":"87","messageId":"88","endLine":8,"endColumn":11},{"ruleId":"85","severity":1,"message":"92","line":9,"column":3,"nodeType":"87","messageId":"88","endLine":9,"endColumn":9},{"ruleId":"85","severity":1,"message":"93","line":11,"column":3,"nodeType":"87","messageId":"88","endLine":11,"endColumn":8},{"ruleId":"85","severity":1,"message":"94","line":12,"column":3,"nodeType":"87","messageId":"88","endLine":12,"endColumn":12},{"ruleId":"85","severity":1,"message":"95","line":13,"column":3,"nodeType":"87","messageId":"88","endLine":13,"endColumn":12},{"ruleId":"85","severity":1,"message":"96","line":14,"column":3,"nodeType":"87","messageId":"88","endLine":14,"endColumn":17},{"ruleId":"85","severity":1,"message":"97","line":15,"column":3,"nodeType":"87","messageId":"88","endLine":15,"endColumn":12},{"ruleId":"85","severity":1,"message":"98","line":16,"column":3,"nodeType":"87","messageId":"88","endLine":16,"endColumn":11},{"ruleId":"85","severity":1,"message":"99","line":17,"column":3,"nodeType":"87","messageId":"88","endLine":17,"endColumn":10},{"ruleId":"85","severity":1,"message":"100","line":18,"column":3,"nodeType":"87","messageId":"88","endLine":18,"endColumn":13},{"ruleId":"85","severity":1,"message":"101","line":20,"column":3,"nodeType":"87","messageId":"88","endLine":20,"endColumn":10},{"ruleId":"85","severity":1,"message":"102","line":21,"column":3,"nodeType":"87","messageId":"88","endLine":21,"endColumn":11},{"ruleId":"85","severity":1,"message":"103","line":22,"column":3,"nodeType":"87","messageId":"88","endLine":22,"endColumn":19},{"ruleId":"85","severity":1,"message":"89","line":7,"column":3,"nodeType":"87","messageId":"88","endLine":7,"endColumn":14},{"ruleId":"85","severity":1,"message":"90","line":8,"column":3,"nodeType":"87","messageId":"88","endLine":8,"endColumn":13},{"ruleId":"85","severity":1,"message":"91","line":9,"column":3,"nodeType":"87","messageId":"88","endLine":9,"endColumn":11},{"ruleId":"85","severity":1,"message":"92","line":10,"column":3,"nodeType":"87","messageId":"88","endLine":10,"endColumn":9},{"ruleId":"85","severity":1,"message":"104","line":11,"column":3,"nodeType":"87","messageId":"88","endLine":11,"endColumn":11},{"ruleId":"85","severity":1,"message":"99","line":18,"column":3,"nodeType":"87","messageId":"88","endLine":18,"endColumn":10},{"ruleId":"85","severity":1,"message":"100","line":19,"column":3,"nodeType":"87","messageId":"88","endLine":19,"endColumn":13},{"ruleId":"85","severity":1,"message":"105","line":20,"column":3,"nodeType":"87","messageId":"88","endLine":20,"endColumn":13},{"ruleId":"85","severity":1,"message":"101","line":21,"column":3,"nodeType":"87","messageId":"88","endLine":21,"endColumn":10},{"ruleId":"85","severity":1,"message":"106","line":31,"column":11,"nodeType":"87","messageId":"88","endLine":31,"endColumn":14},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"@typescript-eslint/no-unused-vars","'Controller' is defined but never used.","Identifier","unusedVar","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'MenuItem' is defined but never used.","'Select' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableCell' is defined but never used.","'TableContainer' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'Toolbar' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'Checkbox' is defined but never used.","'Typography' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]