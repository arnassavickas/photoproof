[{"D:\\Projektai\\photoproof\\src\\index.tsx":"1","D:\\Projektai\\photoproof\\src\\App.tsx":"2","D:\\Projektai\\photoproof\\src\\components\\Dashboard.tsx":"3","D:\\Projektai\\photoproof\\src\\components\\CollectionList.tsx":"4","D:\\Projektai\\photoproof\\src\\tempData\\tempData.tsx":"5","D:\\Projektai\\photoproof\\src\\components\\NewCollection.tsx":"6","D:\\Projektai\\photoproof\\src\\utils\\makeId.tsx":"7","D:\\Projektai\\photoproof\\src\\components\\Settings.tsx":"8","D:\\Projektai\\photoproof\\src\\firebase.tsx":"9","D:\\Projektai\\photoproof\\src\\providers\\UserProvider.tsx":"10","D:\\Projektai\\photoproof\\src\\components\\SignIn.tsx":"11"},{"size":291,"mtime":1611919639910,"results":"12","hashOfConfig":"13"},{"size":1173,"mtime":1611923604429,"results":"14","hashOfConfig":"13"},{"size":768,"mtime":1611923685751,"results":"15","hashOfConfig":"13"},{"size":1156,"mtime":1611868660113,"results":"16","hashOfConfig":"13"},{"size":286,"mtime":1611868708116,"results":"17","hashOfConfig":"13"},{"size":1760,"mtime":1611923455932,"results":"18","hashOfConfig":"13"},{"size":336,"mtime":1611690852583,"results":"19","hashOfConfig":"13"},{"size":777,"mtime":1611692244580,"results":"20","hashOfConfig":"13"},{"size":2769,"mtime":1611867729866,"results":"21","hashOfConfig":"13"},{"size":868,"mtime":1611920406588,"results":"22","hashOfConfig":"13"},{"size":2179,"mtime":1611921694678,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jl4ilk",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"D:\\Projektai\\photoproof\\src\\index.tsx",[],"D:\\Projektai\\photoproof\\src\\App.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\Dashboard.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\CollectionList.tsx",["50"],"import React from 'react';\nimport { Collection, Photo } from '../types';\n\nconst CollectionList: React.FC<{ collections: Collection[] }> = ({\n  collections,\n}) => {\n  const selectedPhotos = (photos: Photo[]) => {\n    return photos.filter((photo) => photo.selected).length;\n  };\n\n  return (\n    <div>\n      <table>\n        <tr>\n          <th>thumbnail</th>\n          <th>name</th>\n          <th>status</th>\n          <th>selected/all photos</th>\n          <th>view</th>\n        </tr>\n{/*         {collections.map((collection) => {\n          return (\n            <tr key={collection.id}>\n              <td>\n                <img\n                  src={collection.photos[0].cloudUrl}\n                  alt='first collection img'\n                />\n              </td>\n              <td>{collection.title}</td>\n              <td>{collection.status}</td>\n              <td>\n                {selectedPhotos(collection.photos)}/{collection.photos.length}\n              </td>\n              <td>\n                <button>view</button>\n              </td>\n            </tr>\n          );\n        })} */}\n      </table>\n    </div>\n  );\n};\n\nexport default CollectionList;\n",["51","52"],"D:\\Projektai\\photoproof\\src\\tempData\\tempData.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\NewCollection.tsx",[],"D:\\Projektai\\photoproof\\src\\utils\\makeId.tsx",[],"D:\\Projektai\\photoproof\\src\\components\\Settings.tsx",["53","54","55"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { makeId } from '../utils/makeId';\n\nconst Settings: React.FC = () => {\n  return (\n    <div>\n      <Link to='/'>\n        <button>home</button>\n      </Link>\n      <h2>settings</h2>\n      <form>\n        <div>\n          grid width<input type='number'></input>\n        </div>\n        <div>\n          upload watermark<input type='file'></input>\n        </div>\n        <div>\n          watermark size, px<input min='0' type='number'></input>\n        </div>\n        <div>\n          watermark angle, deg<input min='0' max='360' type='number'></input>\n        </div>\n        <div>\n          <button>save</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Settings;\n","D:\\Projektai\\photoproof\\src\\firebase.tsx",["56"],"import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport { makeId } from './utils/makeId';\nimport { Collection } from './types';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyDHmQizp773R-suNhqIN1be1of5CDmZfeA',\n  authDomain: 'photo-proof-6b9c0.firebaseapp.com',\n  projectId: 'photo-proof-6b9c0',\n  storageBucket: 'photo-proof-6b9c0.appspot.com',\n  messagingSenderId: '845535406744',\n  appId: '1:845535406744:web:ea79f61dc4ab063be9beed',\n  measurementId: 'G-2T5LPCQMXT',\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const storage = firebase.storage();\n\nexport const updateUserDocument = async (\n  uid: string,\n  newData?: {\n    photoURL?: string;\n    displayName?: string;\n    email?: string;\n  }\n) => {\n  if (!uid) return null;\n  try {\n    const userDocument = firestore.doc(`users/${uid}`);\n    console.log(await userDocument.get());\n    await userDocument.update({ ...newData });\n    console.log('update successful');\n  } catch (err) {\n    console.error('error updating user', err);\n  }\n};\n\nexport const generateNewCollection = async (\n  data: Omit<Collection, 'status' | 'finalComment'>,\n  files: FileList\n) => {\n  if (!data || !files) return;\n\n  let collectionRef, id, snapshot;\n\n  do {\n    id = makeId(8);\n    collectionRef = firestore.collection('collections').doc(id);\n    snapshot = await collectionRef.get();\n  } while (snapshot.exists);\n\n  const { title, minSelect, maxSelect, allowComments } = data;\n  try {\n    await collectionRef.set({\n      title,\n      minSelect,\n      maxSelect,\n      allowComments,\n      status: 'selecting',\n      finalComment: '',\n    });\n  } catch (err) {\n    console.error('error creating collection document', err);\n    return;\n  }\n  const photosRef = collectionRef.collection('photos');\n  const batch = firestore.batch();\n  for (let i = 0; i < files.length; i++) {\n    const file = files[i];\n    batch.set(photosRef.doc(), {\n      fileName: file.name,\n      cloudUrl: 'TODO',\n      selected: false,\n      comment: '',\n    });\n  }\n  try {\n    await batch.commit();\n  } catch (err) {\n    console.error('error creating photos documents', err);\n    return;\n  }\n  return;\n\n  //return getCollectionDocument(id);\n};\n\nconst getCollectionDocument = async (uid: string) => {\n  if (!uid) return null;\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    const documentData = userDocument.data();\n    if (documentData) {\n      return {\n        uid,\n        photoURL: documentData.photoURL,\n        displayName: documentData.displayName,\n        email: documentData.email,\n      };\n    }\n  } catch (err) {\n    console.error('error fetching user', err);\n  }\n};\n","D:\\Projektai\\photoproof\\src\\providers\\UserProvider.tsx",["57","58","59"],"D:\\Projektai\\photoproof\\src\\components\\SignIn.tsx",[],{"ruleId":"60","severity":1,"message":"61","line":7,"column":9,"nodeType":"62","messageId":"63","endLine":7,"endColumn":23},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"60","severity":1,"message":"68","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"69","line":1,"column":27,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"70","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":16},{"ruleId":"60","severity":1,"message":"71","line":92,"column":7,"nodeType":"62","messageId":"63","endLine":92,"endColumn":28},{"ruleId":"60","severity":1,"message":"72","line":1,"column":8,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"60","severity":1,"message":"73","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":14},{"ruleId":"60","severity":1,"message":"74","line":15,"column":16,"nodeType":"62","messageId":"63","endLine":15,"endColumn":23},"@typescript-eslint/no-unused-vars","'selectedPhotos' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'makeId' is defined but never used.","'getCollectionDocument' is assigned a value but never used.","'firebase' is defined but never used.","'auth' is defined but never used.","'setUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]