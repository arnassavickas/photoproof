{"version":3,"sources":["components/EditCollection/CollectionDetails/styles.module.scss","styles.module.scss","components/Dashboard/CollectionsList/styles.module.scss","components/Lightbox/styles.module.scss","utils/makeId.tsx","firebase.tsx","config.js","components/ConfirmationDialog/ConfirmationDialog.tsx","components/Dashboard/CollectionsList/CollectionsList.tsx","components/Dashboard/Dashboard.tsx","components/NewCollectionPage/NewCollection.tsx","components/Settings/Settings.tsx","components/SignIn/SignIn.tsx","components/Lightbox/Lightbox.tsx","components/CollectionPage/LockedView/LockedView.tsx","components/CollectionPage/SelectionView/SelectionView.tsx","components/CollectionPage/CollectionPage.tsx","components/EditCollection/CollectionDetails/CollectionDetails.tsx","components/ImageLoader/ImageLoader.tsx","components/EditCollection/EditCollection.tsx","App.tsx","index.tsx","components/EditCollection/styles.module.scss","components/CollectionPage/SelectionView/styles.module.scss","components/CollectionPage/LockedView/styles.module.scss","components/NewCollectionPage/styles.module.scss"],"names":["module","exports","makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","storage","generateNewCollection","data","files","setUploadProgress","a","Error","id","collectionRef","collection","doc","get","snapshot","exists","title","minSelect","maxSelect","allowComments","set","dateCreated","FieldValue","serverTimestamp","status","finalComment","photosRef","batch","uploadPhotos","photos","photo","commit","updateSettings","collectionId","update","addMorePhotos","photosArray","progressStep","progress","size","name","uuid","uuidv4","parse","storageRef","ref","put","uploadTask","getDownloadURL","downloadUrl","urlWithoutEnding","match","filenameWithoutExt","jpegUrl","webpUrl","jpegThumbnailUrl","webpThumbnailUrl","push","filename","filenameNumber","Number","cloudUrl","cloudUrlWebp","thumbnail","thumbnailWebp","selected","comment","dateTaken","ModifyDate","updatePhotoSelection","photoId","photoRef","updatePhotoComment","confirmCollection","deletePhotos","photoIds","setDeleteProgress","docRef","child","delete","console","error","resetPhotos","deleteCollection","docs","getCollections","log","collectionsArray","orderBy","collections","index","forEach","photoObj","collectionObj","getSingleCollection","collectionStatus","ConfirmationDialog","dialogOpen","onClickCancel","onClickAgree","dialogTitle","dialogContentText","Dialog","open","DialogTitle","DialogContent","DialogContentText","LinearProgress","variant","value","DialogActions","Button","disabled","onClick","color","autoFocus","CollectionList","useState","setCollections","deleteProgress","setDialogOpen","requestDeleteId","setRequestDeleteId","requestDeleteName","setRequestDeleteName","history","useHistory","useEffect","then","handleAgree","filterRemovedCollection","filter","handleRowClick","Backdrop","CircularProgress","TableContainer","Table","TableHead","TableRow","TableCell","width","TableBody","map","hover","srcSet","type","src","alt","className","styles","align","IconButton","event","collectionToDelete","find","requestToDelete","Dashboard","Typography","to","component","Link","NewCollection","useForm","register","handleSubmit","watch","errors","getValues","control","uploading","setUploading","uploadProgress","setUplaodProgress","thumbnailReady","setThumbnailReady","minToggle","maxToggle","onSubmit","required","minSelectRequired","goal","minSelectGoal","maxSelectRequired","maxSelectGoal","Box","p","TextField","inputRef","maxLength","label","helperText","FormControlLabel","Checkbox","style","display","InputProps","inputProps","max","min","valueAsNumber","validate","lowerThanMax","higherThanMin","render","onChange","acceptedFiles","dropzoneText","filesLimit","previewGridClasses","container","previewContainer","item","previewItem","image","previewImage","previewGridProps","spacing","sm","lg","md","showAlerts","showPreviewsInDropzone","showPreviews","showFileNamesInPreview","dropzoneClass","Settings","SignIn","setError","signInWithEmailAndPasswordHandler","signInWithEmailAndPassword","email","password","message","mt","LightboxComponent","filteredPhotos","setLightboxOpen","lightboxIndex","setLightboxIndex","toolbarButtons","mainSrc","isWebpSupported","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","enableZoom","imageTitle","classes","root","photoIndex","LockedView","lightboxOpen","openLightbox","openCommentModal","setPhotoIndex","commentOpen","setCommentOpen","commentTextarea","photoGrid","photoThumbnailGrid","imgBorder","commentBtnFilled","starBtnSelected","Lightbox","toolbarIcon","onClose","multiline","rows","SelectionView","setCollection","setCommentTextarea","selectedPhotos","confirmDialogOpen","setConfirmDialogOpen","defaultValues","confirmForbidDialogOpen","setConfirmForbidDialogOpen","confirmSelections","commentBtn","starBtn","clickedPhoto","err","e","preventDefault","target","fixedBtn","fullWidth","placeholder","CollectionPage","useParams","setFilteredPhotos","setFilter","unselectedPhotos","FormControl","InputLabel","Select","MenuItem","CollectionDetails","setConfirmationDialogOpen","setConfirmationDialogTitle","setConfirmationDialogContentText","setConfirmationDialogAgree","setProgress","copied","setCopied","registerSettings","handleSubmitSettings","watchSettings","errorsSettings","getValuesSettings","setValueSettings","setValue","resetSettings","reset","controlSettings","changeStatus","resetDialog","onSubmitSettings","copySelections","filenames","navigator","clipboard","writeText","join","setTimeout","defaultValue","titleTextarea","margin","Tooltip","button","innerHTML","window","location","origin","toString","onBlur","invalid","isTouched","isDirty","checked","Paper","elevation","centeredContainer","ImageLoader","children","height","imageReady","setImageReady","failed","setFailed","fetch","res","ok","trie","intervalId","setInterval","clearInterval","alignItems","justifyContent","Skeleton","EditCollection","setSelected","confirmationDialogOpen","confirmationDialogTitle","confirmationDialogContentText","confirmationDialogAgree","addPhotosDialogOpen","setAddPhotosDialogOpen","document","body","overflow","handleSubmitFiles","controlFiles","isSelected","indexOf","agreeDelete","removeDeleted","onConfirmUpload","agreeResetPhotos","Toolbar","toolbarSelected","aria-label","toolbarFilter","padding","indeterminate","newSelecteds","n","selectedIndex","newSelected","concat","slice","handleClick","dropzone","exitBtn","commentTextContainer","App","user","setUser","loading","setLoading","onAuthStateChanged","uid","Container","logoutBtn","signOut","basename","path","ReactDOM","StrictMode","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,UAAY,0BAA0B,cAAgB,8BAA8B,gBAAkB,gCAAgC,cAAgB,8BAA8B,SAAW,yBAAyB,YAAc,4BAA4B,QAAU,wBAAwB,qBAAuB,qCAAqC,cAAgB,8BAA8B,kBAAoB,oC,oBCApbD,EAAOC,QAAU,CAAC,UAAY,4B,oBCA9BD,EAAOC,QAAU,CAAC,UAAY,4B,oBCA9BD,EAAOC,QAAU,CAAC,WAAa,6B,sOCDlBC,EAAS,SAACC,GAKrB,IAJA,IAAIC,EAAS,GACTC,EACF,iEACEC,EAAmBD,EAAWF,OACzBI,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEzD,OAAOF,GCGTQ,IAASC,cCXqB,CAC5BC,OAAQ,0CACRC,WAAY,oCACZC,UAAW,oBACXC,cAAe,gCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBDKV,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YACrBC,EAAUX,IAASW,UAEnBC,EAAqB,uCAAG,WACnCC,EAIAC,EACAC,GANmC,qCAAAC,EAAA,yDAQ9BH,GAASC,EARqB,sBAS3B,IAAIG,MAAM,yBATiB,OAWnCF,EAAkB,GAXiB,cAgBjCG,EAAK5B,EAAO,GACZ6B,EAAgBT,EAAUU,WAAW,eAAeC,IAAIH,GAjBvB,SAkBhBC,EAAcG,MAlBE,OAkBjCC,EAlBiC,iBAmB1BA,EAASC,OAnBiB,8BAoBnCT,EAAkB,GACVU,EAA+CZ,EAA/CY,MAAOC,EAAwCb,EAAxCa,UAAWC,EAA6Bd,EAA7Bc,UAAWC,EAAkBf,EAAlBe,cArBF,oBAuB3BT,EAAcU,IAAI,CACtBJ,QACAK,YAAa9B,IAASU,UAAUqB,WAAWC,kBAC3CN,YACAC,YACAC,gBACAK,OAAQ,YACRC,aAAc,KA9BiB,iEAiC3B,IAAIjB,MAAJ,qDAjC2B,eAmCnCF,EAAkB,IAEZoB,EAAYhB,EAAcC,WAAW,UACrCgB,EAAQ1B,EAAU0B,QAtCW,UAwCdC,EAAanB,EAAIJ,EAAOC,GAxCV,QA0CnC,IAFMuB,EAxC6B,OA0C1B3C,EAAI,EAAGA,EAAI2C,EAAO/C,OAAQI,IAC3B4C,EAAQD,EAAO3C,GACrByC,EAAMP,IAAIM,EAAUd,IAAIiB,EAAO3C,GAAGuB,IAAKqB,GA5CN,2BA+C3BH,EAAMI,SA/CqB,iEAiD3B,IAAIvB,MAAJ,kDAjD2B,eAmDnCF,EAAkB,KAnDiB,kBAoD5BG,GApD4B,mEAAH,0DAuDrBuB,EAAc,uCAAG,WAC5B5B,EAIA6B,GAL4B,uBAAA1B,EAAA,6DAOpBS,EAA+CZ,EAA/CY,MAAOC,EAAwCb,EAAxCa,UAAWC,EAA6Bd,EAA7Bc,UAAWC,EAAkBf,EAAlBe,cAC/BT,EAAgBT,EAAUU,WAAW,eAAeC,IAAIqB,GARlC,kBAUpBvB,EAAcwB,OAAO,CACzBlB,QACAC,YACAC,YACAC,gBACAK,OAAQ,cAfgB,6DAkBpB,IAAIhB,MAAJ,sCAlBoB,yDAAH,wDAsBd2B,EAAa,uCAAG,WAC3B1B,EACAJ,EACAC,GAH2B,uBAAAC,EAAA,6DAKrBmB,EAAYzB,EACfU,WAAW,eACXC,IAAIH,GACJE,WAAW,UAERgB,EAAQ1B,EAAU0B,QAVG,SAYNC,EAAanB,EAAIJ,EAAOC,GAZlB,OAc3B,IAFMuB,EAZqB,OAclB3C,EAAI,EAAGA,EAAI2C,EAAO/C,OAAQI,IAC3B4C,EAAQD,EAAO3C,GACrByC,EAAMP,IAAIM,EAAUd,IAAIiB,EAAO3C,GAAGuB,IAAKqB,GAhBd,yBAmBnBH,EAAMI,SAnBa,+DAqBnB,IAAIvB,MAAJ,kDArBmB,eAuB3BF,EAAkB,KAvBS,6EAAH,0DA4BpBsB,EAAY,uCAAG,WACnBnB,EACAJ,EACAC,GAHmB,2CAAAC,EAAA,sDAKb6B,EAAsC,GACtCC,EAAe,GAAKhC,EAAMvB,OAC5BwD,EAAW,GACNpD,EAAI,EARM,YAQHA,EAAImB,EAAMvB,QARP,sBASbuB,EAAMnB,GAAGqD,KAAO,KATH,sBAUT,IAAI/B,MAAJ,UAAaH,EAAMnB,GAAGsD,KAAtB,6BAVS,cAaXC,EAAOC,cAbI,UAcEC,YAAMtC,EAAMnB,GAAI,CAAC,eAdnB,eAcXkB,EAdW,OAgBXwC,EAAa1C,EAAQ2C,IAAR,UAAepC,EAAf,YAAqBgC,EAArB,SAhBF,UAiBQG,EAAWE,IAAIzC,EAAMnB,IAjB7B,eAiBX6D,EAjBW,iBAkBSA,EAAWF,IAAIG,iBAlBxB,QAkBXC,EAlBW,OAmBXC,EAAmBD,EAAYE,MAAM,0BACrCC,EAAqB/C,EAAMnB,GAAGsD,KAAKW,MAAM,eACzCE,EArBW,UAqBEH,EArBF,kBAsBXI,EAtBW,UAsBEJ,EAtBF,6BAuBXK,EAvBW,UAuBWL,EAvBX,0BAwBXM,EAxBW,UAwBWN,EAxBX,2BA0BjBd,EAAYqB,KAAK,CACfhD,GAAIgC,EACJiB,SAAS,GAAD,OAAKN,GACbO,eAAgBC,OAAOvD,EAAMnB,GAAGsD,KAAKW,MAAM,QAC3CU,SAAUR,EACVS,aAAcR,EACdS,UAAWR,EACXS,cAAeR,EACfS,UAAU,EACVC,QAAS,GACTC,UAAW/D,EAAOA,EAAKgE,WAAa,OAGtC9D,EADAgC,GAAYD,GAtCK,QAQenD,IARf,gDAyCZkD,GAzCY,4CAAH,0DA4CLiC,EAAoB,uCAAG,WAClCpC,EACAqC,EACAL,GAHkC,eAAA1D,EAAA,6DAK5BgE,EAAWtE,EACdU,WAAW,eACXC,IAAIqB,GACJtB,WAAW,UACXC,IAAI0D,GAT2B,kBAW1BC,EAASrC,OAAO,CAAE+B,aAXQ,4DAa1B,IAAIzD,MAAM,6BAbgB,wDAAH,0DAgBpBgE,EAAkB,uCAAG,WAChCvC,EACAqC,EACAJ,GAHgC,eAAA3D,EAAA,6DAK1BgE,EAAWtE,EACdU,WAAW,eACXC,IAAIqB,GACJtB,WAAW,UACXC,IAAI0D,GATyB,kBAWxBC,EAASrC,OAAO,CAAEgC,YAXM,4DAaxB,IAAI1D,MAAM,2BAbc,wDAAH,0DAiBlBiE,EAAiB,uCAAG,WAC/BxC,EACAR,GAF+B,eAAAlB,EAAA,6DAIzBG,EAAgBT,EAAUU,WAAW,eAAeC,IAAIqB,GAJ/B,kBAMvBvB,EAAcwB,OAAO,CACzBV,OAAQ,YACRC,aAAcA,GAAgB,KARH,4DAWvB,IAAIjB,MAAM,gCAXa,wDAAH,wDAejBkE,EAAY,uCAAG,WAC1BzC,EACA0C,EACAC,GAH0B,6BAAArE,EAAA,sDAK1BqE,EAAkB,GACZlD,EAAYzB,EACfU,WAAW,eACXC,IAAIqB,GACJtB,WAAW,UAER0B,EAAe,IAAMsC,EAAS7F,OAChCwD,EAAW,EAZW,uBAeTqC,GAfS,gEAeflE,EAfe,QAgBhBmC,EAAa1C,EAAQ2C,IAAIZ,GACzB4C,EAASnD,EAAUd,IAAIH,GAjBP,UAkBhBmC,EAAWkC,MAAX,UAAoBrE,EAApB,SAA8BsE,SAlBd,yBAmBhBnC,EAAWkC,MAAX,UAAoBrE,EAApB,oBAAyCsE,SAnBzB,yBAoBhBnC,EAAWkC,MAAX,UAAoBrE,EAApB,iBAAsCsE,SApBtB,yBAqBhBnC,EAAWkC,MAAX,UAAoBrE,EAApB,kBAAuCsE,SArBvB,yBAsBhBF,EAAOE,SAtBS,QAwBtBH,EADAtC,GAAYD,GAvBU,wMA2BxB2C,QAAQC,MAAM,wBAAd,MA3BwB,4HAAH,0DAiCZC,EAAW,uCAAG,WAAOjD,EAAsBJ,GAA7B,uBAAAtB,EAAA,sDACnBmB,EAAYzB,EACfU,WAAW,eACXC,IAAIqB,GACJtB,WAAW,UACRgB,EAAQ1B,EAAU0B,QALC,cAOLE,GAPK,IAOzB,2BAAWC,EAAiB,QAC1BH,EAAMO,OAAOR,EAAUd,IAAIkB,EAAMrB,IAAK,CAAEwD,UAAU,EAAOC,QAAS,KAR3C,uDAWjBvC,EAAMI,SAXW,6DAajB,IAAIvB,MAAJ,wCAbiB,yDAAH,wDAiBX2E,EAAgB,uCAAG,WAC9BlD,EACA2C,GAF8B,iCAAArE,EAAA,6DAI9BqE,EAAkB,GACZlD,EAAYzB,EACfU,WAAW,eACXC,IAAIqB,GACJtB,WAAW,UARgB,SAUFV,EACzBU,WAAW,eACXC,IAAIqB,GAZuB,cAUxBvB,EAVwB,gBAcTgB,EAAUb,MAdD,OAcxBgB,EAdwB,OAgBxBQ,EAAe,IAAMR,EAAOU,KAC9BD,EAAW,EAjBe,wBAoBVT,EAAOuD,MApBG,kEAoBnBtD,EApBmB,QAqBpBc,EAAa1C,EAAQ2C,IAAIZ,GACzB4C,EAASnD,EAAUd,IAAIkB,EAAM1B,OAAOK,IAtBhB,UAuBpBmC,EAAWkC,MAAX,UAAoBhD,EAAM1B,OAAOK,GAAjC,SAA2CsE,SAvBvB,yBAwBpBnC,EAAWkC,MAAX,UAAoBhD,EAAM1B,OAAOK,GAAjC,oBAAsDsE,SAxBlC,yBAyBpBnC,EAAWkC,MAAX,UAAoBhD,EAAM1B,OAAOK,GAAjC,iBAAmDsE,SAzB/B,yBA0BpBnC,EAAWkC,MAAX,UAAoBhD,EAAM1B,OAAOK,GAAjC,kBAAoDsE,SA1BhC,yBA2BpBF,EAAOE,SA3Ba,QA6B1BH,EADAtC,GAAYD,GA5Bc,kKA+BtB3B,EAAcqE,SA/BQ,kEAiC5BC,QAAQC,MAAM,4BAAd,MAjC4B,8HAAH,wDAuChBI,EAAc,uCAAG,oCAAA9E,EAAA,6DAC5ByE,QAAQM,IAAI,uBACNC,EAAiC,GAFX,SAGFtF,EACvBU,WAAW,eACX6E,QAAQ,cAAe,QACvB3E,MANyB,OAGtB4E,EAHsB,qBAOHA,EAAYL,MAPT,aAAA7E,EAAA,0CAAAA,EAAA,6DAOjBI,EAPiB,iBAQLV,EAClBU,WAAW,eACXC,IAAID,EAAWF,IACfE,WAAW,UACX6E,QAAQ,aACR3E,MAbuB,OAQpBgB,EARoB,OAcpBO,EAAuB,GACzBsD,EAAQ,EACZ7D,EAAO8D,SAAQ,SAAC7D,GACd,IAAM8D,EAAW,CACfF,QACAjF,GAAIqB,EAAM1B,OAAOK,GACjBoD,SAAU/B,EAAM1B,OAAOyD,SACvBC,aAAchC,EAAM1B,OAAO0D,aAC3BC,UAAWjC,EAAM1B,OAAO2D,UACxBC,cAAelC,EAAM1B,OAAO4D,cAC5BN,SAAU5B,EAAM1B,OAAOsD,SACvBC,eAAgB7B,EAAM1B,OAAOuD,eAC7BM,SAAUnC,EAAM1B,OAAO6D,SACvBC,QAASpC,EAAM1B,OAAO8D,QACtBC,UAAWrC,EAAM1B,OAAO+D,WAE1B/B,EAAYqB,KAAKmC,GACjBF,OAEIG,EAAgB,CACpBpF,GAAIE,EAAWF,GACfO,MAAOL,EAAWP,OAAOY,MACzBK,YAAaV,EAAWP,OAAOiB,YAC/BJ,UAAWN,EAAWP,OAAOa,UAC7BC,UAAWP,EAAWP,OAAOc,UAC7BC,cAAeR,EAAWP,OAAOe,cACjCK,OAAQb,EAAWP,OAAOoB,OAC1BC,aAAcd,EAAWP,OAAOqB,aAChCI,OAAQO,GAEVmD,EAAiB9B,KAAKoC,GA5CI,sSA8CrBN,GA9CqB,gEAAH,qDAiDdO,EAAmB,uCAAG,WAAOrF,GAAP,qCAAAF,EAAA,6DACjCyE,QAAQM,IAAI,6BADqB,kBAGNrF,EAAUU,WAAW,eAAeC,IAAIH,GAAII,MAHtC,cAGzBF,EAHyB,gBAIVV,EAClBU,WAAW,eACXC,IAAIH,GACJE,WAAW,UACX6E,QAAQ,aACR3E,MAT4B,cAIzBgB,EAJyB,OAUzBO,EAAuB,GACzBsD,EAAQ,EACZ7D,EAAO8D,SAAQ,SAAC7D,GACd,IAAM8D,EAAW,CACfF,QACAjF,GAAIqB,EAAM1B,OAAOK,GACjBoD,SAAU/B,EAAM1B,OAAOyD,SACvBC,aAAchC,EAAM1B,OAAO0D,aAC3BC,UAAWjC,EAAM1B,OAAO2D,UACxBC,cAAelC,EAAM1B,OAAO4D,cAC5BN,SAAU5B,EAAM1B,OAAOsD,SACvBC,eAAgB7B,EAAM1B,OAAOuD,eAC7BM,SAAUnC,EAAM1B,OAAO6D,SACvBC,QAASpC,EAAM1B,OAAO8D,QACtBC,UAAWrC,EAAM1B,OAAO+D,WAE1B/B,EAAYqB,KAAKmC,GACjBF,OAGIG,EAAgB,CACpBpF,GAAIE,EAAWF,GACfO,MAAK,UAAEL,EAAWP,cAAb,aAAE,EAAmBY,MAC1BK,YAAW,UAAEV,EAAWP,cAAb,aAAE,EAAmBiB,YAChCJ,UAAS,UAAEN,EAAWP,cAAb,aAAE,EAAmBa,UAC9BC,UAAS,UAAEP,EAAWP,cAAb,aAAE,EAAmBc,UAC9BC,cAAa,UAAER,EAAWP,cAAb,aAAE,EAAmBe,cAClCK,OAAM,UAAEb,EAAWP,cAAb,aAAE,EAAmBoB,OAC3BC,aAAY,UAAEd,EAAWP,cAAb,aAAE,EAAmBqB,aACjCI,OAAQO,GAvCqB,kBAyCxByD,GAzCwB,wCA2CzB,IAAIrF,MAAM,oCA3Ce,0DAAH,sDA+CnBuF,EAAgB,uCAAG,WAC9B9D,EACAT,GAF8B,eAAAjB,EAAA,6DAIxBG,EAAgBT,EAAUU,WAAW,eAAeC,IAAIqB,GAJhC,kBAOtBvB,EAAcwB,OAAO,CAAEV,WAPD,4DAStB,IAAIhB,MAAM,qCATY,wDAAH,wD,6LEtVdwF,GApC+C,SAAC,GAOxD,IANLC,EAMI,EANJA,WACA3D,EAKI,EALJA,SACA4D,EAII,EAJJA,cACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,kBAEA,OACE,gBAACC,EAAA,EAAD,CAAQC,KAAMN,EAAd,UACE,eAACO,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,SAAsC2F,IACtC,gBAACK,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAmBjG,GAAG,2BAAtB,SACG4F,IAEF/D,EACC,eAACqE,EAAA,EAAD,CAAgBC,QAAQ,cAAcC,MAAOvE,IAC3C,QAEN,gBAACwE,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEC,WAAY1E,EACZ2E,QAASf,EACTgB,MAAM,UACNC,WAAS,EAJX,oBAQA,eAACJ,GAAA,EAAD,CAAQC,WAAY1E,EAAU2E,QAASd,EAAce,MAAM,YAA3D,wBC6FOE,GA1HkB,WAAO,IAAD,EACCC,mBAA8B,MAD/B,mBAC9B5B,EAD8B,KACjB6B,EADiB,OAEOD,mBAAS,GAFhB,mBAE9BE,EAF8B,KAEd3C,EAFc,OAGDyC,oBAAS,GAHR,mBAG9BpB,EAH8B,KAGlBuB,EAHkB,OAISH,mBAAS,IAJlB,mBAI9BI,EAJ8B,KAIbC,EAJa,OAKaL,mBAAS,IALtB,mBAK9BM,EAL8B,KAKXC,EALW,KAM/BC,EAAUC,cAEhBC,qBAAU,WACR1C,IAAiB2C,MAAK,SAAC5H,GAAD,OAAUkH,EAAelH,QAC9C,IAEH,IAiBM6H,EAAW,uCAAG,4BAAA1H,EAAA,sEACZ4E,EAAiBsC,EAAiB7C,GADtB,OAElB4C,GAAc,GACd5C,EAAkB,GACda,IACIyC,EAA0BzC,EAAY0C,QAC1C,SAACxH,GAAD,OAAgBA,EAAWF,KAAOgH,OAGlCH,EAAeY,GATD,2CAAH,qDAcXE,EAAiB,SAACnG,GACtB4F,EAAQpE,KAAR,eAAqBxB,KAGvB,OAAoB,OAAhBwD,EAEA,gBAAC4C,EAAA,EAAD,CAAU9B,MAAM,EAAhB,UACE,eAAC+B,EAAA,EAAD,CAAkBpB,MAAM,YAD1B,OAMA,iCACE,eAACqB,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAWC,MAAM,MAAjB,yBACA,eAACD,EAAA,EAAD,CAAWC,MAAM,MAAjB,kBACA,eAACD,EAAA,EAAD,CAAWC,MAAM,MAAjB,oBACA,eAACD,EAAA,EAAD,8BACA,eAACA,EAAA,EAAD,SAGJ,eAACE,EAAA,EAAD,UACGpD,EAAYqD,KAAI,SAACnI,GAChB,OACE,gBAAC+H,EAAA,EAAD,CAA8BK,OAAO,EAArC,UACE,eAACJ,EAAA,EAAD,CAAW1B,QAAS,kBAAMmB,EAAezH,EAAWF,KAApD,SACGE,EAAWkB,OAAO,GACjB,qCACE,yBACEmH,OAAQrI,EAAWkB,OAAO,GAAGmC,cAC7BiF,KAAK,eAEP,sBACEC,IAAKvI,EAAWkB,OAAO,GAAGkC,UAC1BoF,IAAI,uBACJC,UAAWC,IAAOtF,eAGpB,OAEN,eAAC4E,EAAA,EAAD,CAAW1B,QAAS,kBAAMmB,EAAezH,EAAWF,KAApD,SACGE,EAAWK,QAEd,eAAC2H,EAAA,EAAD,CAAW1B,QAAS,kBAAMmB,EAAezH,EAAWF,KAApD,SACGE,EAAWa,SAEd,gBAACmH,EAAA,EAAD,CAAW1B,QAAS,kBAAMmB,EAAezH,EAAWF,KAApD,WAhFMoB,EAiFYlB,EAAWkB,OAhFtCA,EAAOsG,QAAO,SAACrG,GAAD,OAAWA,EAAMmC,YAAUnF,QA+EhC,IAEG6B,EAAWkB,OAAO/C,UAErB,eAAC6J,EAAA,EAAD,CAAWW,MAAM,QAAjB,SACE,eAACC,EAAA,EAAD,CACEtC,QAAS,SAACuC,GAAD,OAlFP,SAACvH,GAGvB,GAFAuF,GAAc,GACdE,EAAmBzF,GACfwD,EAAa,CACf,IAAMgE,EAAqBhE,EAAYiE,MACrC,SAAC/I,GAAD,OAAgBA,EAAWF,KAAOwB,KAEhCwH,GACF7B,EAAqB6B,EAAmBzI,QA0EJ2I,CAAgBhJ,EAAWF,KADjD,SAGE,eAAC,IAAD,UA9BSE,EAAWF,IA1DnB,IAACoB,YAiGlB,eAAC,GAAD,CACEoE,WAAYA,EACZ3D,SAAUiF,EACVrB,cAAe,kBAAMsB,GAAc,IACnCrB,aAAc8B,EACd7B,YAAW,mDAA8CuB,EAA9C,MACXtB,kBAAmB,0C,UC/GduD,GAlBa,WAC1B,OACE,iCACE,eAACC,GAAA,EAAD,CAAYjD,QAAQ,KAApB,uBACA,iCAEE,eAACG,GAAA,EAAD,CAAQ+C,GAAG,YAAYC,UAAWC,IAAMpD,QAAQ,WAAhD,sBAGA,eAACG,GAAA,EAAD,CAAQ+C,GAAG,OAAOC,UAAWC,IAAMpD,QAAQ,WAA3C,sCAIF,eAAC,GAAD,Q,uFCwMSqD,GA9LiB,WAAO,IAAD,EAQhCC,eANFC,EAFkC,EAElCA,SACAC,EAHkC,EAGlCA,aACAC,EAJkC,EAIlCA,MACAC,EALkC,EAKlCA,OACAC,EANkC,EAMlCA,UACAC,EAPkC,EAOlCA,QAPkC,EASFnD,oBAAS,GATP,mBAS7BoD,EAT6B,KASlBC,EATkB,OAUQrD,mBAAS,GAVjB,mBAU7BsD,EAV6B,KAUbC,EAVa,OAWQvD,oBAAS,GAXjB,mBAW7BwD,EAX6B,KAWbC,EAXa,KAY9BjD,EAAUC,cAEViD,EAAYV,EAAM,qBAClBW,EAAYX,EAAM,qBAElBY,EAAQ,uCAAG,WAAO7K,GAAP,eAAAG,EAAA,6DACfyE,QAAQM,IAAIlF,GACZsK,GAAa,GAFE,SAGYvK,EACzB,CACEa,MAAOZ,EAAKY,MACZC,UAAW,CACTiK,SAAU9K,EAAK+K,kBACfC,KAAMhL,EAAKiL,eAEbnK,UAAW,CACTgK,SAAU9K,EAAKkL,kBACfF,KAAMhL,EAAKmL,eAEbpK,cAAef,EAAKe,eAEtBf,EAAKC,MACLuK,GAjBa,OAGT3I,EAHS,OAmBfyI,GAAa,GACbI,GAAkB,GAClBjD,EAAQpE,KAAR,gBAAsBxB,IArBP,2CAAH,sDAwBd,OAAK4I,EASH,iCACE,eAAC9D,GAAA,EAAD,CAAQ+C,GAAG,IAAIC,UAAWC,IAAMpD,QAAQ,WAAxC,oBAGA,eAACiD,GAAA,EAAD,CAAYjD,QAAQ,KAApB,4BACA,wBAAMqE,SAAUb,EAAaa,GAA7B,UACE,iCACE,eAAClE,GAAA,EAAD,CAAQG,MAAM,UAAUN,QAAQ,YAAYqC,KAAK,SAAjD,oBAGCwB,EACC,eAACe,GAAA,EAAD,CAAKC,EAAG,MAAR,SACE,eAAC9E,EAAA,EAAD,CAAgBC,QAAQ,cAAcC,MAAO8D,MAG/C,eAACa,GAAA,EAAD,CAAKC,EAAG,WAGZ,eAACC,GAAA,EAAD,CACElJ,KAAK,QACLmJ,SAAUxB,EAAS,CAAEe,UAAU,EAAMU,UAAW,KAChDhF,QAAQ,WACRiF,MAAM,QACN5G,QAASqF,EAAOtJ,MAChB8K,WAAYxB,EAAOtJ,MAAQ,oBAAsB,MAEnD,+BACE,eAAC+K,GAAA,EAAD,CAAkBvB,QAAS,eAACwB,GAAA,EAAD,IAAcH,MAAM,sBAEjD,+BACE,eAACE,GAAA,EAAD,CACEvB,QAAS,eAACwB,GAAA,EAAD,CAAUxJ,KAAK,gBAAgBmJ,SAAUxB,IAClD0B,MAAM,qBAGV,eAAChC,GAAA,EAAD,CAAYjD,QAAQ,YAApB,8BACA,iCACE,eAACmF,GAAA,EAAD,CACEvB,QAAS,eAACwB,GAAA,EAAD,CAAUxJ,KAAK,oBAAoBmJ,SAAUxB,IACtD0B,MAAM,YAER,sBAAKI,MAAO,CAAEC,QAASnB,EAAY,SAAW,QAA9C,SACE,eAACW,GAAA,EAAD,CACElJ,KAAK,gBACLyG,KAAK,SACLrC,QAAQ,WACRrE,KAAK,QACL4J,WAAY,CACVC,WAAY,CACVC,IAAK,IACLC,IAAK,IAGTX,SAAUxB,EAAS,CACjBmC,IAAK,IACLD,IAAK,MACLE,eAAe,EACfC,SAAU,CACRC,aAAc,SAAC5F,GAAD,OACX0D,EAAU,sBACXA,EAAU,kBAAoB1D,MAGpC5B,QAASqF,EAAOe,cAChBS,WACExB,EAAOe,eAAiB,2CAKhC,iCACE,eAACU,GAAA,EAAD,CACEvB,QAAS,eAACwB,GAAA,EAAD,CAAUxJ,KAAK,oBAAoBmJ,SAAUxB,IACtD0B,MAAM,YAER,sBAAKI,MAAO,CAAEC,QAASlB,EAAY,SAAW,QAA9C,SACE,eAACU,GAAA,EAAD,CACElJ,KAAK,gBACLyG,KAAK,SACLrC,QAAQ,WACRrE,KAAK,QACL4J,WAAY,CACVC,WAAY,CACVC,IAAK,IACLC,IAAK,IAGTX,SAAUxB,EAAS,CACjBmC,IAAK,IACLD,IAAK,MACLE,eAAe,EACfC,SAAU,CACRE,cAAe,SAAC7F,GAAD,OACZ0D,EAAU,sBACXA,EAAU,kBAAoB1D,MAGpC5B,QAASqF,EAAOiB,cAChBO,WACExB,EAAOiB,eAAiB,2CAKhC,eAAC,KAAD,CACE/I,KAAK,QACLgI,QAASA,EACTmC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN,eAAC,KAAD,CACEC,cAAe,CAAC,cAChBC,aAAc,sCACdF,SAAU,SAACvM,GAET,OADA2E,QAAQM,IAAIjF,GACLuM,EAAS,aAAIvM,KAEtB0M,WAAY,IACZC,mBAAoB,CAClBC,UAAW5D,KAAO6D,iBAClBC,KAAK,GAAD,OAAK9D,KAAO+D,YAAZ,kBACJC,MAAOhE,KAAOiE,cAEhBC,iBAAkB,CAChBN,UAAW,CACTO,QAAS,GAEXL,KAAM,CAAEM,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAE5BC,YAAY,EACZC,wBAAwB,EACxBC,cAAc,EACdC,wBAAwB,EACxBC,cAAe,2BA1IvB,gBAAC3F,EAAA,EAAD,CAAU9B,MAAM,EAAhB,UACE,eAAC+B,EAAA,EAAD,CAAkBpB,MAAM,YAD1B,QCrCS+G,GA5BY,WACzB,OACE,iCACE,eAAC,IAAD,CAAMnE,GAAG,IAAT,SACE,6CAEF,2CACA,kCACE,8CACY,wBAAOb,KAAK,cAExB,oDACkB,wBAAOA,KAAK,YAE9B,sDACoB,wBAAOqD,IAAI,IAAIrD,KAAK,cAExC,wDACsB,wBAAOqD,IAAI,IAAID,IAAI,MAAMpD,KAAK,cAEpD,+BACE,oDCqCKiF,GA3DA,WAAO,IAAD,EACkChE,eAA7CC,EADW,EACXA,SAAUC,EADC,EACDA,aAAcE,EADb,EACaA,OAAQ6D,EADrB,EACqBA,SAElCC,EAAiC,uCAAG,WAAOhO,GAAP,SAAAG,EAAA,+EAEhCP,EAAKqO,2BAA2BjO,EAAKkO,MAAOlO,EAAKmO,UAFjB,uDAItCJ,EAAS,QAAS,CAChBK,QAAS,MAEXL,EAAS,WAAY,CACnBK,QAAS,mCAEXxJ,QAAQC,MAAM,0CAAd,MAVsC,yDAAH,sDAcvC,OACE,iCACE,eAAC4E,GAAA,EAAD,CAAYjD,QAAQ,KAApB,qBACA,eAAC4E,GAAA,EAAD,CAAKiD,GAAI,EAAT,SACE,wBAAMxD,SAAUb,EAAagE,GAA7B,UACE,+BACE,eAAC1C,GAAA,EAAD,CACE9E,QAAQ,WACRpE,KAAK,QACLqJ,MAAM,QACNF,SAAUxB,EAAS,CAAEe,UAAU,IAC/BjG,QAASqF,EAAOgE,MAChBxC,WACExB,EAAOgE,MAAQhE,EAAOgE,MAAME,SAAW,oBAAsB,QAInE,+BACE,eAAC9C,GAAA,EAAD,CACEzC,KAAK,WACLrC,QAAQ,WACRpE,KAAK,WACLqJ,MAAM,WACNF,SAAUxB,EAAS,CAAEe,UAAU,IAC/BjG,QAASqF,EAAOiE,SAChBzC,WACExB,EAAOiE,SACHjE,EAAOiE,SAASC,SAAW,uBAC3B,QAIV,+BACE,eAACzH,GAAA,EAAD,CAAQkC,KAAK,SAASrC,QAAQ,WAA9B,gC,0MCeG8H,GAnDoC,SAAC,GAM7C,IALLC,EAKI,EALJA,eACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,iBACAC,EACI,EADJA,eAEA,OACE,eAAC,KAAD,CACEC,QACEC,mBACIN,EAAeE,GAAe/K,aAC9B6K,EAAeE,GAAehL,SAEpCqL,QACED,mBACIN,GAAgBE,EAAgB,GAAKF,EAAe7P,QACjDgF,aACH6K,GAAgBE,EAAgB,GAAKF,EAAe7P,QAAQ+E,SAElEsL,QACEF,mBACIN,GACGE,EAAgBF,EAAe7P,OAAS,GACvC6P,EAAe7P,QACjBgF,aACF6K,GACGE,EAAgBF,EAAe7P,OAAS,GACvC6P,EAAe7P,QACjB+E,SAERuL,eAAgB,kBAAMR,GAAgB,IACtCS,kBAAmB,kBACjBP,GACGD,EAAgBF,EAAe7P,OAAS,GAAK6P,EAAe7P,SAGjEwQ,kBAAmB,kBACjBR,GAAkBD,EAAgB,GAAKF,EAAe7P,SAExDiQ,eAAgBA,EAChBQ,YAAY,EACZC,WACE,gBAAC3F,GAAA,EAAD,CAAY4F,QAAS,CAAEC,KAAMrG,KAAOsG,YAApC,UACGhB,EAAeE,GAAenJ,MADjC,UC4COkK,GAxF+B,SAAC,GAYxC,IAXLjP,EAWI,EAXJA,WACAgO,EAUI,EAVJA,eACAkB,EASI,EATJA,aACAjB,EAQI,EARJA,gBACAkB,EAOI,EAPJA,aACAC,EAMI,EANJA,iBACAJ,EAKI,EALJA,WACAK,EAII,EAJJA,cACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,eACAC,EACI,EADJA,gBAEA,OACE,iCACE,sBAAK/G,UAAWC,KAAO+G,UAAvB,SACGzB,EAAe7F,KAAI,SAAChH,EAAO4D,GAC1B,OACE,sBAAK0D,UAAWC,KAAOgH,mBAAvB,SACE,uBAAKjH,UAAWC,KAAOiH,UAAvB,UACE,qCACE,yBAAQtH,OAAQlH,EAAMkC,cAAeiF,KAAK,eAC1C,sBACEC,IAAKpH,EAAMiC,UACXoF,IAAKxI,EAAWK,MAChBiG,QAAS6I,EAAalM,OAAO8B,SAGhC5D,EAAMoC,QAAQpF,OAAS,GAAK6B,EAAWQ,cACtC,eAACoI,EAAA,EAAD,CACEH,UAAWC,KAAOkH,iBAClBtJ,QAAS,kBAAM8I,EAAiBrK,IAFlC,SAIE,eAAC,KAAD,MAEA,KACH5D,EAAMmC,SACL,eAACsF,EAAA,EAAD,CAAYH,UAAWC,KAAOmH,gBAA9B,SACE,eAAC,KAAD,MAEA,SAtBwC1O,EAAMrB,SA4B3DoP,GAAgBlB,EAAe7P,OAAS,GACvC,eAAC2R,GAAD,CACE9B,eAAgBA,EAChBC,gBAAiBA,EACjBC,cAAec,EACfb,iBAAkBkB,EAClBjB,eAAgB,CACd,eAACxF,EAAA,EAAD,UACGoF,EAAegB,GAAY1L,SAC1B,eAAC,KAAD,CAAUmF,UAAWC,KAAOqH,cAE5B,eAAC,KAAD,CAAgBtH,UAAWC,KAAOqH,gBAGtC/P,EAAWQ,cACT,eAACoI,EAAA,EAAD,CAAYtC,QAAS,kBAAM8I,KAA3B,SACGpB,EAAegB,GAAYzL,QAAQpF,OAAS,EAC3C,eAAC,KAAD,CAAasK,UAAWC,KAAOqH,cAE/B,eAAC,KAAD,CAAuBtH,UAAWC,KAAOqH,gBAG3C,QAIV,gBAACpK,EAAA,EAAD,CAAQC,KAAM0J,EAAaU,QAAS,kBAAMT,GAAe,IAAzD,UACE,eAAC1J,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,qBACA,eAACgG,EAAA,EAAD,UACE,eAACiF,GAAA,EAAD,CACEkF,WAAS,EACTC,KAAM,EACNjK,QAAQ,WACRC,MAAOsJ,EACPnJ,UAAQ,a,6BCiPL8J,GAxTqC,SAAC,GAgB9C,IAfLnQ,EAeI,EAfJA,WACAoQ,EAcI,EAdJA,cACA9O,EAaI,EAbJA,aACA0M,EAYI,EAZJA,eACAkB,EAWI,EAXJA,aACAjB,EAUI,EAVJA,gBACAkB,EASI,EATJA,aACAC,EAQI,EARJA,iBACAJ,EAOI,EAPJA,WACAK,EAMI,EANJA,cACAC,EAKI,EALJA,YACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,gBACAa,EAEI,EAFJA,mBACAC,EACI,EADJA,eACI,EAC8C5J,oBAAS,GADvD,mBACG6J,EADH,KACsBC,EADtB,OAE+BjH,aAAa,CAC9CkH,cAAe,CAAE/Q,MAAO,MADlB8J,EAFJ,EAEIA,SAAUC,EAFd,EAEcA,aAFd,EAK0D/C,oBAAS,GALnE,mBAKGgK,EALH,KAK4BC,EAL5B,KA6EEC,EAAiB,uCAAG,WAAOnR,GAAP,SAAAG,EAAA,6DACxByE,QAAQM,IAAIlF,GADY,SAElBqE,EAAkBxC,EAAc7B,EAAKqB,cAFnB,OAGxB0P,GAAqB,GACrBJ,EAAc,6BACTpQ,GADQ,IAEXa,OAAQ,YACRC,aAAcrB,EAAKqB,gBAPG,2CAAH,sDAWvB,OACE,iCACE,sBAAK2H,UAAWC,KAAO+G,UAAvB,SACGzB,EAAe7F,KAAI,SAAChH,EAAO4D,GAC1B,OACE,sBAAK0D,UAAWC,KAAOgH,mBAAvB,SACE,uBAAKjH,UAAWC,KAAOiH,UAAvB,UACE,qCACE,yBAAQtH,OAAQlH,EAAMkC,cAAeiF,KAAK,eAC1C,sBACEC,IAAKpH,EAAMiC,UACXoF,IAAKxI,EAAWK,MAChBiG,QAAS6I,EAAalM,OAAO8B,SAGhC/E,EAAWQ,cACV,eAACoI,EAAA,EAAD,CACEH,UACEtH,EAAMoC,QAAQpF,OAAS,EACnBuK,KAAOkH,iBACPlH,KAAOmI,WAEbvK,QAAS,kBAAM8I,EAAiBrK,IANlC,SAQG5D,EAAMoC,QAAQpF,OAAS,EACtB,eAAC,KAAD,IAEA,eAAC,KAAD,MAGF,KAEJ,eAACyK,EAAA,EAAD,CACEH,UACEtH,EAAMmC,SAAWoF,KAAOmH,gBAAkBnH,KAAOoI,QAEnDxK,SArHK3C,EAqHgBxC,EAAMrB,GArHF,SAAC+I,GACxC,IACE,IAAMkI,EAAY,OAAG/Q,QAAH,IAAGA,OAAH,EAAGA,EAAYkB,OAAO6H,MACtC,SAAC5H,GAAD,OAAWA,EAAMrB,KAAO6D,KAEtBoN,GAAgB/Q,IAClB0D,EAAqBpC,EAAcqC,GAAUoN,EAAazN,UAC1DyN,EAAazN,WAAW,OAACyN,QAAD,IAACA,OAAD,EAACA,EAAczN,UACvC8M,EAAc,6BACTpQ,GADQ,IAEXkB,OAAQlB,EAAWkB,OAAOiH,KAAI,SAAChH,GAAD,OAC5BA,EAAMrB,KAAO6D,EAAUoN,EAAe5P,SAI5C,MAAO6P,OAkGG,SAMG7P,EAAMmC,SAAW,eAAC,KAAD,IAAe,eAAC,KAAD,UAjCSnC,EAAMrB,IAtF5C,IAAC6D,OA8HhBuL,GAAgBlB,EAAe7P,OAAS,GACvC,eAAC2R,GAAD,CACE9B,eAAgBA,EAChBC,gBAAiBA,EACjBC,cAAec,EACfb,iBAAkBkB,EAClBjB,eAAgB,CACd,eAACxF,EAAA,EAAD,CAAYtC,QAjHM,WAC1B,GAAI0H,GAAkBhO,EACpB,IACE,IAAM+Q,EAAe/C,EAAegB,GAChC+B,GAAgB/Q,IAClB0D,EACEpC,EACAyP,EAAajR,IACZiR,EAAazN,UAEhByN,EAAazN,WAAW,OAACyN,QAAD,IAACA,OAAD,EAACA,EAAczN,UACvC8M,EAAc,6BACTpQ,GADQ,IAEXkB,OAAQlB,EAAWkB,OAAOiH,KAAI,SAAChH,GAAD,OAC5BA,EAAMrB,KAAOiR,EAAajR,GAAKiR,EAAe5P,SAIpD,MAAO6P,GACP3M,QAAQC,MAAM0M,KA8FV,SACGhD,EAAegB,GAAY1L,SAC1B,eAAC,KAAD,CAAUmF,UAAWC,KAAOqH,cAE5B,eAAC,KAAD,CAAgBtH,UAAWC,KAAOqH,gBAGtC/P,EAAWQ,cACT,eAACoI,EAAA,EAAD,CAAYtC,QAAS,kBAAM8I,KAA3B,SACGpB,EAAegB,GAAYzL,QAAQpF,OAAS,EAC3C,eAAC,KAAD,CAAasK,UAAWC,KAAOqH,cAE/B,eAAC,KAAD,CAAuBtH,UAAWC,KAAOqH,gBAG3C,QAKV,gBAACpK,EAAA,EAAD,CAAQC,KAAM0J,EAAaU,QAAS,kBAAMT,GAAe,IAAzD,UACE,eAAC1J,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,qBACA,eAACgG,EAAA,EAAD,UACE,eAACiF,GAAA,EAAD,CACEkF,WAAS,EACTC,KAAM,EACNjK,QAAQ,WACRC,MAAOsJ,EACPvD,SAhGoB,SAACgF,GAC7BA,EAAEC,iBACFb,EAAmBY,EAAEE,OAAOjL,YAiGxB,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEE,QAAS,kBAAMiJ,GAAe,IAC9BhJ,MAAM,YACNC,WAAS,EAHX,oBAOA,eAACJ,GAAA,EAAD,CAAQE,QAhIS,WAEvB,GADAiJ,GAAe,GACXvB,GAAkBhO,EACpB,IACE,IAAM+Q,EAAe/C,EAAegB,GAChC+B,GAAgB/Q,IAClB6D,EAAmBvC,EAAcyP,EAAajR,GAAI0P,GAClDuB,EAAaxN,QAAUiM,EACvBY,EAAc,6BACTpQ,GADQ,IAEXkB,OAAQlB,EAAWkB,OAAOiH,KAAI,SAAChH,GAAD,OAC5BA,EAAMrB,KAAOiR,EAAajR,GAAKiR,EAAe5P,SAIpD,MAAO6P,GACP3M,QAAQC,MAAM0M,KAgHuBzK,MAAM,UAAzC,wBAMJ,eAACH,GAAA,EAAD,CACEH,QAAQ,YACR6I,QAAS,CAAEC,KAAMrG,KAAO0I,UACxB9K,QAAS,WACP,OAAIgK,IAECtQ,EAAWM,UAAUiK,UACpB+F,EAAiBtQ,EAAWM,UAAUmK,MACvCzK,EAAWO,UAAUgK,UACpB+F,EAAiBtQ,EAAWO,UAAUkK,MAEjCkG,GAA2B,GAG/BH,GAAqB,IAdhC,gCAoBA,gBAAC7K,EAAA,EAAD,CACEC,KAAM8K,EACNV,QAAS,kBAAMW,GAA2B,IAF5C,UAIE,eAAC9K,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,4CAGA,eAACgG,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,gCACoB,kCAASuK,IAD7B,eACkE,IAC/DtQ,EAAWM,UAAUiK,UAAYvK,EAAWO,UAAUgK,SACrD,oDACkB,IAChB,4CACQvK,EAAWM,UAAUmK,KAD7B,MACsC,IACnCzK,EAAWO,UAAUkK,QACd,IALZ,aAQEzK,EAAWM,UAAUiK,WACtBvK,EAAWO,UAAUgK,SACtB,oDACkB,IAChB,gDAAkBvK,EAAWM,UAAUmK,QAFzC,eAIGzK,EAAWM,UAAUiK,UACxBvK,EAAWO,UAAUgK,SACrB,oDACkB,IAChB,oDAAsBvK,EAAWO,UAAUkK,QAAe,IAF5D,aAKE,KAAM,SAGd,eAACtE,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACEE,QAAS,kBAAMqK,GAA2B,IAC1CpK,MAAM,UACNC,WAAS,EAHX,yBAUJ,eAACb,EAAA,EAAD,CACEC,KAAM2K,EACNP,QAAS,kBAAMQ,GAAqB,IAFtC,SAIE,wBAAMlG,SAAUb,EAAamH,GAA7B,UACE,eAAC/K,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,gCACA,gBAACgG,EAAA,EAAD,WACE,gBAACC,EAAA,EAAD,gCACoB,oCAASuK,EAAT,aADpB,OAGA,eAACvK,EAAA,EAAD,oDAGA,eAACgF,GAAA,EAAD,CACEkF,WAAS,EACTC,KAAM,EACNmB,WAAS,EACTpL,QAAQ,WACRqL,YAAY,gBACZzP,KAAK,eACLmJ,SAAUxB,IAEZ,gBAACzD,EAAA,EAAD,WACE,+CADF,sEAKF,gBAACI,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEE,QAAS,kBAAMkK,GAAqB,IACpCjK,MAAM,YACNC,WAAS,EAHX,oBAOA,eAACJ,GAAA,EAAD,CAAQkC,KAAK,SAAS/B,MAAM,UAA5B,iCCjKGgL,GAtJkB,WAAO,IAC1BjQ,EAAiBkQ,cAArB1R,GAD6B,EAED4G,mBAA4B,MAF3B,mBAE9B1G,EAF8B,KAElBoQ,EAFkB,OAGO1J,mBAAkB,IAHzB,mBAG9BsH,EAH8B,KAGdyD,EAHc,OAIT/K,mBAAS,OAJA,mBAI9Bc,EAJ8B,KAItBkK,EAJsB,OAKGhL,oBAAS,GALZ,mBAK9BwI,EAL8B,KAKhBjB,EALgB,OAMDvH,mBAAS,GANR,mBAM9BsI,EAN8B,KAMlBK,EANkB,OAOS3I,mBAAS,IAPlB,mBAO9B8I,EAP8B,KAOba,EAPa,OAQC3J,oBAAS,GARV,mBAQ9B4I,EAR8B,KAQjBC,EARiB,KAUrCnI,qBAAU,WACRjC,EAAoB7D,GAAc+F,MAAK,SAACrH,GACtCoQ,EAAcpQ,GACdyR,EAAkBzR,EAAWkB,aAE9B,CAACI,IAEJ8F,qBAAU,WACR,GAAIpH,EACF,OAAQwH,GACN,IAAK,MACH,OAAOiK,EAAkBzR,EAAWkB,QACtC,IAAK,WACH,IAAMoP,EAAiBtQ,EAAWkB,OAAOsG,QACvC,SAACrG,GAAD,OAAWA,EAAMmC,YAOnB,OAL8B,IAA1BgN,EAAenS,OACjB8P,GAAgB,GACPqC,EAAenS,QAAU6Q,GAClCK,EAAciB,EAAenS,OAAS,GAEjCsT,EAAkBnB,GAC3B,IAAK,aACH,IAAMqB,EAAmB3R,EAAWkB,OAAOsG,QACzC,SAACrG,GAAD,OAAYA,EAAMmC,YAQpB,OANgC,IAA5BqO,EAAiBxT,OACnB8P,GAAgB,GACP0D,EAAiBxT,QAAU6Q,GACpCK,EAAcsC,EAAiBxT,OAAS,GAGnCsT,EAAkBE,MAI9B,CAACnK,EAAQxH,IAEZ,IAIMoP,EAAmB,SAACrK,GACxBwK,GAAe,GACXvB,IACEjJ,GACFsK,EAActK,GACdsL,EAAmBrC,EAAejJ,GAAOxB,UAEzC8M,EAAmBrC,EAAegB,GAAYzL,WAK9C4L,EAAe,SAACpK,GAAD,OAAmB,SAAC8D,GACvCwG,EAActK,GACdkJ,GAAgB,KAGZqC,EAAc,OAAGtQ,QAAH,IAAGA,OAAH,EAAGA,EAAYkB,OAAOsG,QAAO,SAACrG,GAAD,OAAWA,EAAMmC,YAC/DnF,OAEH,OAAmB,OAAf6B,EAEA,gBAAC0H,EAAA,EAAD,CAAU9B,MAAM,EAAhB,UACE,eAAC+B,EAAA,EAAD,CAAkBpB,MAAM,YAD1B,OAOF,iCACE,gBAAC2C,GAAA,EAAD,CAAYjD,QAAQ,KAApB,UACGjG,EAAWK,MADd,IAC4C,cAAtBL,EAAWa,QAA0B,eAAC,KAAD,OAE3D,gBAACqI,GAAA,EAAD,CAAYjD,QAAQ,KAApB,uBAAoCqK,KACnCtQ,EAAWM,UAAUiK,UAAYvK,EAAWO,UAAUgK,SACrD,gBAACrB,GAAA,EAAD,mCACwBlJ,EAAWM,UAAUmK,KAD7C,MACsD,IACnDzK,EAAWO,UAAUkK,KAFxB,aAIEzK,EAAWM,UAAUiK,WAAavK,EAAWO,UAAUgK,SACzD,gBAACrB,GAAA,EAAD,uCAC4BlJ,EAAWM,UAAUmK,KADjD,cAGGzK,EAAWM,UAAUiK,UAAYvK,EAAWO,UAAUgK,SACzD,gBAACrB,GAAA,EAAD,2CACgClJ,EAAWO,UAAUkK,KADrD,aAGE,KACJ,gBAACmH,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,qBACA,gBAACC,GAAA,EAAD,CAAQ5L,MAAOsB,EAAQyE,SAtDR,SAACgF,GACpBS,EAAUT,EAAEE,OAAOjL,QAqDf,UACE,eAAC6L,GAAA,EAAD,CAAU7L,MAAO,MAAjB,iBACA,eAAC6L,GAAA,EAAD,CAAU7L,MAAO,WAAjB,sBACA,eAAC6L,GAAA,EAAD,CAAU7L,MAAO,aAAjB,8BAG0B,IAA7BlG,EAAWkB,OAAO/C,OACjB,2DAC4B,IAA1B6P,EAAe7P,OACjB,4DACE,KACmB,cAAtB6B,EAAWa,OACV,eAAC,GAAD,CACEb,WAAYA,EACZoQ,cAAeA,EACf9O,aAAcA,EACd0M,eAAgBA,EAChBkB,aAAcA,EACdjB,gBAAiBA,EACjBkB,aAAcA,EACdC,iBAAkBA,EAClBJ,WAAYA,EACZK,cAAeA,EACfC,YAAaA,EACbC,eAAgBA,EAChBC,gBAAiBA,EACjBa,mBAAoBA,EACpBC,eAAgBA,IAGlB,eAAC,GAAD,CACEtQ,WAAYA,EACZgO,eAAgBA,EAChBkB,aAAcA,EACdjB,gBAAiBA,EACjBkB,aAAcA,EACdC,iBAAkBA,EAClBJ,WAAYA,EACZK,cAAeA,EACfC,YAAaA,EACbC,eAAgBA,EAChBC,gBAAiBA,Q,2FC8NZwC,GA5W6C,SAAC,GAUtD,IATL1Q,EASI,EATJA,aACAtB,EAQI,EARJA,WACAoQ,EAOI,EAPJA,cACApC,EAMI,EANJA,eACAiE,EAKI,EALJA,0BACAC,EAII,EAJJA,2BACAC,EAGI,EAHJA,iCACAC,EAEI,EAFJA,2BACAC,EACI,EADJA,YACI,EACwB3L,oBAAS,GADjC,mBACG4L,EADH,KACWC,EADX,OAYAhJ,eARQiJ,EAJR,EAIFhJ,SACciJ,EALZ,EAKFhJ,aACOiJ,EANL,EAMFhJ,MACQiJ,EAPN,EAOFhJ,OACWiJ,EART,EAQFhJ,UACUiJ,EATR,EASFC,SACOC,EAVL,EAUFC,MACSC,EAXP,EAWFpJ,QAGIO,EAAYsI,EAAc,qBAC1BrI,EAAYqI,EAAc,qBAEhCtL,qBAAU,WACJpH,IACF+S,EAAc,CACZ1S,MAAOL,EAAWK,MAClBG,cAAeR,EAAWQ,cAC1BmK,kBAAmB3K,EAAWO,UAAUgK,SACxCC,kBAAmBxK,EAAWM,UAAUiK,SACxCG,cAAe1K,EAAWM,UAAUmK,KACpCG,cAAe5K,EAAWO,UAAUkK,OAEtCoI,EAAiB,iBAAiB,MAGnC,CAAC7S,EAAY+S,IAEhB,IASMG,EAAY,uCAAG,WAAOrS,GAAP,SAAAjB,EAAA,+EAEXwF,EAAiB9D,EAAcT,GAFpB,OAGbb,GACFoQ,EAAc,6BAAKpQ,GAAN,IAAkBa,YAJhB,sDASnBsS,IATmB,wDAAH,sDAYZC,EAAgB,uCAAG,WAAO3T,GAAP,SAAAG,EAAA,+EAEfyB,EACJ,CACEhB,MAAOZ,EAAKY,MACZC,UAAW,CACTiK,SAAU9K,EAAK+K,kBACfC,KAAMhL,EAAKiL,eAEbnK,UAAW,CACTgK,SAAU9K,EAAKkL,kBACfF,KAAMhL,EAAKmL,eAEbpK,cAAef,EAAKe,eAEtBc,GAfmB,OAiBjBtB,GACFoQ,EAAc,6BACTpQ,GADQ,IAEXK,MAAOZ,EAAKY,MACZC,UAAW,CACTiK,SAAU9K,EAAK+K,kBACfC,KAAMhL,EAAKiL,eAEbnK,UAAW,CACTgK,SAAU9K,EAAKkL,kBACfF,KAAMhL,EAAKmL,eAEbpK,cAAef,EAAKe,cACpBK,OAAQ,eA9BS,uGAAH,sDAsChBwS,EAAiB,SACrBpC,GAEA,GAAIjR,EAAY,CACd,IAAMsT,EAAYtT,EAAWkB,OAC1BsG,QAAO,SAACrG,GAAD,OAAWA,EAAMmC,YACxB6E,KAAI,SAAChH,GAAD,OAAWA,EAAM4B,YAExBwQ,UAAUC,UAAUC,UAAUH,EAAUI,KAAK,MAE/CnB,GAAU,GACVoB,YAAW,WACTpB,GAAU,KACT,KACHY,KAqBIA,EAAc,WAClBlB,GAA0B,GAC1BC,EAA2B,IAC3BC,EAAiC,IACjCC,GAA2B,eAC3BC,EAAY,IAGR/B,EAAc,OAAGtQ,QAAH,IAAGA,OAAH,EAAGA,EAAYkB,OAAOsG,QAAO,SAACrG,GAAD,OAAWA,EAAMmC,YAC/DnF,OAEH,OAAmB,OAAf6B,GAA0C,OAAnBgO,EAEvB,gBAACtG,EAAA,EAAD,CAAU9B,MAAM,EAAhB,UACE,eAAC+B,EAAA,EAAD,CAAkBpB,MAAM,YAD1B,OAOF,iCACE,wBAAM+D,SAAUmI,EAAqBW,GAArC,UACyB,YAAtBpT,EAAWa,OACV,eAACuF,GAAA,EAAD,CACEH,QAAQ,WACRK,QACwB,cAAtBtG,EAAWa,OA5CH,WAClBoR,GAA0B,GAC1BC,EAA2B,wCAC3BC,EACE,+DAEFC,GAA2B,kBAAM,kBAAMc,EAAa,gBAwCtC,kBAAMA,EAAa,YAL3B,kBAWA,eAAC9M,GAAA,EAAD,CAAQG,MAAM,UAAUN,QAAQ,YAAYqC,KAAK,SAAjD,kBAIqB,YAAtBtI,EAAWa,OACV,+BACE,eAACkK,GAAA,EAAD,CACEG,MAAM,QACNrJ,KAAK,QACL+R,aAAc5T,EAAWK,MACzB4F,QAAQ,WACR6I,QAAS,CAAEC,KAAMrG,KAAOmL,eACxBC,OAAO,QACP9I,SAAUwH,EAAiB,CAAEjI,UAAU,EAAMU,UAAW,KACxD3G,QAASqO,EAAetS,MACxB8K,WAAYwH,EAAetS,MAAQ,oBAAsB,QAI7D,eAAC6I,GAAA,EAAD,CAAYjD,QAAQ,KAApB,SAA0BjG,EAAWK,QAGvC,gBAAC6I,GAAA,EAAD,yBACc,IACZ,eAAC6K,GAAA,EAAD,CAAS1T,MAAOiS,EAAS,UAAY,OAArC,SACE,gBAAClM,GAAA,EAAD,CAAQE,QAzJF,SAAC2K,GACf,IAAM+C,EAAS/C,EAAEE,OACjBoC,UAAUC,UAAUC,UAAUO,EAAOC,WACrC1B,GAAU,GACVoB,YAAW,WACTpB,GAAU,KACT,MAmJK,oBACM2B,OAAOC,SAASC,OAAOC,WAD7B,uBACsD/S,GAAgB,SAGxE,eAAC8E,GAAA,EAAD,CACE+C,GAAE,sBAAiB7H,GACnB8H,UAAWC,IACXpD,QAAQ,WACRrE,KAAK,QAJP,qBASF,gBAACsH,GAAA,EAAD,sBAAqBlJ,EAAWa,OAAhC,OACuB,cAAtBb,EAAWa,OACV,gBAACqI,GAAA,EAAD,6BAA4BlJ,EAAWc,gBACrC,KACJ,eAACoI,GAAA,EAAD,CAAYjD,QAAQ,KAApB,uBACA,+BACE,eAACmF,GAAA,EAAD,CACEvB,QACE,eAAC,KAAD,CACEA,QAASoJ,EACTpR,KAAK,gBACLmK,OAAQ,kBACJC,EADI,EACJA,SAAUqI,EADN,EACMA,OAAQpO,EADd,EACcA,MAAahE,GAD3B,EACqBL,KADrB,EAC2BK,KAD3B,EAEJqS,QAFI,EAEKC,UAFL,EAEgBC,QAFhB,OAIN,eAACpJ,GAAA,EAAD,CACEiJ,OAAQA,EACRrI,SAAU,SAACgF,GAAD,OAAOhF,EAASgF,EAAEE,OAAOuD,UACnCA,QAASxO,EACT8E,SAAU9I,EACVmE,SAAgC,YAAtBrG,EAAWa,YAK7BqK,MAAM,qBAGV,eAAChC,GAAA,EAAD,CAAYjD,QAAQ,YAApB,8BACA,iCACE,eAACmF,GAAA,EAAD,CACEvB,QACE,eAAC,KAAD,CACEA,QAASoJ,EACTpR,KAAK,oBACLmK,OAAQ,kBACJC,EADI,EACJA,SAAUqI,EADN,EACMA,OAAQpO,EADd,EACcA,MAAahE,GAD3B,EACqBL,KADrB,EAC2BK,KAD3B,EAEJqS,QAFI,EAEKC,UAFL,EAEgBC,QAFhB,OAIN,eAACpJ,GAAA,EAAD,CACEiJ,OAAQA,EACRrI,SAAU,SAACgF,GAAD,OAAOhF,EAASgF,EAAEE,OAAOuD,UACnCA,QAASxO,EACT8E,SAAU9I,EACVmE,SAAgC,YAAtBrG,EAAWa,YAK7BqK,MAAM,YAER,sBAAKI,MAAO,CAAEC,QAASnB,EAAY,SAAW,QAA9C,SACE,eAACW,GAAA,EAAD,CACElJ,KAAK,gBACLyG,KAAK,SACLrC,QAAQ,WACRrE,KAAK,QACL4J,WAAY,CACVC,WAAY,CACVC,IAAK,IACLC,IAAK,IAGTX,SAAUwH,EAAiB,CACzB7G,IAAK,IACLD,IAAK,MACLE,eAAe,EACfC,SAAU,CACRC,aAAc,SAAC5F,GAAD,OACX0M,EAAkB,sBACnBA,EAAkB,kBAAoB1M,MAG5C5B,QAASqO,EAAejI,cACxBS,WACEwH,EAAejI,eACf,oCAEFrE,SAAgC,YAAtBrG,EAAWa,cAI3B,iCACE,eAACuK,GAAA,EAAD,CACEvB,QACE,eAAC,KAAD,CACEA,QAASoJ,EACTpR,KAAK,oBACLmK,OAAQ,kBACJC,EADI,EACJA,SAAUqI,EADN,EACMA,OAAQpO,EADd,EACcA,MAAahE,GAD3B,EACqBL,KADrB,EAC2BK,KAD3B,EAEJqS,QAFI,EAEKC,UAFL,EAEgBC,QAFhB,OAIN,eAACpJ,GAAA,EAAD,CACEiJ,OAAQA,EACRrI,SAAU,SAACgF,GAAD,OAAOhF,EAASgF,EAAEE,OAAOuD,UACnCA,QAASxO,EACT8E,SAAU9I,EACVmE,SAAgC,YAAtBrG,EAAWa,YAK7BqK,MAAM,YAER,sBAAKI,MAAO,CAAEC,QAASlB,EAAY,SAAW,QAA9C,SACE,eAACU,GAAA,EAAD,CACElJ,KAAK,gBACLyG,KAAK,SACLrC,QAAQ,WACRrE,KAAK,QACL4J,WAAY,CACVC,WAAY,CACVC,IAAK,IACLC,IAAK,IAGTX,SAAUwH,EAAiB,CACzB7G,IAAK,IACLD,IAAK,MACLE,eAAe,EACfC,SAAU,CACRE,cAAe,SAAC7F,GAAD,OACZ0M,EAAkB,sBACnBA,EAAkB,kBAAoB1M,MAG5C5B,QAASqO,EAAe/H,cACxBO,WACEwH,EAAe/H,eACf,oCAEFvE,SAAgC,YAAtBrG,EAAWa,iBAK7B,gBAAC8T,GAAA,EAAD,CAAOC,UAAW,EAAGnM,UAAWC,KAAOmM,kBAAvC,UACE,eAAC3L,GAAA,EAAD,CAAYjD,QAAQ,KAApB,uBACA,gBAACiD,GAAA,EAAD,CAAYjD,QAAQ,YAApB,UACGqK,EADH,IACoBtQ,EAAWkB,OAAO/C,UAEtC,eAAC4V,GAAA,EAAD,CAAS1T,MAAOiS,EAAS,UAAY,OAArC,SACE,eAAClM,GAAA,EAAD,CACEE,QACwB,cAAtBtG,EAAWa,OAAyBwS,EAjO5B,WAClBpB,GAA0B,GAC1BC,EAA2B,wCAC3BC,EACE,yEAEFC,GAA2B,kBAAMiB,MA6NzBpN,QAAQ,WAJV,sC,UC5SK6O,GAzDiC,SAAC,GAK1C,IAJL3T,EAII,EAJJA,MACA4T,EAGI,EAHJA,SACA9M,EAEI,EAFJA,MACA+M,EACI,EADJA,OACI,EACgCtO,oBAAS,GADzC,mBACGuO,EADH,KACeC,EADf,OAEwBxO,oBAAS,GAFjC,mBAEGyO,EAFH,KAEWC,EAFX,KA6BJ,OAzBAhO,qBAAU,WACRiO,MAAMlU,EAAMgC,aAAc,IAAIkE,MAAK,SAACiO,GAClC,GAAIA,EAAIC,GACNL,GAAc,QAEd,IAAIM,EAAO,EACLC,EAAaC,aAAY,WAC7BL,MAAMlU,EAAMgC,aAAc,IAAIkE,MAAK,SAACiO,GAClCjR,QAAQM,IAAI,YAAa6Q,GACzBnR,QAAQM,IAAI2Q,GACRA,EAAIC,IACNI,cAAcF,GACdP,GAAc,IACLM,EAAO,KAChBnR,QAAQM,IAAI,cACZyQ,GAAU,IAEZI,GAAQ,OAET,UAIN,IAECL,EAEA,sBACE7J,MAAO,CACLrD,QACA+M,SACAzJ,QAAS,OACTqK,WAAY,SACZC,eAAgB,UANpB,SASE,eAAC,KAAD,MAKDZ,EAIE,+BAAMF,IAHJ,eAACe,GAAA,EAAD,CAAU7P,QAAQ,OAAOgC,MAAOA,EAAO+M,OAAQA,KC2a3Ce,GAvbkB,WAAO,IAC1BzU,EAAiBkQ,cAArB1R,GAD6B,EAGD4G,mBAA4B,MAH3B,mBAG9B1G,EAH8B,KAGlBoQ,EAHkB,OAIO1J,mBAAyB,MAJhC,mBAI9BsH,EAJ8B,KAIdyD,EAJc,OAKT/K,mBAAS,OALA,mBAK9Bc,EAL8B,KAKtBkK,EALsB,OAMDhL,mBAAS,GANR,mBAM9BsI,EAN8B,KAMlBK,EANkB,OAOG3I,oBAAS,GAPZ,mBAO9BwI,EAP8B,KAOhBjB,EAPgB,OAQLvH,mBAAmB,IARd,mBAQ9BpD,EAR8B,KAQpB0S,EARoB,OAUuBtP,oBAAS,GAVhC,mBAU9BuP,EAV8B,KAUNhE,EAVM,QAWyBvL,mBAAS,IAXlC,qBAW9BwP,GAX8B,MAWLhE,GAXK,SAejCxL,mBAAS,IAfwB,qBAanCyP,GAbmC,MAcnChE,GAdmC,SAgByBzL,oBAE5D,eAlBmC,qBAgB9B0P,GAhB8B,MAgBLhE,GAhBK,SAmBL1L,mBAAS,GAnBJ,qBAmB9B/E,GAnB8B,MAmBpB0Q,GAnBoB,SAqBiB3L,oBAAS,GArB1B,qBAqB9B2P,GArB8B,MAqBTC,GArBS,SAsBC5P,oBAAS,GAtBV,qBAsB9B4I,GAtB8B,MAsBjBC,GAtBiB,SAuBS7I,mBAAS,IAvBlB,qBAuB9B8I,GAvB8B,MAuBba,GAvBa,MAyBrCjJ,qBAAU,WACJ8H,EACFqH,SAASC,KAAKlL,MAAMmL,SAAW,SACrBvH,IACVqH,SAASC,KAAKlL,MAAMmL,SAAW,WAEhC,CAACvH,IA/BiC,OAsCjC3F,aAAa,CACfkH,cAAe,CAAE/Q,MAAO,MALVgX,GAlCqB,GAkCnCjN,aAGSkN,IArC0B,GAoCnChN,OApCmC,GAqCnCE,SAKFzC,qBAAU,WACRjC,EAAoB7D,GAAc+F,MAAK,SAACrH,GACtCoQ,EAAcpQ,GACdyR,EAAkBzR,EAAWkB,aAE9B,CAACI,IAMJ8F,qBAAU,WACR,GAAIpH,EACF,OAAQwH,GACN,IAAK,MACH,OAAOiK,EAAkBzR,EAAWkB,QACtC,IAAK,WACH,IAAMoP,EAAiBtQ,EAAWkB,OAAOsG,QACvC,SAACrG,GAAD,OAAWA,EAAMmC,YAEnB,OAAOmO,EAAkBnB,GAC3B,IAAK,aACH,IAAMqB,EAAmB3R,EAAWkB,OAAOsG,QACzC,SAACrG,GAAD,OAAYA,EAAMmC,YAEpB,OAAOmO,EAAkBE,MAG9B,CAACnK,EAAQxH,IAEZ,IAAMmP,GAAe,SAACpK,GAAD,OAAmB,SAAC8D,GACvCwG,EAActK,GACdkJ,GAAgB,KA+BZ2I,GAAa,SAAC9W,GAAD,OAA0C,IAA1BwD,EAASuT,QAAQ/W,IAE9CgX,GAAW,uCAAG,4BAAAlX,EAAA,sEACZmE,EAAazC,EAAcgC,EAAU+O,IADzB,OAEdrS,IACI+W,EAAgB/W,EAAWkB,OAC9BsG,QAAO,SAACrG,GAAW,IAAD,gBACFmC,GADE,IACjB,2BAAyB,CAAC,IAAjBxD,EAAgB,QACvB,GAAIqB,EAAMrB,KAAOA,EACf,OAAO,GAHM,8BAMjB,OAAO,KAERqI,KAAI,SAAChH,EAAO4D,GACX,OAAO,6BAAK5D,GAAZ,IAAmB4D,MAAOA,EAAQ,OAEtCqL,EAAc,6BACTpQ,GADQ,IAEXkB,OAAQ6V,MAGZf,EAAY,IACZ7C,KArBkB,2CAAH,qDAwBX6D,GAAe,uCAAG,WAAOvX,GAAP,SAAAG,EAAA,6DACtByE,QAAQM,IAAIlF,GADU,SAEhB+B,EAAcF,EAAc7B,EAAKC,MAAO2S,IAFxB,OAGtBiE,IAAuB,GACvBjE,GAAY,GACZlN,EAAoB7D,GAAc+F,MAAK,SAACrH,GACtCoQ,EAAcpQ,MANM,2CAAH,sDAsBfiX,GAAgB,uCAAG,sBAAArX,EAAA,0DACnBI,EADmB,0CAGbuE,EAAYjD,EAActB,EAAWkB,QAHxB,OAInBkP,EAAc,6BACTpQ,GADQ,IAEXkB,OAAQlB,EAAWkB,OAAOiH,KAAI,SAAChH,GAAD,oBAAC,gBAC1BA,GADyB,IAE5BmC,UAAU,EACVC,QAAS,WAGb4P,KAZmB,yGAAH,qDAuChBA,GAAc,WAClBlB,GAA0B,GAC1BC,GAA2B,IAC3BC,GAAiC,IACjCC,IAA2B,eAC3BC,GAAY,IAGd,OAAmB,OAAfrS,GAA0C,OAAnBgO,EAEvB,gBAACtG,EAAA,EAAD,CAAU9B,MAAM,EAAhB,UACE,eAAC+B,EAAA,EAAD,CAAkBpB,MAAM,YAD1B,OAOF,iCACE,eAACH,GAAA,EAAD,CAAQ+C,GAAG,IAAIC,UAAWC,IAAMpD,QAAQ,WAAxC,kBAGA,eAAC,GAAD,CACE3E,aAAcA,EACdtB,WAAYA,EACZoQ,cAAeA,EACfpC,eAAgBA,EAChBiE,0BAA2BA,EAC3BC,2BAA4BA,GAC5BC,iCAAkCA,GAClCC,2BAA4BA,GAC5BC,YAAaA,KAEf,gBAAC6E,GAAA,EAAD,WACG5T,EAASnF,OAAS,EACjB,uBAAKsK,UAAWC,KAAOyO,gBAAvB,UACE,gBAACjO,GAAA,EAAD,CAAY3C,MAAM,UAAU6C,UAAU,MAAtC,UACG9F,EAASnF,OADZ,oBAGA,eAAC4V,GAAA,EAAD,CAAS1T,MAAM,SAAf,SACE,eAACuI,EAAA,EAAD,CAAYwO,aAAW,SAAS9Q,QA3DpB,WACtB2L,GAA0B,GAC1BC,GAA2B,8CAC3BC,GACE,8CAEFC,IAA2B,kBAAM0E,OAqDvB,SACE,eAAC,IAAD,WAKN,sBAAKrO,UAAWC,KAAOyO,gBAAvB,SACyB,YAAtBnX,EAAWa,OACV,iCACE,eAACuF,GAAA,EAAD,CACEE,QAAS,WACPgQ,IAAuB,IAEzBrQ,QAAQ,WAJV,wBAQA,eAACG,GAAA,EAAD,CAAQE,QAnEK,WACzB2L,GAA0B,GAC1BC,GACE,4DAEFC,GACE,6CAEFC,IAA2B,kBAAM6E,OA2DgBhR,QAAQ,WAA7C,8CAIA,OAGR,gBAAC2L,GAAA,EAAD,CAAanJ,UAAWC,KAAO2O,cAA/B,UACE,eAACxF,GAAA,EAAD,qBACA,gBAACC,GAAA,EAAD,CAAQ5L,MAAOsB,EAAQyE,SAhNV,SAACgF,GACpBS,EAAUT,EAAEE,OAAOjL,QA+Mb,UACE,eAAC6L,GAAA,EAAD,CAAU7L,MAAO,MAAjB,iBACA,eAAC6L,GAAA,EAAD,CAAU7L,MAAO,WAAjB,sBACA,eAAC6L,GAAA,EAAD,CAAU7L,MAAO,aAAjB,iCAIN,eAAC0B,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,CAAOjG,KAAK,QAAZ,UACE,eAACkG,EAAA,EAAD,UACE,gBAACC,EAAA,EAAD,WACyB,YAAtB/H,EAAWa,OACV,eAACmH,EAAA,EAAD,CAAWsP,QAAQ,WAAnB,SACE,eAACjM,GAAA,EAAD,CACEkM,cACEjU,EAASnF,OAAS,GAClBmF,EAASnF,OAAS6P,EAAe7P,OAEnCuW,QACE1G,EAAe7P,OAAS,GACxBmF,EAASnF,SAAW6P,EAAe7P,OAErC8N,SA1MW,SAACpD,GAC5B,GAAIA,EAAMsI,OAAOuD,SAAW1G,EAA5B,CACE,IAAMwJ,EAAexJ,EAAe7F,KAAI,SAACsP,GAAD,OAAOA,EAAE3X,MACjDkW,EAAYwB,QAGdxB,EAAY,SAuME,KACJ,eAAChO,EAAA,EAAD,CAAWC,MAAM,KAAjB,iBACA,eAACD,EAAA,EAAD,CAAWC,MAAM,MAAjB,uBACA,eAACD,EAAA,EAAD,CAAWC,MAAM,MAAjB,sBACA,eAACD,EAAA,EAAD,CAAWsP,QAAQ,aACnB,eAACtP,EAAA,EAAD,2BAGJ,eAACE,EAAA,EAAD,UACG8F,EAAe7F,KAAI,SAAChH,EAAO4D,GAAR,OAClB,gBAACgD,EAAA,EAAD,CAEEzE,SAAUsT,GAAWzV,EAAMrB,IAC3BsI,OAAO,EAHT,UAKyB,YAAtBpI,EAAWa,OACV,eAACmH,EAAA,EAAD,CACEsP,QAAQ,WACRhR,QAAS,SAACuC,GAAD,OAtNP,SAACA,EAAkC/I,GACrD,IAAM4X,EAAgBpU,EAASuT,QAAQ/W,GACnC6X,EAAwB,IAEL,IAAnBD,EACFC,EAAcA,EAAYC,OAAOtU,EAAUxD,GAChB,IAAlB4X,EACTC,EAAcA,EAAYC,OAAOtU,EAASuU,MAAM,IACvCH,IAAkBpU,EAASnF,OAAS,EAC7CwZ,EAAcA,EAAYC,OAAOtU,EAASuU,MAAM,GAAI,IAC3CH,EAAgB,IACzBC,EAAcA,EAAYC,OACxBtU,EAASuU,MAAM,EAAGH,GAClBpU,EAASuU,MAAMH,EAAgB,KAGnC1B,EAAY2B,GAsMwBG,CAAYjP,EAAO1H,EAAMrB,KAF/C,SAIE,eAACuL,GAAA,EAAD,CAAUqJ,QAASkC,GAAWzV,EAAMrB,QAEpC,KACJ,gBAACkI,EAAA,EAAD,WAAY7G,EAAM4D,MAAlB,OACA,eAACiD,EAAA,EAAD,CAAWsP,QAAQ,OAAnB,SACE,eAAC,GAAD,CAAanW,MAAOA,EAAO8G,MAAO,IAAK+M,OAAQ,IAA/C,SACE,qCACE,yBAAQ3M,OAAQlH,EAAMkC,cAAeiF,KAAK,eAC1C,sBACEC,IAAKpH,EAAMiC,UACXoF,IAAKxI,EAAWK,MAChBoI,UAAWC,KAAOtF,UAClBkD,QAAS6I,GAAapK,YAK9B,eAACiD,EAAA,EAAD,UAAY7G,EAAM4B,WAClB,eAACiF,EAAA,EAAD,CAAWsP,QAAQ,WAAnB,SACGnW,EAAMmC,SAAW,eAAC,KAAD,IAAqB,OAEzC,eAAC0E,EAAA,EAAD,UAAY7G,EAAMoC,YA9BbpC,EAAMrB,cAoCpBoP,GAAgBlB,EAAe7P,OAAS,GACvC,eAAC2R,GAAD,CACE9B,eAAgBA,EAChBC,gBAAiBA,EACjBC,cAAec,EACfb,iBAAkBkB,EAClBjB,eAAgB,CACdJ,EAAegB,GAAYzL,QAAQpF,OAAS,EAC1C,eAACyK,EAAA,EAAD,CACEH,UAAWC,KAAOqH,YAClBzJ,QAAS,kBArMrBiJ,IAAe,QACXvB,IACEjJ,GACFsK,EAActK,GACdsL,GAAmBrC,EAAejJ,GAAOxB,UAEzC8M,GAAmBrC,EAAegB,GAAYzL,WAP3B,IAACwB,GAoMd,SAIE,eAAC,KAAD,MAGF,sBAAK0D,UAAWC,KAAOqH,cAEzB/B,EAAegB,GAAY1L,SACzB,eAACsF,EAAA,EAAD,CAAYH,UAAWC,KAAOqH,YAAa1J,UAAQ,EAAnD,SACE,eAAC,KAAD,MAGF,sBAAKoC,UAAWC,KAAOqH,iBAK/B,eAAC,GAAD,CACEzK,WAAY2Q,EACZtU,SAAUA,GACV4D,cAAe,kBAAM0M,GAA0B,IAC/CzM,aAAc4Q,GACd3Q,YAAayQ,GACbxQ,kBAAmByQ,KAErB,eAACxQ,EAAA,EAAD,CAAQC,KAAMyQ,GAAd,SACE,wBAAM/L,SAAUoM,GAAkBM,IAAlC,UACE,eAACnR,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,wBACA,gBAACgG,EAAA,EAAD,WACGnE,GACC,eAACkJ,GAAA,EAAD,CAAKC,EAAG,MAAR,SACE,eAAC9E,EAAA,EAAD,CAAgBC,QAAQ,cAAcC,MAAOvE,OAG/C,eAACkJ,GAAA,EAAD,CAAKC,EAAG,QAEV,eAAC,KAAD,CACEjJ,KAAK,QACLgI,QAAS8M,GACT3K,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN,eAAC,KAAD,CACEC,cAAe,CAAC,cAChBC,aAAc,sCACdF,SAAU,SAACvM,GACT,OAAOuM,EAAS,aAAIvM,KAEtB0M,WAAY,IACZC,mBAAoB,CAClBC,UAAW5D,KAAO6D,iBAClBC,KAAK,GAAD,OAAK9D,KAAO+D,YAAZ,kBACJC,MAAOhE,KAAOiE,cAEhBC,iBAAkB,CAChBN,UAAW,CACTO,QAAS,GAEXL,KAAM,CAAEM,GAAI,EAAGC,GAAI,EAAGC,GAAI,IAE5BC,YAAY,EACZC,wBAAwB,EACxBC,cAAc,EACdC,wBAAwB,EACxBC,cAAe3E,KAAOqP,iBAK9B,gBAAC5R,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,CACEC,WAAY1E,GACZ2E,QAAS,kBAAMgQ,IAAuB,IACtC/P,MAAM,YAHR,oBAOA,eAACH,GAAA,EAAD,CAAQC,WAAY1E,GAAU4E,MAAM,UAAU+B,KAAK,SAAnD,yBAMN,gBAAC3C,EAAA,EAAD,CAAQC,KAAM0J,GAAaU,QAAS,kBAAMT,IAAe,IAAzD,UACE,eAAC3G,EAAA,EAAD,CACEtC,QAAS,kBAAMiJ,IAAe,IAC9B9G,UAAWC,KAAOsP,QAFpB,SAIE,eAAC,KAAD,MAEF,eAACnS,EAAA,EAAD,CAAa/F,GAAG,qBAAhB,qBACA,gBAACgG,EAAA,EAAD,WACE,eAAC6O,GAAA,EAAD,CAAOlM,UAAWC,KAAOuP,qBAAsBrD,UAAW,EAA1D,SACE,eAAC1L,GAAA,EAAD,UAAasG,OAEf,eAACrJ,GAAA,EAAD,c,UCjaK+R,OA/Cf,WAAgB,IAAD,EACWxR,mBAAwB,MADnC,mBACNyR,EADM,KACAC,EADA,OAEiB1R,oBAAS,GAF1B,mBAEN2R,EAFM,KAEGC,EAFH,KAeb,OAXAlR,qBAAU,WACR/H,EAAKkZ,oBAAmB,SAAUJ,GAE9BC,EADED,EACMA,EAAKK,IAEL,MAEVF,GAAW,QAEZ,IAECD,EAEA,gBAAC3Q,EAAA,EAAD,CAAU9B,MAAM,EAAhB,UACE,eAAC+B,EAAA,EAAD,CAAkBpB,MAAM,YAD1B,OAOF,gBAACkS,GAAA,EAAD,WACE,eAACvP,GAAA,EAAD,CAAYjD,QAAQ,KAApB,wBACCkS,GACC,sBAAK1P,UAAWC,IAAOgQ,UAAvB,SACE,eAACtS,GAAA,EAAD,CAAQE,QAAS,kBAAMjH,EAAKsZ,WAAW1S,QAAQ,WAA/C,sBAKJ,eAAC,IAAD,CAAQ2S,SAAU,eAAlB,SACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAK,kBAAkB7M,OAAQ,kBAAM,eAAC,GAAD,OAC1CmM,EAAsD,KAA/C,eAAC,IAAD,CAAOU,KAAK,IAAI7M,OAAQ,kBAAM,eAAC,GAAD,OACvC,eAAC,IAAD,CAAO6M,KAAK,YAAY7M,OAAQ,kBAAM,eAAC,GAAD,OACtC,eAAC,IAAD,CAAO6M,KAAK,OAAO7M,OAAQ,kBAAM,eAAC,GAAD,OACjC,eAAC,IAAD,CAAO6M,KAAK,YAAY7M,OAAQ,kBAAM,eAAC,GAAD,OACtC,eAAC,IAAD,CAAO6M,KAAK,IAAI7M,OAAQ,kBAAM,eAAC,GAAD,gB,OCtDxC8M,IAAS9M,OACP,eAAC,IAAM+M,WAAP,UACE,eAAC,GAAD,MAEFxC,SAASyC,eAAe,U,mBCR1Bhb,EAAOC,QAAU,CAAC,UAAY,0BAA0B,cAAgB,8BAA8B,gBAAkB,gCAAgC,cAAgB,8BAA8B,SAAW,yBAAyB,YAAc,4BAA4B,QAAU,wBAAwB,qBAAuB,qCAAqC,cAAgB,8BAA8B,kBAAoB,oC,mBCApbD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,mBAAqB,mCAAmC,UAAY,0BAA0B,QAAU,wBAAwB,gBAAkB,gCAAgC,WAAa,2BAA2B,iBAAmB,iCAAiC,YAAc,4BAA4B,SAAW,2B,mBCA3XD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,mBAAqB,mCAAmC,UAAY,0BAA0B,QAAU,wBAAwB,gBAAkB,gCAAgC,WAAa,2BAA2B,iBAAmB,iCAAiC,YAAc,4BAA4B,SAAW,2B,mBCA3XD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,aAAe,gC","file":"static/js/main.c3c2f03b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"styles_thumbnail__3-A4h\",\"thumbnailCell\":\"styles_thumbnailCell__2vFip\",\"toolbarSelected\":\"styles_toolbarSelected__13Hqi\",\"toolbarFilter\":\"styles_toolbarFilter__dsTk2\",\"dropzone\":\"styles_dropzone__PxjSh\",\"toolbarIcon\":\"styles_toolbarIcon__1xA2m\",\"exitBtn\":\"styles_exitBtn__2_J1r\",\"commentTextContainer\":\"styles_commentTextContainer__F6S48\",\"titleTextarea\":\"styles_titleTextarea__3NmEZ\",\"centeredContainer\":\"styles_centeredContainer__2vhw1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutBtn\":\"styles_logoutBtn__2qOth\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"styles_thumbnail__1FJ-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoIndex\":\"styles_photoIndex__e02gU\"};","export const makeId = (length: number) => {\n  var result = '';\n  var characters =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { parse } from 'exifr';\r\n\r\nimport { makeId } from './utils/makeId';\r\nimport { Collection, Photo } from './types';\r\nimport {firebaseConfig} from './config'\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const generateNewCollection = async (\r\n  data: Omit<\r\n    Collection,\r\n    'status' | 'finalComment' | 'photos' | 'id' | 'dateCreated'\r\n  >,\r\n  files: FileList,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n): Promise<string> => {\r\n  if (!data || !files) {\r\n    throw new Error('missing data or files');\r\n  }\r\n  setUploadProgress(1);\r\n\r\n  let collectionRef, id, snapshot;\r\n\r\n  do {\r\n    id = makeId(8);\r\n    collectionRef = firestore.collection('collections').doc(id);\r\n    snapshot = await collectionRef.get();\r\n  } while (snapshot.exists);\r\n  setUploadProgress(5);\r\n  const { title, minSelect, maxSelect, allowComments } = data;\r\n  try {\r\n    await collectionRef.set({\r\n      title,\r\n      dateCreated: firebase.firestore.FieldValue.serverTimestamp(),\r\n      minSelect,\r\n      maxSelect,\r\n      allowComments,\r\n      status: 'selecting',\r\n      finalComment: '',\r\n    });\r\n  } catch (err) {\r\n    throw new Error(`error creating collection document: ${err}`);\r\n  }\r\n  setUploadProgress(10);\r\n\r\n  const photosRef = collectionRef.collection('photos');\r\n  const batch = firestore.batch();\r\n\r\n  const photos = await uploadPhotos(id, files, setUploadProgress);\r\n\r\n  for (let i = 0; i < photos.length; i++) {\r\n    const photo = photos[i];\r\n    batch.set(photosRef.doc(photos[i].id), photo);\r\n  }\r\n  try {\r\n    await batch.commit();\r\n  } catch (err) {\r\n    throw new Error(`error creating photos documents: ${err}`);\r\n  }\r\n  setUploadProgress(100);\r\n  return id;\r\n};\r\n\r\nexport const updateSettings = async (\r\n  data: Omit<\r\n    Collection,\r\n    'status' | 'finalComment' | 'photos' | 'id' | 'dateCreated'\r\n  >,\r\n  collectionId: string\r\n) => {\r\n  const { title, minSelect, maxSelect, allowComments } = data;\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n  try {\r\n    await collectionRef.update({\r\n      title,\r\n      minSelect,\r\n      maxSelect,\r\n      allowComments,\r\n      status: 'selecting',\r\n    });\r\n  } catch (err) {\r\n    throw new Error(`error updating collection settings`);\r\n  }\r\n};\r\n\r\nexport const addMorePhotos = async (\r\n  id: string,\r\n  files: FileList,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(id)\r\n    .collection('photos');\r\n\r\n  const batch = firestore.batch();\r\n\r\n  const photos = await uploadPhotos(id, files, setUploadProgress);\r\n\r\n  for (let i = 0; i < photos.length; i++) {\r\n    const photo = photos[i];\r\n    batch.set(photosRef.doc(photos[i].id), photo);\r\n  }\r\n  try {\r\n    await batch.commit();\r\n  } catch (err) {\r\n    throw new Error(`error creating photos documents: ${err}`);\r\n  }\r\n  setUploadProgress(100);\r\n\r\n  return;\r\n};\r\n\r\nconst uploadPhotos = async (\r\n  id: string,\r\n  files: FileList,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const photosArray: Omit<Photo, 'index'>[] = [];\r\n  const progressStep = 85 / files.length;\r\n  let progress = 10;\r\n  for (let i = 0; i < files.length; i++) {\r\n    if (files[i].size > 500000) {\r\n      throw new Error(`${files[i].name} filesize exceeds 0.5 MB`);\r\n    }\r\n\r\n    const uuid = uuidv4();\r\n    const data = await parse(files[i], ['ModifyDate']);\r\n\r\n    const storageRef = storage.ref(`${id}/${uuid}.jpg`);\r\n    const uploadTask = await storageRef.put(files[i]);\r\n    const downloadUrl = await uploadTask.ref.getDownloadURL();\r\n    const urlWithoutEnding = downloadUrl.match(/.+?(?=.jpg\\?alt=media)/);\r\n    const filenameWithoutExt = files[i].name.match(/.+?(?=.jpg)/);\r\n    const jpegUrl = `${urlWithoutEnding}.jpg?alt=media`;\r\n    const webpUrl = `${urlWithoutEnding}_1400x1000.webp?alt=media`;\r\n    const jpegThumbnailUrl = `${urlWithoutEnding}_400x700.jpg?alt=media`;\r\n    const webpThumbnailUrl = `${urlWithoutEnding}_400x700.webp?alt=media`;\r\n\r\n    photosArray.push({\r\n      id: uuid,\r\n      filename: `${filenameWithoutExt}`,\r\n      filenameNumber: Number(files[i].name.match(/\\d+/)),\r\n      cloudUrl: jpegUrl,\r\n      cloudUrlWebp: webpUrl,\r\n      thumbnail: jpegThumbnailUrl,\r\n      thumbnailWebp: webpThumbnailUrl,\r\n      selected: false,\r\n      comment: '',\r\n      dateTaken: data ? data.ModifyDate : null,\r\n    });\r\n    progress += progressStep;\r\n    setUploadProgress(progress);\r\n  }\r\n  return photosArray;\r\n};\r\n\r\nexport const updatePhotoSelection = async (\r\n  collectionId: string,\r\n  photoId: string,\r\n  selected: boolean\r\n) => {\r\n  const photoRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos')\r\n    .doc(photoId);\r\n  try {\r\n    await photoRef.update({ selected });\r\n  } catch (err) {\r\n    throw new Error('failed updating selection');\r\n  }\r\n};\r\nexport const updatePhotoComment = async (\r\n  collectionId: string,\r\n  photoId: string,\r\n  comment: string\r\n) => {\r\n  const photoRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos')\r\n    .doc(photoId);\r\n  try {\r\n    await photoRef.update({ comment });\r\n  } catch (err) {\r\n    throw new Error('failed updating comment');\r\n  }\r\n};\r\n\r\nexport const confirmCollection = async (\r\n  collectionId: string,\r\n  finalComment?: string\r\n) => {\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n  try {\r\n    await collectionRef.update({\r\n      status: 'confirmed',\r\n      finalComment: finalComment || '',\r\n    });\r\n  } catch (err) {\r\n    throw new Error('failed confirming collection');\r\n  }\r\n};\r\n\r\nexport const deletePhotos = async (\r\n  collectionId: string,\r\n  photoIds: string[],\r\n  setDeleteProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  setDeleteProgress(1);\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos');\r\n\r\n  const progressStep = 100 / photoIds.length;\r\n  let progress = 0;\r\n\r\n  try {\r\n    for (let id of photoIds) {\r\n      const storageRef = storage.ref(collectionId);\r\n      const docRef = photosRef.doc(id);\r\n      await storageRef.child(`${id}.jpg`).delete();\r\n      await storageRef.child(`${id}_1400x1000.webp`).delete();\r\n      await storageRef.child(`${id}_400x700.jpg`).delete();\r\n      await storageRef.child(`${id}_400x700.webp`).delete();\r\n      await docRef.delete();\r\n      progress += progressStep;\r\n      setDeleteProgress(progress);\r\n    }\r\n  } catch (err) {\r\n    console.error('error deleting photos', err);\r\n    return;\r\n  }\r\n  return;\r\n};\r\n\r\nexport const resetPhotos = async (collectionId: string, photos: Photo[]) => {\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos');\r\n  const batch = firestore.batch();\r\n\r\n  for (const photo of photos) {\r\n    batch.update(photosRef.doc(photo.id), { selected: false, comment: '' });\r\n  }\r\n  try {\r\n    await batch.commit();\r\n  } catch (err) {\r\n    throw new Error(`error reseting photos: ${err}`);\r\n  }\r\n};\r\n\r\nexport const deleteCollection = async (\r\n  collectionId: string,\r\n  setDeleteProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  setDeleteProgress(1);\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos');\r\n\r\n  const collectionRef = await firestore\r\n    .collection('collections')\r\n    .doc(collectionId);\r\n\r\n  const photos = await photosRef.get();\r\n\r\n  const progressStep = 100 / photos.size;\r\n  let progress = 0;\r\n\r\n  try {\r\n    for (let photo of photos.docs) {\r\n      const storageRef = storage.ref(collectionId);\r\n      const docRef = photosRef.doc(photo.data().id);\r\n      await storageRef.child(`${photo.data().id}.jpg`).delete();\r\n      await storageRef.child(`${photo.data().id}_1400x1000.webp`).delete();\r\n      await storageRef.child(`${photo.data().id}_400x700.jpg`).delete();\r\n      await storageRef.child(`${photo.data().id}_400x700.webp`).delete();\r\n      await docRef.delete();\r\n      progress += progressStep;\r\n      setDeleteProgress(progress);\r\n    }\r\n    await collectionRef.delete();\r\n  } catch (err) {\r\n    console.error('error deleting collection', err);\r\n    return;\r\n  }\r\n  return;\r\n};\r\n\r\nexport const getCollections = async () => {\r\n  console.log('getting collections');\r\n  const collectionsArray: Collection[] = [];\r\n  const collections = await firestore\r\n    .collection('collections')\r\n    .orderBy('dateCreated', 'desc')\r\n    .get();\r\n  for (const collection of collections.docs) {\r\n    const photos = await firestore\r\n      .collection('collections')\r\n      .doc(collection.id)\r\n      .collection('photos')\r\n      .orderBy('dateTaken')\r\n      .get();\r\n    const photosArray: Photo[] = [];\r\n    let index = 1;\r\n    photos.forEach((photo) => {\r\n      const photoObj = {\r\n        index,\r\n        id: photo.data().id,\r\n        cloudUrl: photo.data().cloudUrl,\r\n        cloudUrlWebp: photo.data().cloudUrlWebp,\r\n        thumbnail: photo.data().thumbnail,\r\n        thumbnailWebp: photo.data().thumbnailWebp,\r\n        filename: photo.data().filename,\r\n        filenameNumber: photo.data().filenameNumber,\r\n        selected: photo.data().selected,\r\n        comment: photo.data().comment,\r\n        dateTaken: photo.data().dateTaken,\r\n      };\r\n      photosArray.push(photoObj);\r\n      index++;\r\n    });\r\n    const collectionObj = {\r\n      id: collection.id,\r\n      title: collection.data().title,\r\n      dateCreated: collection.data().dateCreated,\r\n      minSelect: collection.data().minSelect,\r\n      maxSelect: collection.data().maxSelect,\r\n      allowComments: collection.data().allowComments,\r\n      status: collection.data().status,\r\n      finalComment: collection.data().finalComment,\r\n      photos: photosArray,\r\n    };\r\n    collectionsArray.push(collectionObj);\r\n  }\r\n  return collectionsArray;\r\n};\r\n\r\nexport const getSingleCollection = async (id: string) => {\r\n  console.log('getting single collection');\r\n  try {\r\n    const collection = await firestore.collection('collections').doc(id).get();\r\n    const photos = await firestore\r\n      .collection('collections')\r\n      .doc(id)\r\n      .collection('photos')\r\n      .orderBy('dateTaken')\r\n      .get();\r\n    const photosArray: Photo[] = [];\r\n    let index = 1;\r\n    photos.forEach((photo) => {\r\n      const photoObj = {\r\n        index,\r\n        id: photo.data().id,\r\n        cloudUrl: photo.data().cloudUrl,\r\n        cloudUrlWebp: photo.data().cloudUrlWebp,\r\n        thumbnail: photo.data().thumbnail,\r\n        thumbnailWebp: photo.data().thumbnailWebp,\r\n        filename: photo.data().filename,\r\n        filenameNumber: photo.data().filenameNumber,\r\n        selected: photo.data().selected,\r\n        comment: photo.data().comment,\r\n        dateTaken: photo.data().dateTaken,\r\n      };\r\n      photosArray.push(photoObj);\r\n      index++;\r\n    });\r\n\r\n    const collectionObj = {\r\n      id: collection.id,\r\n      title: collection.data()?.title,\r\n      dateCreated: collection.data()?.dateCreated,\r\n      minSelect: collection.data()?.minSelect,\r\n      maxSelect: collection.data()?.maxSelect,\r\n      allowComments: collection.data()?.allowComments,\r\n      status: collection.data()?.status,\r\n      finalComment: collection.data()?.finalComment,\r\n      photos: photosArray,\r\n    };\r\n    return collectionObj;\r\n  } catch (err) {\r\n    throw new Error('failed getting single collection');\r\n  }\r\n};\r\n\r\nexport const collectionStatus = async (\r\n  collectionId: string,\r\n  status: Collection['status']\r\n) => {\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n\r\n  try {\r\n    await collectionRef.update({ status });\r\n  } catch (err) {\r\n    throw new Error('failed changing collection status');\r\n  }\r\n};\r\n","export const firebaseConfig = {\n  apiKey: 'AIzaSyDHmQizp773R-suNhqIN1be1of5CDmZfeA',\n  authDomain: 'photo-proof-6b9c0.firebaseapp.com',\n  projectId: 'photo-proof-6b9c0',\n  storageBucket: 'photo-proof-6b9c0.appspot.com',\n  messagingSenderId: '845535406744',\n  appId: '1:845535406744:web:ea79f61dc4ab063be9beed',\n  measurementId: 'G-2T5LPCQMXT',\n};\n","import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  LinearProgress,\n  DialogActions,\n  Button,\n} from '@material-ui/core';\n\ninterface ConfirmationDialogProps {\n  dialogOpen: boolean;\n  progress?: number;\n  onClickCancel: React.MouseEventHandler<HTMLButtonElement>;\n  onClickAgree: React.MouseEventHandler<HTMLButtonElement>;\n  dialogTitle: string;\n  dialogContentText: string;\n}\n\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\n  dialogOpen,\n  progress,\n  onClickCancel,\n  onClickAgree,\n  dialogTitle,\n  dialogContentText,\n}) => {\n  return (\n    <Dialog open={dialogOpen}>\n      <DialogTitle id='alert-dialog-title'>{dialogTitle}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id='alert-dialog-description'>\n          {dialogContentText}\n        </DialogContentText>\n        {progress ? (\n          <LinearProgress variant='determinate' value={progress} />\n        ) : null}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          disabled={!!progress}\n          onClick={onClickCancel}\n          color='primary'\n          autoFocus\n        >\n          Cancel\n        </Button>\n        <Button disabled={!!progress} onClick={onClickAgree} color='secondary'>\n          Yes\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport default ConfirmationDialog;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Collection, Photo } from '../../../types';\nimport { getCollections, deleteCollection } from '../../../firebase';\nimport styles from './styles.module.scss';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Backdrop,\n  CircularProgress,\n  IconButton,\n} from '@material-ui/core';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ConfirmationDialog from '../../ConfirmationDialog/ConfirmationDialog';\n\nconst CollectionList: React.FC = () => {\n  const [collections, setCollections] = useState<Collection[] | null>(null);\n  const [deleteProgress, setDeleteProgress] = useState(0);\n  const [dialogOpen, setDialogOpen] = useState(false);\n  const [requestDeleteId, setRequestDeleteId] = useState('');\n  const [requestDeleteName, setRequestDeleteName] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    getCollections().then((data) => setCollections(data));\n  }, []);\n\n  const selectedPhotos = (photos: Photo[]) => {\n    return photos.filter((photo) => photo.selected).length;\n  };\n\n  const requestToDelete = (collectionId: string) => {\n    setDialogOpen(true);\n    setRequestDeleteId(collectionId);\n    if (collections) {\n      const collectionToDelete = collections.find(\n        (collection) => collection.id === collectionId\n      );\n      if (collectionToDelete) {\n        setRequestDeleteName(collectionToDelete.title);\n      }\n    }\n  };\n\n  const handleAgree = async () => {\n    await deleteCollection(requestDeleteId, setDeleteProgress);\n    setDialogOpen(false);\n    setDeleteProgress(0);\n    if (collections) {\n      const filterRemovedCollection = collections.filter(\n        (collection) => collection.id !== requestDeleteId\n      );\n      if (filterRemovedCollection) {\n        setCollections(filterRemovedCollection);\n      }\n    }\n  };\n\n  const handleRowClick = (collectionId: string) => {\n    history.push(`edit/${collectionId}`);\n  };\n\n  if (collections === null) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  } else {\n    return (\n      <div>\n        <TableContainer>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell width='10%'>first image</TableCell>\n                <TableCell width='30%'>name</TableCell>\n                <TableCell width='20%'>status</TableCell>\n                <TableCell>selected photos</TableCell>\n                <TableCell></TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {collections.map((collection) => {\n                return (\n                  <TableRow key={collection.id} hover={true}>\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\n                      {collection.photos[0] ? (\n                        <picture>\n                          <source\n                            srcSet={collection.photos[0].thumbnailWebp}\n                            type='image/webp'\n                          />\n                          <img\n                            src={collection.photos[0].thumbnail}\n                            alt='first collection img'\n                            className={styles.thumbnail}\n                          />\n                        </picture>\n                      ) : null}\n                    </TableCell>\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\n                      {collection.title}\n                    </TableCell>\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\n                      {collection.status}\n                    </TableCell>\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\n                      {selectedPhotos(collection.photos)}/\n                      {collection.photos.length}\n                    </TableCell>\n                    <TableCell align='right'>\n                      <IconButton\n                        onClick={(event) => requestToDelete(collection.id)}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </TableCell>\n                  </TableRow>\n                );\n              })}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <ConfirmationDialog\n          dialogOpen={dialogOpen}\n          progress={deleteProgress}\n          onClickCancel={() => setDialogOpen(false)}\n          onClickAgree={handleAgree}\n          dialogTitle={`Do you really want to delete collection '${requestDeleteName}'?`}\n          dialogContentText={'Delete action cannot be reverted!'}\n        />\n      </div>\n    );\n  }\n};\n\nexport default CollectionList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CollectionList from './CollectionsList/CollectionsList';\nimport { Typography, Button } from '@material-ui/core';\n\nconst Dashboard: React.FC = () => {\n  return (\n    <div>\n      <Typography variant='h4'>dashboard</Typography>\n      <div>\n\n        <Button to='/settings' component={Link} variant='outlined'>\n          Settings\n        </Button>\n        <Button to='/new' component={Link} variant='outlined'>\n          Create New Collection\n        </Button>\n      </div>\n      <CollectionList />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport styles from './styles.module.scss';\nimport { Link, useHistory } from 'react-router-dom';\nimport { generateNewCollection } from '../../firebase';\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n  Checkbox,\n  Typography,\n  Button,\n  TextField,\n  FormControlLabel,\n  LinearProgress,\n  Box,\n  Backdrop,\n  CircularProgress,\n} from '@material-ui/core';\nimport { DropzoneArea } from 'material-ui-dropzone';\n\ntype Inputs = {\n  files: FileList;\n  title: string;\n  minSelectRequired: boolean;\n  minSelectGoal: number;\n  maxSelectRequired: boolean;\n  maxSelectGoal: number;\n  allowComments: boolean;\n};\n\nconst NewCollection: React.FC = () => {\n  const {\n    register,\n    handleSubmit,\n    watch,\n    errors,\n    getValues,\n    control,\n  } = useForm<Inputs>();\n  const [uploading, setUploading] = useState(false);\n  const [uploadProgress, setUplaodProgress] = useState(0);\n  const [thumbnailReady, setThumbnailReady] = useState(true);\n  const history = useHistory();\n\n  const minToggle = watch('minSelectRequired');\n  const maxToggle = watch('maxSelectRequired');\n\n  const onSubmit = async (data: Inputs) => {\n    console.log(data);\n    setUploading(true);\n    const collectionId = await generateNewCollection(\n      {\n        title: data.title,\n        minSelect: {\n          required: data.minSelectRequired,\n          goal: data.minSelectGoal,\n        },\n        maxSelect: {\n          required: data.maxSelectRequired,\n          goal: data.maxSelectGoal,\n        },\n        allowComments: data.allowComments,\n      },\n      data.files,\n      setUplaodProgress\n    );\n    setUploading(false);\n    setThumbnailReady(false);\n    history.push(`/edit/${collectionId}`);\n  };\n\n  if (!thumbnailReady) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  }\n\n  return (\n    <div>\n      <Button to='/' component={Link} variant='outlined'>\n        Cancel\n      </Button>\n      <Typography variant='h4'>new collection</Typography>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <Button color='primary' variant='contained' type='submit'>\n            Create\n          </Button>\n          {uploading ? (\n            <Box p={'3px'}>\n              <LinearProgress variant='determinate' value={uploadProgress} />\n            </Box>\n          ) : (\n            <Box p={'5px'}></Box>\n          )}\n        </div>\n        <TextField\n          name='title'\n          inputRef={register({ required: true, maxLength: 50 })}\n          variant='outlined'\n          label='Title'\n          error={!!errors.title}\n          helperText={errors.title ? 'Title is required' : ' '}\n        />\n        <div>\n          <FormControlLabel control={<Checkbox />} label='Apply watermark' />\n        </div>\n        <div>\n          <FormControlLabel\n            control={<Checkbox name='allowComments' inputRef={register} />}\n            label='Allow comments'\n          />\n        </div>\n        <Typography variant='subtitle1'>selection goals:</Typography>\n        <div>\n          <FormControlLabel\n            control={<Checkbox name='minSelectRequired' inputRef={register} />}\n            label='minimum'\n          />\n          <div style={{ display: minToggle ? 'inline' : 'none' }}>\n            <TextField\n              name='minSelectGoal'\n              type='number'\n              variant='outlined'\n              size='small'\n              InputProps={{\n                inputProps: {\n                  max: 999,\n                  min: 1,\n                },\n              }}\n              inputRef={register({\n                min: '1',\n                max: '999',\n                valueAsNumber: true,\n                validate: {\n                  lowerThanMax: (value) =>\n                    !getValues('maxSelectRequired') ||\n                    getValues('maxSelectGoal') >= value,\n                },\n              })}\n              error={!!errors.minSelectGoal}\n              helperText={\n                errors.minSelectGoal && 'Must be higher than maximum value'\n              }\n            />\n          </div>\n        </div>\n        <div>\n          <FormControlLabel\n            control={<Checkbox name='maxSelectRequired' inputRef={register} />}\n            label='maximum'\n          />\n          <div style={{ display: maxToggle ? 'inline' : 'none' }}>\n            <TextField\n              name='maxSelectGoal'\n              type='number'\n              variant='outlined'\n              size='small'\n              InputProps={{\n                inputProps: {\n                  max: 999,\n                  min: 1,\n                },\n              }}\n              inputRef={register({\n                min: '1',\n                max: '999',\n                valueAsNumber: true,\n                validate: {\n                  higherThanMin: (value) =>\n                    !getValues('minSelectRequired') ||\n                    getValues('minSelectGoal') <= value,\n                },\n              })}\n              error={!!errors.maxSelectGoal}\n              helperText={\n                errors.maxSelectGoal && 'Must be higher than minimum value'\n              }\n            />\n          </div>\n        </div>\n        <Controller\n          name='files'\n          control={control}\n          render={({ onChange }) => (\n            <DropzoneArea\n              acceptedFiles={['image/jpeg']}\n              dropzoneText={'Drop images or click to upload here'}\n              onChange={(files) => {\n                console.log(files);\n                return onChange([...files]);\n              }}\n              filesLimit={999}\n              previewGridClasses={{\n                container: styles.previewContainer,\n                item: `${styles.previewItem} itemReference`,\n                image: styles.previewImage,\n              }}\n              previewGridProps={{\n                container: {\n                  spacing: 1,\n                },\n                item: { sm: 2, lg: 1, md: 1 },\n              }}\n              showAlerts={false}\n              showPreviewsInDropzone={false}\n              showPreviews={true}\n              showFileNamesInPreview={true}\n              dropzoneClass={'dropzoneClass'}\n            />\n          )}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default NewCollection;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n//TODO implement interactive watermark size/angle adjustment\n//TODO rethink how to display images on CollectionPage, maybe grid setting is not required\n\nconst Settings: React.FC = () => {\n  return (\n    <div>\n      <Link to='/'>\n        <button>home</button>\n      </Link>\n      <h2>settings</h2>\n      <form>\n        <div>\n          grid width<input type='number'></input>\n        </div>\n        <div>\n          upload watermark<input type='file'></input>\n        </div>\n        <div>\n          watermark size, px<input min='0' type='number'></input>\n        </div>\n        <div>\n          watermark angle, deg<input min='0' max='360' type='number'></input>\n        </div>\n        <div>\n          <button>save</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Settings;\n","import { Box, Button, TextField, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { auth } from '../../firebase';\nimport { useForm } from 'react-hook-form';\n\nconst SignIn = () => {\n  const { register, handleSubmit, errors, setError } = useForm();\n\n  const signInWithEmailAndPasswordHandler = async (data: any) => {\n    try {\n      await auth.signInWithEmailAndPassword(data.email, data.password);\n    } catch (err) {\n      setError('email', {\n        message: ' ',\n      });\n      setError('password', {\n        message: 'Email or password is incorrect',\n      });\n      console.error('error signin in with password and email', err);\n    }\n  };\n\n  return (\n    <div>\n      <Typography variant='h4'>Sign In</Typography>\n      <Box mt={3}>\n        <form onSubmit={handleSubmit(signInWithEmailAndPasswordHandler)}>\n          <div>\n            <TextField\n              variant='outlined'\n              name='email'\n              label='Email'\n              inputRef={register({ required: true })}\n              error={!!errors.email}\n              helperText={\n                errors.email ? errors.email.message || 'Email is required' : ' '\n              }\n            />\n          </div>\n          <div>\n            <TextField\n              type='password'\n              variant='outlined'\n              name='password'\n              label='Password'\n              inputRef={register({ required: true })}\n              error={!!errors.password}\n              helperText={\n                errors.password\n                  ? errors.password.message || 'Password is required'\n                  : ' '\n              }\n            />\n          </div>\n          <div>\n            <Button type='submit' variant='outlined'>\n              Sign in\n            </Button>\n          </div>\n        </form>\n      </Box>\n    </div>\n  );\n};\nexport default SignIn;\n","import React from 'react';\nimport { Photo } from '../../types';\nimport styles from './styles.module.scss';\n// @ts-ignore\nimport { isWebpSupported } from 'react-image-webp/dist/utils';\nimport Lightbox from 'react-image-lightbox';\nimport { Typography } from '@material-ui/core';\n\ninterface LightboxProps {\n  filteredPhotos: Photo[];\n  setLightboxOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  lightboxIndex: number;\n  setLightboxIndex: React.Dispatch<React.SetStateAction<number>>;\n  toolbarButtons: React.ReactNode[];\n}\n\n//TODO toolbar obstructs photo\n//TODO arrow buttons obstruct photo\n\nconst LightboxComponent: React.FC<LightboxProps> = ({\n  filteredPhotos,\n  setLightboxOpen,\n  lightboxIndex,\n  setLightboxIndex,\n  toolbarButtons,\n}) => {\n  return (\n    <Lightbox\n      mainSrc={\n        isWebpSupported\n          ? filteredPhotos[lightboxIndex].cloudUrlWebp\n          : filteredPhotos[lightboxIndex].cloudUrl\n      }\n      nextSrc={\n        isWebpSupported\n          ? filteredPhotos[(lightboxIndex + 1) % filteredPhotos.length]\n              .cloudUrlWebp\n          : filteredPhotos[(lightboxIndex + 1) % filteredPhotos.length].cloudUrl\n      }\n      prevSrc={\n        isWebpSupported\n          ? filteredPhotos[\n              (lightboxIndex + filteredPhotos.length - 1) %\n                filteredPhotos.length\n            ].cloudUrlWebp\n          : filteredPhotos[\n              (lightboxIndex + filteredPhotos.length - 1) %\n                filteredPhotos.length\n            ].cloudUrl\n      }\n      onCloseRequest={() => setLightboxOpen(false)}\n      onMovePrevRequest={() =>\n        setLightboxIndex(\n          (lightboxIndex + filteredPhotos.length - 1) % filteredPhotos.length\n        )\n      }\n      onMoveNextRequest={() =>\n        setLightboxIndex((lightboxIndex + 1) % filteredPhotos.length)\n      }\n      toolbarButtons={toolbarButtons}\n      enableZoom={false}\n      imageTitle={\n        <Typography classes={{ root: styles.photoIndex }}>\n          {filteredPhotos[lightboxIndex].index}.\n        </Typography>\n      }\n    />\n  );\n};\n\nexport default LightboxComponent;\n","import React from 'react';\nimport styles from './styles.module.scss';\nimport { LockedViewProps } from '../../../types';\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n} from '@material-ui/core';\n\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport MessageIcon from '@material-ui/icons/Message';\n\nimport Lightbox from '../../Lightbox/Lightbox';\n\nconst LockedView: React.FC<LockedViewProps> = ({\n  collection,\n  filteredPhotos,\n  lightboxOpen,\n  setLightboxOpen,\n  openLightbox,\n  openCommentModal,\n  photoIndex,\n  setPhotoIndex,\n  commentOpen,\n  setCommentOpen,\n  commentTextarea,\n}) => {\n  return (\n    <div>\n      <div className={styles.photoGrid}>\n        {filteredPhotos.map((photo, index) => {\n          return (\n            <div className={styles.photoThumbnailGrid} key={photo.id}>\n              <div className={styles.imgBorder}>\n                <picture>\n                  <source srcSet={photo.thumbnailWebp} type='image/webp' />\n                  <img\n                    src={photo.thumbnail}\n                    alt={collection.title}\n                    onClick={openLightbox(Number(index))}\n                  />\n                </picture>\n                {photo.comment.length > 0 && collection.allowComments ? (\n                  <IconButton\n                    className={styles.commentBtnFilled}\n                    onClick={() => openCommentModal(index)}\n                  >\n                    <MessageIcon />\n                  </IconButton>\n                ) : null}\n                {photo.selected ? (\n                  <IconButton className={styles.starBtnSelected}>\n                    <StarIcon />\n                  </IconButton>\n                ) : null}\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {lightboxOpen && filteredPhotos.length > 0 && (\n        <Lightbox\n          filteredPhotos={filteredPhotos}\n          setLightboxOpen={setLightboxOpen}\n          lightboxIndex={photoIndex}\n          setLightboxIndex={setPhotoIndex}\n          toolbarButtons={[\n            <IconButton>\n              {filteredPhotos[photoIndex].selected ? (\n                <StarIcon className={styles.toolbarIcon} />\n              ) : (\n                <StarBorderIcon className={styles.toolbarIcon} />\n              )}\n            </IconButton>,\n            collection.allowComments ? (\n              <IconButton onClick={() => openCommentModal()}>\n                {filteredPhotos[photoIndex].comment.length > 0 ? (\n                  <MessageIcon className={styles.toolbarIcon} />\n                ) : (\n                  <ChatBubbleOutlineIcon className={styles.toolbarIcon} />\n                )}\n              </IconButton>\n            ) : null,\n          ]}\n        />\n      )}\n      <Dialog open={commentOpen} onClose={() => setCommentOpen(false)}>\n        <DialogTitle id='alert-dialog-title'>Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            multiline\n            rows={4}\n            variant='outlined'\n            value={commentTextarea}\n            disabled\n          />\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default LockedView;\n","import React, { useState } from 'react';\nimport styles from './styles.module.scss';\nimport { SelectionViewProps } from '../../../types';\nimport {\n  updatePhotoSelection,\n  updatePhotoComment,\n  confirmCollection,\n} from '../../../firebase';\nimport {\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  IconButton,\n  TextField,\n  DialogActions,\n  Button,\n  DialogContentText,\n} from '@material-ui/core';\n\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport StarIcon from '@material-ui/icons/Star';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport MessageIcon from '@material-ui/icons/Message';\n\nimport Lightbox from '../../Lightbox/Lightbox';\nimport { useForm } from 'react-hook-form';\n\nconst SelectionView: React.FC<SelectionViewProps> = ({\n  collection,\n  setCollection,\n  collectionId,\n  filteredPhotos,\n  lightboxOpen,\n  setLightboxOpen,\n  openLightbox,\n  openCommentModal,\n  photoIndex,\n  setPhotoIndex,\n  commentOpen,\n  setCommentOpen,\n  commentTextarea,\n  setCommentTextarea,\n  selectedPhotos,\n}) => {\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\n  const { register, handleSubmit } = useForm<any>({\n    defaultValues: { files: [] },\n  });\n  const [confirmForbidDialogOpen, setConfirmForbidDialogOpen] = useState(false);\n\n  const selectPhoto = (photoId: string) => (event: any) => {\n    try {\n      const clickedPhoto = collection?.photos.find(\n        (photo) => photo.id === photoId\n      );\n      if (clickedPhoto && collection) {\n        updatePhotoSelection(collectionId, photoId, !clickedPhoto.selected);\n        clickedPhoto.selected = !clickedPhoto?.selected;\n        setCollection({\n          ...collection,\n          photos: collection.photos.map((photo) =>\n            photo.id === photoId ? clickedPhoto : photo\n          ),\n        });\n      }\n    } catch (err) {\n      //\n    }\n  };\n\n  const selectPhotoLightbox = () => {\n    if (filteredPhotos && collection) {\n      try {\n        const clickedPhoto = filteredPhotos[photoIndex];\n        if (clickedPhoto && collection) {\n          updatePhotoSelection(\n            collectionId,\n            clickedPhoto.id,\n            !clickedPhoto.selected\n          );\n          clickedPhoto.selected = !clickedPhoto?.selected;\n          setCollection({\n            ...collection,\n            photos: collection.photos.map((photo) =>\n              photo.id === clickedPhoto.id ? clickedPhoto : photo\n            ),\n          });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const savePhotoComment = () => {\n    setCommentOpen(false);\n    if (filteredPhotos && collection) {\n      try {\n        const clickedPhoto = filteredPhotos[photoIndex];\n        if (clickedPhoto && collection) {\n          updatePhotoComment(collectionId, clickedPhoto.id, commentTextarea);\n          clickedPhoto.comment = commentTextarea;\n          setCollection({\n            ...collection,\n            photos: collection.photos.map((photo) =>\n              photo.id === clickedPhoto.id ? clickedPhoto : photo\n            ),\n          });\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const handleCommentTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    e.preventDefault();\n    setCommentTextarea(e.target.value);\n  };\n\n  const confirmSelections = async (data: { finalComment: string }) => {\n    console.log(data);\n    await confirmCollection(collectionId, data.finalComment);\n    setConfirmDialogOpen(false);\n    setCollection({\n      ...collection,\n      status: 'confirmed',\n      finalComment: data.finalComment,\n    });\n  };\n\n  return (\n    <div>\n      <div className={styles.photoGrid}>\n        {filteredPhotos.map((photo, index) => {\n          return (\n            <div className={styles.photoThumbnailGrid} key={photo.id}>\n              <div className={styles.imgBorder}>\n                <picture>\n                  <source srcSet={photo.thumbnailWebp} type='image/webp' />\n                  <img\n                    src={photo.thumbnail}\n                    alt={collection.title}\n                    onClick={openLightbox(Number(index))}\n                  />\n                </picture>\n                {collection.allowComments ? (\n                  <IconButton\n                    className={\n                      photo.comment.length > 0\n                        ? styles.commentBtnFilled\n                        : styles.commentBtn\n                    }\n                    onClick={() => openCommentModal(index)}\n                  >\n                    {photo.comment.length > 0 ? (\n                      <MessageIcon />\n                    ) : (\n                      <ChatBubbleOutlineIcon />\n                    )}\n                  </IconButton>\n                ) : null}\n\n                <IconButton\n                  className={\n                    photo.selected ? styles.starBtnSelected : styles.starBtn\n                  }\n                  onClick={selectPhoto(photo.id)}\n                >\n                  {photo.selected ? <StarIcon /> : <StarBorderIcon />}\n                </IconButton>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {lightboxOpen && filteredPhotos.length > 0 && (\n        <Lightbox\n          filteredPhotos={filteredPhotos}\n          setLightboxOpen={setLightboxOpen}\n          lightboxIndex={photoIndex}\n          setLightboxIndex={setPhotoIndex}\n          toolbarButtons={[\n            <IconButton onClick={selectPhotoLightbox}>\n              {filteredPhotos[photoIndex].selected ? (\n                <StarIcon className={styles.toolbarIcon} />\n              ) : (\n                <StarBorderIcon className={styles.toolbarIcon} />\n              )}\n            </IconButton>,\n            collection.allowComments ? (\n              <IconButton onClick={() => openCommentModal()}>\n                {filteredPhotos[photoIndex].comment.length > 0 ? (\n                  <MessageIcon className={styles.toolbarIcon} />\n                ) : (\n                  <ChatBubbleOutlineIcon className={styles.toolbarIcon} />\n                )}\n              </IconButton>\n            ) : null,\n          ]}\n        />\n      )}\n\n      <Dialog open={commentOpen} onClose={() => setCommentOpen(false)}>\n        <DialogTitle id='alert-dialog-title'>Comment</DialogTitle>\n        <DialogContent>\n          <TextField\n            multiline\n            rows={4}\n            variant='outlined'\n            value={commentTextarea}\n            onChange={handleCommentTextarea}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => setCommentOpen(false)}\n            color='secondary'\n            autoFocus\n          >\n            Cancel\n          </Button>\n          <Button onClick={savePhotoComment} color='primary'>\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Button\n        variant='contained'\n        classes={{ root: styles.fixedBtn }}\n        onClick={() => {\n          if (selectedPhotos) {\n            if (\n              (collection.minSelect.required &&\n                selectedPhotos < collection.minSelect.goal) ||\n              (collection.maxSelect.required &&\n                selectedPhotos > collection.maxSelect.goal)\n            ) {\n              return setConfirmForbidDialogOpen(true);\n            }\n          }\n          return setConfirmDialogOpen(true);\n        }}\n      >\n        Confirm selections\n      </Button>\n\n      <Dialog\n        open={confirmForbidDialogOpen}\n        onClose={() => setConfirmForbidDialogOpen(false)}\n      >\n        <DialogTitle id='alert-dialog-title'>\n          Please adjust your selections!\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You have selected <strong>{selectedPhotos}</strong> photos, but{' '}\n            {collection.minSelect.required && collection.maxSelect.required ? (\n              <span>\n                you must select{' '}\n                <strong>\n                  from {collection.minSelect.goal} to{' '}\n                  {collection.maxSelect.goal}\n                </strong>{' '}\n                photos.\n              </span>\n            ) : collection.minSelect.required &&\n              !collection.maxSelect.required ? (\n              <span>\n                you must select{' '}\n                <strong>at least {collection.minSelect.goal}</strong> photos.\n              </span>\n            ) : !collection.minSelect.required &&\n              collection.maxSelect.required ? (\n              <span>\n                you must select{' '}\n                <strong>a maximum of {collection.maxSelect.goal}</strong>{' '}\n                photos.\n              </span>\n            ) : null}{' '}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            onClick={() => setConfirmForbidDialogOpen(false)}\n            color='primary'\n            autoFocus\n          >\n            Cancel\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={confirmDialogOpen}\n        onClose={() => setConfirmDialogOpen(false)}\n      >\n        <form onSubmit={handleSubmit(confirmSelections)}>\n          <DialogTitle id='alert-dialog-title'>Confirm selections</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              You have selected <strong>{selectedPhotos} photos</strong>.\n            </DialogContentText>\n            <DialogContentText>\n              Do you want to leave a final comment?\n            </DialogContentText>\n            <TextField\n              multiline\n              rows={3}\n              fullWidth\n              variant='outlined'\n              placeholder='Final comment'\n              name='finalComment'\n              inputRef={register}\n            />\n            <DialogContentText>\n              <strong>Warning:</strong> you will not be able to select more\n              photos after confirming!\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => setConfirmDialogOpen(false)}\n              color='secondary'\n              autoFocus\n            >\n              Cancel\n            </Button>\n            <Button type='submit' color='primary'>\n              Confirm\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default SelectionView;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Collection, Photo } from '../../types';\nimport { getSingleCollection } from '../../firebase';\nimport {\n  Backdrop,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Typography,\n} from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/Lock';\n\nimport LockedView from './LockedView/LockedView';\nimport SelectionView from './SelectionView/SelectionView';\n\nconst CollectionPage: React.FC = () => {\n  const { id: collectionId } = useParams<{ id: string }>();\n  const [collection, setCollection] = useState<Collection | null>(null);\n  const [filteredPhotos, setFilteredPhotos] = useState<Photo[]>([]);\n  const [filter, setFilter] = useState('all');\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [photoIndex, setPhotoIndex] = useState(0);\n  const [commentTextarea, setCommentTextarea] = useState('');\n  const [commentOpen, setCommentOpen] = useState(false);\n\n  useEffect(() => {\n    getSingleCollection(collectionId).then((collection) => {\n      setCollection(collection);\n      setFilteredPhotos(collection.photos);\n    });\n  }, [collectionId]);\n\n  useEffect(() => {\n    if (collection) {\n      switch (filter) {\n        case 'all':\n          return setFilteredPhotos(collection.photos);\n        case 'selected':\n          const selectedPhotos = collection.photos.filter(\n            (photo) => photo.selected\n          );\n          if (selectedPhotos.length === 0) {\n            setLightboxOpen(false);\n          } else if (selectedPhotos.length <= photoIndex) {\n            setPhotoIndex(selectedPhotos.length - 1);\n          }\n          return setFilteredPhotos(selectedPhotos);\n        case 'unselected':\n          const unselectedPhotos = collection.photos.filter(\n            (photo) => !photo.selected\n          );\n          if (unselectedPhotos.length === 0) {\n            setLightboxOpen(false);\n          } else if (unselectedPhotos.length <= photoIndex) {\n            setPhotoIndex(unselectedPhotos.length - 1);\n          }\n\n          return setFilteredPhotos(unselectedPhotos);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [filter, collection]);\n\n  const changeFilter = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setFilter(e.target.value as string);\n  };\n\n  const openCommentModal = (index?: number) => {\n    setCommentOpen(true);\n    if (filteredPhotos) {\n      if (index) {\n        setPhotoIndex(index);\n        setCommentTextarea(filteredPhotos[index].comment);\n      } else {\n        setCommentTextarea(filteredPhotos[photoIndex].comment);\n      }\n    }\n  };\n\n  const openLightbox = (index: number) => (event: any) => {\n    setPhotoIndex(index);\n    setLightboxOpen(true);\n  };\n\n  const selectedPhotos = collection?.photos.filter((photo) => photo.selected)\n    .length;\n\n  if (collection === null) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  }\n\n  return (\n    <div>\n      <Typography variant='h4'>\n        {collection.title} {collection.status !== 'selecting' && <LockIcon />}\n      </Typography>\n      <Typography variant='h6'>Selected: {selectedPhotos}</Typography>\n      {collection.minSelect.required && collection.maxSelect.required ? (\n        <Typography>\n          You must select from {collection.minSelect.goal} to{' '}\n          {collection.maxSelect.goal} photos\n        </Typography>\n      ) : collection.minSelect.required && !collection.maxSelect.required ? (\n        <Typography>\n          You must select at least {collection.minSelect.goal} photos\n        </Typography>\n      ) : !collection.minSelect.required && collection.maxSelect.required ? (\n        <Typography>\n          You must select a maximum of {collection.maxSelect.goal} photos\n        </Typography>\n      ) : null}\n      <FormControl>\n        <InputLabel>Filter</InputLabel>\n        <Select value={filter} onChange={changeFilter}>\n          <MenuItem value={'all'}>All</MenuItem>\n          <MenuItem value={'selected'}>Selected</MenuItem>\n          <MenuItem value={'unselected'}>Unselected</MenuItem>\n        </Select>\n      </FormControl>\n      {collection.photos.length === 0 ? (\n        <div>no photos in collection</div>\n      ) : filteredPhotos.length === 0 ? (\n        <div>no photos in this filter</div>\n      ) : null}\n      {collection.status === 'selecting' ? (\n        <SelectionView\n          collection={collection}\n          setCollection={setCollection}\n          collectionId={collectionId}\n          filteredPhotos={filteredPhotos}\n          lightboxOpen={lightboxOpen}\n          setLightboxOpen={setLightboxOpen}\n          openLightbox={openLightbox}\n          openCommentModal={openCommentModal}\n          photoIndex={photoIndex}\n          setPhotoIndex={setPhotoIndex}\n          commentOpen={commentOpen}\n          setCommentOpen={setCommentOpen}\n          commentTextarea={commentTextarea}\n          setCommentTextarea={setCommentTextarea}\n          selectedPhotos={selectedPhotos}\n        />\n      ) : (\n        <LockedView\n          collection={collection}\n          filteredPhotos={filteredPhotos}\n          lightboxOpen={lightboxOpen}\n          setLightboxOpen={setLightboxOpen}\n          openLightbox={openLightbox}\n          openCommentModal={openCommentModal}\n          photoIndex={photoIndex}\n          setPhotoIndex={setPhotoIndex}\n          commentOpen={commentOpen}\n          setCommentOpen={setCommentOpen}\n          commentTextarea={commentTextarea}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CollectionPage;\n","import React, { useEffect, useState } from 'react';\nimport styles from './styles.module.scss';\nimport { Link } from 'react-router-dom';\nimport { Collection, CollectionDetailsProps } from '../../../types';\nimport { collectionStatus, updateSettings } from '../../../firebase';\nimport {\n  Checkbox,\n  Typography,\n  Tooltip,\n  Backdrop,\n  CircularProgress,\n  Button,\n  TextField,\n  FormControlLabel,\n  Paper,\n} from '@material-ui/core';\n\nimport { useForm, Controller } from 'react-hook-form';\n\nconst CollectionDetails: React.FC<CollectionDetailsProps> = ({\n  collectionId,\n  collection,\n  setCollection,\n  filteredPhotos,\n  setConfirmationDialogOpen,\n  setConfirmationDialogTitle,\n  setConfirmationDialogContentText,\n  setConfirmationDialogAgree,\n  setProgress,\n}) => {\n  const [copied, setCopied] = useState(false);\n\n  const {\n    register: registerSettings,\n    handleSubmit: handleSubmitSettings,\n    watch: watchSettings,\n    errors: errorsSettings,\n    getValues: getValuesSettings,\n    setValue: setValueSettings,\n    reset: resetSettings,\n    control: controlSettings,\n  } = useForm();\n\n  const minToggle = watchSettings('minSelectRequired');\n  const maxToggle = watchSettings('maxSelectRequired');\n\n  useEffect(() => {\n    if (collection) {\n      resetSettings({\n        title: collection.title,\n        allowComments: collection.allowComments,\n        maxSelectRequired: collection.maxSelect.required,\n        minSelectRequired: collection.minSelect.required,\n        minSelectGoal: collection.minSelect.goal,\n        maxSelectGoal: collection.maxSelect.goal,\n      });\n      setValueSettings('allowComments', true);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [collection, resetSettings]);\n\n  const copyUrl = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    const button = e.target as HTMLElement;\n    navigator.clipboard.writeText(button.innerHTML);\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n  };\n\n  const changeStatus = async (status: Collection['status']) => {\n    try {\n      await collectionStatus(collectionId, status);\n      if (collection) {\n        setCollection({ ...collection, status });\n      }\n    } catch (err) {\n      //\n    }\n    resetDialog();\n  };\n\n  const onSubmitSettings = async (data: any) => {\n    try {\n      await updateSettings(\n        {\n          title: data.title,\n          minSelect: {\n            required: data.minSelectRequired,\n            goal: data.minSelectGoal,\n          },\n          maxSelect: {\n            required: data.maxSelectRequired,\n            goal: data.maxSelectGoal,\n          },\n          allowComments: data.allowComments,\n        },\n        collectionId\n      );\n      if (collection) {\n        setCollection({\n          ...collection,\n          title: data.title,\n          minSelect: {\n            required: data.minSelectRequired,\n            goal: data.minSelectGoal,\n          },\n          maxSelect: {\n            required: data.maxSelectRequired,\n            goal: data.maxSelectGoal,\n          },\n          allowComments: data.allowComments,\n          status: 'selecting',\n        });\n      }\n    } catch (err) {\n      //\n    }\n  };\n\n  const copySelections = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (collection) {\n      const filenames = collection.photos\n        .filter((photo) => photo.selected)\n        .map((photo) => photo.filename);\n\n      navigator.clipboard.writeText(filenames.join(' '));\n    }\n    setCopied(true);\n    setTimeout(() => {\n      setCopied(false);\n    }, 2000);\n    resetDialog();\n  };\n\n  const confirmEdit = () => {\n    setConfirmationDialogOpen(true);\n    setConfirmationDialogTitle('This collection is already confirmed');\n    setConfirmationDialogContentText(\n      'Do you really want to edit an already confirmed collection?'\n    );\n    setConfirmationDialogAgree(() => () => changeStatus('editing'));\n  };\n\n  const confirmCopy = () => {\n    setConfirmationDialogOpen(true);\n    setConfirmationDialogTitle('This collection is not yet confirmed');\n    setConfirmationDialogContentText(\n      'Do you really want to copy selections from an unconfirmed collection?'\n    );\n    setConfirmationDialogAgree(() => copySelections);\n  };\n\n  const resetDialog = () => {\n    setConfirmationDialogOpen(false);\n    setConfirmationDialogTitle('');\n    setConfirmationDialogContentText('');\n    setConfirmationDialogAgree(() => {});\n    setProgress(0);\n  };\n\n  const selectedPhotos = collection?.photos.filter((photo) => photo.selected)\n    .length;\n\n  if (collection === null || filteredPhotos === null) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleSubmitSettings(onSubmitSettings)}>\n        {collection.status !== 'editing' ? (\n          <Button\n            variant='outlined'\n            onClick={\n              collection.status === 'confirmed'\n                ? confirmEdit\n                : () => changeStatus('editing')\n            }\n          >\n            Edit\n          </Button>\n        ) : (\n          <Button color='primary' variant='contained' type='submit'>\n            Save\n          </Button>\n        )}\n        {collection.status === 'editing' ? (\n          <div>\n            <TextField\n              label='Title'\n              name='title'\n              defaultValue={collection.title}\n              variant='outlined'\n              classes={{ root: styles.titleTextarea }}\n              margin='dense'\n              inputRef={registerSettings({ required: true, maxLength: 50 })}\n              error={!!errorsSettings.title}\n              helperText={errorsSettings.title ? 'Title is required' : ' '}\n            />\n          </div>\n        ) : (\n          <Typography variant='h4'>{collection.title}</Typography>\n        )}\n\n        <Typography>\n          Client URL:{' '}\n          <Tooltip title={copied ? 'copied!' : 'copy'}>\n            <Button onClick={copyUrl}>\n              {`${window.location.origin.toString()}/collection/${collectionId}`}{' '}\n            </Button>\n          </Tooltip>\n          <Button\n            to={`/collection/${collectionId}`}\n            component={Link}\n            variant='outlined'\n            size='small'\n          >\n            View\n          </Button>\n        </Typography>\n        <Typography>Status: {collection.status} </Typography>\n        {collection.status === 'confirmed' ? (\n          <Typography>Final comment: {collection.finalComment}</Typography>\n        ) : null}\n        <Typography variant='h6'>Settings:</Typography>\n        <div>\n          <FormControlLabel\n            control={\n              <Controller\n                control={controlSettings}\n                name='allowComments'\n                render={(\n                  { onChange, onBlur, value, name, ref },\n                  { invalid, isTouched, isDirty }\n                ) => (\n                  <Checkbox\n                    onBlur={onBlur}\n                    onChange={(e) => onChange(e.target.checked)}\n                    checked={value}\n                    inputRef={ref}\n                    disabled={collection.status !== 'editing'}\n                  />\n                )}\n              />\n            }\n            label='Allow comments'\n          />\n        </div>\n        <Typography variant='subtitle1'>selection goals:</Typography>\n        <div>\n          <FormControlLabel\n            control={\n              <Controller\n                control={controlSettings}\n                name='minSelectRequired'\n                render={(\n                  { onChange, onBlur, value, name, ref },\n                  { invalid, isTouched, isDirty }\n                ) => (\n                  <Checkbox\n                    onBlur={onBlur}\n                    onChange={(e) => onChange(e.target.checked)}\n                    checked={value}\n                    inputRef={ref}\n                    disabled={collection.status !== 'editing'}\n                  />\n                )}\n              />\n            }\n            label='minimum'\n          />\n          <div style={{ display: minToggle ? 'inline' : 'none' }}>\n            <TextField\n              name='minSelectGoal'\n              type='number'\n              variant='outlined'\n              size='small'\n              InputProps={{\n                inputProps: {\n                  max: 999,\n                  min: 1,\n                },\n              }}\n              inputRef={registerSettings({\n                min: '1',\n                max: '999',\n                valueAsNumber: true,\n                validate: {\n                  lowerThanMax: (value) =>\n                    !getValuesSettings('maxSelectRequired') ||\n                    getValuesSettings('maxSelectGoal') >= value,\n                },\n              })}\n              error={!!errorsSettings.minSelectGoal}\n              helperText={\n                errorsSettings.minSelectGoal &&\n                'Must be higher than maximum value'\n              }\n              disabled={collection.status !== 'editing'}\n            />\n          </div>\n        </div>\n        <div>\n          <FormControlLabel\n            control={\n              <Controller\n                control={controlSettings}\n                name='maxSelectRequired'\n                render={(\n                  { onChange, onBlur, value, name, ref },\n                  { invalid, isTouched, isDirty }\n                ) => (\n                  <Checkbox\n                    onBlur={onBlur}\n                    onChange={(e) => onChange(e.target.checked)}\n                    checked={value}\n                    inputRef={ref}\n                    disabled={collection.status !== 'editing'}\n                  />\n                )}\n              />\n            }\n            label='maximum'\n          />\n          <div style={{ display: maxToggle ? 'inline' : 'none' }}>\n            <TextField\n              name='maxSelectGoal'\n              type='number'\n              variant='outlined'\n              size='small'\n              InputProps={{\n                inputProps: {\n                  max: 999,\n                  min: 1,\n                },\n              }}\n              inputRef={registerSettings({\n                min: '1',\n                max: '999',\n                valueAsNumber: true,\n                validate: {\n                  higherThanMin: (value) =>\n                    !getValuesSettings('minSelectRequired') ||\n                    getValuesSettings('minSelectGoal') <= value,\n                },\n              })}\n              error={!!errorsSettings.maxSelectGoal}\n              helperText={\n                errorsSettings.maxSelectGoal &&\n                'Must be higher than minimum value'\n              }\n              disabled={collection.status !== 'editing'}\n            />\n          </div>\n        </div>\n      </form>\n      <Paper elevation={3} className={styles.centeredContainer}>\n        <Typography variant='h6'>Selected:</Typography>\n        <Typography variant='subtitle1'>\n          {selectedPhotos}/{collection.photos.length}\n        </Typography>\n        <Tooltip title={copied ? 'copied!' : 'copy'}>\n          <Button\n            onClick={\n              collection.status === 'confirmed' ? copySelections : confirmCopy\n            }\n            variant='outlined'\n          >\n            Copy selections\n          </Button>\n        </Tooltip>\n      </Paper>\n    </div>\n  );\n};\n\nexport default CollectionDetails;\n","import React, { useEffect, useState } from 'react';\nimport { Skeleton } from '@material-ui/lab';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Photo } from '../../types';\n\ninterface ImageLoaderProps {\n  photo: Photo;\n  children: React.ReactNode;\n  width: number;\n  height: number;\n}\n\nconst ImageLoader: React.FC<ImageLoaderProps> = ({\n  photo,\n  children,\n  width,\n  height,\n}) => {\n  const [imageReady, setImageReady] = useState(false);\n  const [failed, setFailed] = useState(false);\n\n  useEffect(() => {\n    fetch(photo.cloudUrlWebp, {}).then((res) => {\n      if (res.ok) {\n        setImageReady(true);\n      } else {\n        let trie = 1;\n        const intervalId = setInterval(() => {\n          fetch(photo.cloudUrlWebp, {}).then((res) => {\n            console.log('trie :>> ', trie);\n            console.log(res);\n            if (res.ok) {\n              clearInterval(intervalId);\n              setImageReady(true);\n            } else if (trie > 10) {\n              console.log('set failed');\n              setFailed(true);\n            }\n            trie += 1;\n          });\n        }, 500);\n      }\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (failed) {\n    return (\n      <div\n        style={{\n          width,\n          height,\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <CloseIcon />\n      </div>\n    );\n  }\n\n  if (!imageReady) {\n    return <Skeleton variant='rect' width={width} height={height} />;\n  }\n\n  return <div>{children}</div>;\n};\n\nexport default ImageLoader;\n","import React, { useEffect, useState } from 'react';\nimport styles from './styles.module.scss';\nimport { useParams, Link } from 'react-router-dom';\nimport { Collection, Photo } from '../../types';\nimport {\n  getSingleCollection,\n  deletePhotos,\n  addMorePhotos,\n  resetPhotos,\n} from '../../firebase';\nimport {\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  Checkbox,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Toolbar,\n  IconButton,\n  Typography,\n  Tooltip,\n  Backdrop,\n  CircularProgress,\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  LinearProgress,\n  Box,\n  Paper,\n} from '@material-ui/core';\n\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MessageIcon from '@material-ui/icons/Message';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport ConfirmationDialog from '../ConfirmationDialog/ConfirmationDialog';\nimport { DropzoneArea } from 'material-ui-dropzone';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport CollectionDetails from './CollectionDetails/CollectionDetails';\nimport ImageLoader from '../ImageLoader/ImageLoader';\nimport Lightbox from '../Lightbox/Lightbox';\n\nconst EditCollection: React.FC = () => {\n  const { id: collectionId } = useParams<{ id: string }>();\n\n  const [collection, setCollection] = useState<Collection | null>(null);\n  const [filteredPhotos, setFilteredPhotos] = useState<Photo[] | null>(null);\n  const [filter, setFilter] = useState('all');\n  const [photoIndex, setPhotoIndex] = useState(0);\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [selected, setSelected] = useState<string[]>([]);\n\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\n  const [confirmationDialogTitle, setConfirmationDialogTitle] = useState('');\n  const [\n    confirmationDialogContentText,\n    setConfirmationDialogContentText,\n  ] = useState('');\n  const [confirmationDialogAgree, setConfirmationDialogAgree] = useState<\n    (value: any) => void\n  >(() => {});\n  const [progress, setProgress] = useState(0);\n\n  const [addPhotosDialogOpen, setAddPhotosDialogOpen] = useState(false);\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [commentTextarea, setCommentTextarea] = useState('');\n\n  useEffect(() => {\n    if (lightboxOpen) {\n      document.body.style.overflow = 'hidden';\n    } else if (!lightboxOpen) {\n      document.body.style.overflow = 'unset';\n    }\n  }, [lightboxOpen]);\n\n  const {\n    handleSubmit: handleSubmitFiles,\n    //TODO add error if no files added to upload\n    errors: errorsFiles,\n    control: controlFiles,\n  } = useForm<any>({\n    defaultValues: { files: [] },\n  });\n\n  useEffect(() => {\n    getSingleCollection(collectionId).then((collection) => {\n      setCollection(collection);\n      setFilteredPhotos(collection.photos);\n    });\n  }, [collectionId]);\n\n  const changeFilter = (e: React.ChangeEvent<{ value: unknown }>) => {\n    setFilter(e.target.value as string);\n  };\n\n  useEffect(() => {\n    if (collection) {\n      switch (filter) {\n        case 'all':\n          return setFilteredPhotos(collection.photos);\n        case 'selected':\n          const selectedPhotos = collection.photos.filter(\n            (photo) => photo.selected\n          );\n          return setFilteredPhotos(selectedPhotos);\n        case 'unselected':\n          const unselectedPhotos = collection.photos.filter(\n            (photo) => !photo.selected\n          );\n          return setFilteredPhotos(unselectedPhotos);\n      }\n    }\n  }, [filter, collection]);\n\n  const openLightbox = (index: number) => (event: any) => {\n    setPhotoIndex(index);\n    setLightboxOpen(true);\n  };\n\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.checked && filteredPhotos) {\n      const newSelecteds = filteredPhotos.map((n) => n.id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\n    const selectedIndex = selected.indexOf(id);\n    let newSelected: string[] = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n    setSelected(newSelected);\n  };\n\n  const isSelected = (id: string) => selected.indexOf(id) !== -1;\n\n  const agreeDelete = async () => {\n    await deletePhotos(collectionId, selected, setProgress);\n    if (collection) {\n      const removeDeleted = collection.photos\n        .filter((photo) => {\n          for (let id of selected) {\n            if (photo.id === id) {\n              return false;\n            }\n          }\n          return true;\n        })\n        .map((photo, index) => {\n          return { ...photo, index: index + 1 };\n        });\n      setCollection({\n        ...collection,\n        photos: removeDeleted,\n      });\n    }\n    setSelected([]);\n    resetDialog();\n  };\n\n  const onConfirmUpload = async (data: { files: FileList }) => {\n    console.log(data);\n    await addMorePhotos(collectionId, data.files, setProgress);\n    setAddPhotosDialogOpen(false);\n    setProgress(0);\n    getSingleCollection(collectionId).then((collection) => {\n      setCollection(collection);\n    });\n  };\n\n  const openCommentModal = (index?: number) => {\n    setCommentOpen(true);\n    if (filteredPhotos) {\n      if (index) {\n        setPhotoIndex(index);\n        setCommentTextarea(filteredPhotos[index].comment);\n      } else {\n        setCommentTextarea(filteredPhotos[photoIndex].comment);\n      }\n    }\n  };\n\n  const agreeResetPhotos = async () => {\n    if (collection) {\n      try {\n        await resetPhotos(collectionId, collection.photos);\n        setCollection({\n          ...collection,\n          photos: collection.photos.map((photo) => ({\n            ...photo,\n            selected: false,\n            comment: '',\n          })),\n        });\n        resetDialog();\n      } catch (err) {\n        //\n      }\n    }\n  };\n\n  const confirmDeletion = () => {\n    setConfirmationDialogOpen(true);\n    setConfirmationDialogTitle('Do you really want to delete these photos?');\n    setConfirmationDialogContentText(\n      'WARNING: Delete action cannot be reverted!'\n    );\n    setConfirmationDialogAgree(() => agreeDelete);\n  };\n\n  const confirmResetPhotos = () => {\n    setConfirmationDialogOpen(true);\n    setConfirmationDialogTitle(\n      'Do you really want to reset all selections and comments?'\n    );\n    setConfirmationDialogContentText(\n      'WARNING: Reset action cannot be reverted!'\n    );\n    setConfirmationDialogAgree(() => agreeResetPhotos);\n  };\n\n  const resetDialog = () => {\n    setConfirmationDialogOpen(false);\n    setConfirmationDialogTitle('');\n    setConfirmationDialogContentText('');\n    setConfirmationDialogAgree(() => {});\n    setProgress(0);\n  };\n\n  if (collection === null || filteredPhotos === null) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  }\n\n  return (\n    <div>\n      <Button to='/' component={Link} variant='outlined'>\n        Home\n      </Button>\n      <CollectionDetails\n        collectionId={collectionId}\n        collection={collection}\n        setCollection={setCollection}\n        filteredPhotos={filteredPhotos}\n        setConfirmationDialogOpen={setConfirmationDialogOpen}\n        setConfirmationDialogTitle={setConfirmationDialogTitle}\n        setConfirmationDialogContentText={setConfirmationDialogContentText}\n        setConfirmationDialogAgree={setConfirmationDialogAgree}\n        setProgress={setProgress}\n      />\n      <Toolbar>\n        {selected.length > 0 ? (\n          <div className={styles.toolbarSelected}>\n            <Typography color='inherit' component='div'>\n              {selected.length} to be deleted\n            </Typography>\n            <Tooltip title='Delete'>\n              <IconButton aria-label='delete' onClick={confirmDeletion}>\n                <DeleteIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        ) : (\n          <div className={styles.toolbarSelected}>\n            {collection.status === 'editing' ? (\n              <div>\n                <Button\n                  onClick={() => {\n                    setAddPhotosDialogOpen(true);\n                  }}\n                  variant='outlined'\n                >\n                  Add photos\n                </Button>\n                <Button onClick={confirmResetPhotos} variant='outlined'>\n                  Reset selections and comments\n                </Button>\n              </div>\n            ) : null}\n          </div>\n        )}\n        <FormControl className={styles.toolbarFilter}>\n          <InputLabel>Filter</InputLabel>\n          <Select value={filter} onChange={changeFilter}>\n            <MenuItem value={'all'}>All</MenuItem>\n            <MenuItem value={'selected'}>Selected</MenuItem>\n            <MenuItem value={'unselected'}>Unselected</MenuItem>\n          </Select>\n        </FormControl>\n      </Toolbar>\n      <TableContainer>\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              {collection.status === 'editing' ? (\n                <TableCell padding='checkbox'>\n                  <Checkbox\n                    indeterminate={\n                      selected.length > 0 &&\n                      selected.length < filteredPhotos.length\n                    }\n                    checked={\n                      filteredPhotos.length > 0 &&\n                      selected.length === filteredPhotos.length\n                    }\n                    onChange={handleSelectAllClick}\n                  />\n                </TableCell>\n              ) : null}\n              <TableCell width='5%'>no.</TableCell>\n              <TableCell width='10%'>thumbnail</TableCell>\n              <TableCell width='30%'>filename</TableCell>\n              <TableCell padding='checkbox'></TableCell>\n              <TableCell>comment</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {filteredPhotos.map((photo, index) => (\n              <TableRow\n                key={photo.id}\n                selected={isSelected(photo.id)}\n                hover={true}\n              >\n                {collection.status === 'editing' ? (\n                  <TableCell\n                    padding='checkbox'\n                    onClick={(event) => handleClick(event, photo.id)}\n                  >\n                    <Checkbox checked={isSelected(photo.id)} />\n                  </TableCell>\n                ) : null}\n                <TableCell>{photo.index}.</TableCell>\n                <TableCell padding='none'>\n                  <ImageLoader photo={photo} width={150} height={100}>\n                    <picture>\n                      <source srcSet={photo.thumbnailWebp} type='image/webp' />\n                      <img\n                        src={photo.thumbnail}\n                        alt={collection.title}\n                        className={styles.thumbnail}\n                        onClick={openLightbox(index)}\n                      />\n                    </picture>\n                  </ImageLoader>\n                </TableCell>\n                <TableCell>{photo.filename}</TableCell>\n                <TableCell padding='checkbox'>\n                  {photo.selected ? <StarBorderIcon /> : null}\n                </TableCell>\n                <TableCell>{photo.comment}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {lightboxOpen && filteredPhotos.length > 0 && (\n        <Lightbox\n          filteredPhotos={filteredPhotos}\n          setLightboxOpen={setLightboxOpen}\n          lightboxIndex={photoIndex}\n          setLightboxIndex={setPhotoIndex}\n          toolbarButtons={[\n            filteredPhotos[photoIndex].comment.length > 0 ? (\n              <IconButton\n                className={styles.toolbarIcon}\n                onClick={() => openCommentModal()}\n              >\n                <MessageIcon />\n              </IconButton>\n            ) : (\n              <div className={styles.toolbarIcon}></div>\n            ),\n            filteredPhotos[photoIndex].selected ? (\n              <IconButton className={styles.toolbarIcon} disabled>\n                <StarBorderIcon />\n              </IconButton>\n            ) : (\n              <div className={styles.toolbarIcon}></div>\n            ),\n          ]}\n        />\n      )}\n      <ConfirmationDialog\n        dialogOpen={confirmationDialogOpen}\n        progress={progress}\n        onClickCancel={() => setConfirmationDialogOpen(false)}\n        onClickAgree={confirmationDialogAgree}\n        dialogTitle={confirmationDialogTitle}\n        dialogContentText={confirmationDialogContentText}\n      />\n      <Dialog open={addPhotosDialogOpen}>\n        <form onSubmit={handleSubmitFiles(onConfirmUpload)}>\n          <DialogTitle id='alert-dialog-title'>Add photos</DialogTitle>\n          <DialogContent>\n            {progress ? (\n              <Box p={'3px'}>\n                <LinearProgress variant='determinate' value={progress} />\n              </Box>\n            ) : (\n              <Box p={'5px'}></Box>\n            )}\n            <Controller\n              name='files'\n              control={controlFiles}\n              render={({ onChange }) => (\n                <DropzoneArea\n                  acceptedFiles={['image/jpeg']}\n                  dropzoneText={'Drop images or click to upload here'}\n                  onChange={(files) => {\n                    return onChange([...files]);\n                  }}\n                  filesLimit={999}\n                  previewGridClasses={{\n                    container: styles.previewContainer,\n                    item: `${styles.previewItem} itemReference`,\n                    image: styles.previewImage,\n                  }}\n                  previewGridProps={{\n                    container: {\n                      spacing: 1,\n                    },\n                    item: { sm: 2, lg: 2, md: 2 },\n                  }}\n                  showAlerts={false}\n                  showPreviewsInDropzone={false}\n                  showPreviews={true}\n                  showFileNamesInPreview={true}\n                  dropzoneClass={styles.dropzone}\n                />\n              )}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button\n              disabled={!!progress}\n              onClick={() => setAddPhotosDialogOpen(false)}\n              color='secondary'\n            >\n              Cancel\n            </Button>\n            <Button disabled={!!progress} color='primary' type='submit'>\n              Yes\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n      <Dialog open={commentOpen} onClose={() => setCommentOpen(false)}>\n        <IconButton\n          onClick={() => setCommentOpen(false)}\n          className={styles.exitBtn}\n        >\n          <CloseIcon />\n        </IconButton>\n        <DialogTitle id='alert-dialog-title'>Comment</DialogTitle>\n        <DialogContent>\n          <Paper className={styles.commentTextContainer} elevation={3}>\n            <Typography>{commentTextarea}</Typography>\n          </Paper>\n          <DialogActions></DialogActions>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default EditCollection;\n","import React, { useState, useEffect } from 'react';\nimport styles from './styles.module.scss';\nimport 'react-image-lightbox/style.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport NewCollection from './components/NewCollectionPage/NewCollection';\nimport Settings from './components/Settings/Settings';\nimport SignIn from './components/SignIn/SignIn';\nimport CollectionPage from './components/CollectionPage/CollectionPage';\nimport EditCollection from './components/EditCollection/EditCollection';\nimport { auth } from './firebase';\nimport {\n  Container,\n  Typography,\n  Backdrop,\n  CircularProgress,\n  Button,\n} from '@material-ui/core';\n\nfunction App() {\n  const [user, setUser] = useState<null | string>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user.uid);\n      } else {\n        setUser(null);\n      }\n      setLoading(false);\n    });\n  }, []);\n\n  if (loading) {\n    return (\n      <Backdrop open={true}>\n        <CircularProgress color='inherit' />.\n      </Backdrop>\n    );\n  }\n\n  return (\n    <Container>\n      <Typography variant='h2'>photoproof</Typography>\n      {user && (\n        <div className={styles.logoutBtn}>\n          <Button onClick={() => auth.signOut()} variant='outlined'>\n            Logout\n          </Button>\n        </div>\n      )}\n      <Router basename={'/photoproof/'}>\n        <Switch>\n          <Route path='/collection/:id' render={() => <CollectionPage />} />\n          {!user ? <Route path='/' render={() => <SignIn />} /> : null}\n          <Route path='/settings' render={() => <Settings />} />\n          <Route path='/new' render={() => <NewCollection />} />\n          <Route path='/edit/:id' render={() => <EditCollection />} />\n          <Route path='/' render={() => <Dashboard />} />\n        </Switch>\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"styles_thumbnail__HuAYR\",\"thumbnailCell\":\"styles_thumbnailCell__39WOG\",\"toolbarSelected\":\"styles_toolbarSelected__zaouI\",\"toolbarFilter\":\"styles_toolbarFilter__6jQJx\",\"dropzone\":\"styles_dropzone__2eWfI\",\"toolbarIcon\":\"styles_toolbarIcon__2Fpfe\",\"exitBtn\":\"styles_exitBtn___ClFY\",\"commentTextContainer\":\"styles_commentTextContainer__DJpY9\",\"titleTextarea\":\"styles_titleTextarea__1TicK\",\"centeredContainer\":\"styles_centeredContainer__3Ecro\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoGrid\":\"styles_photoGrid__3YaHx\",\"photoThumbnailGrid\":\"styles_photoThumbnailGrid__16eVO\",\"imgBorder\":\"styles_imgBorder__3r9lS\",\"starBtn\":\"styles_starBtn__3c3O8\",\"starBtnSelected\":\"styles_starBtnSelected__3aRF6\",\"commentBtn\":\"styles_commentBtn__31sU8\",\"commentBtnFilled\":\"styles_commentBtnFilled__HHfWH\",\"toolbarIcon\":\"styles_toolbarIcon__3OnpN\",\"fixedBtn\":\"styles_fixedBtn__EOXbc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoGrid\":\"styles_photoGrid__1VPui\",\"photoThumbnailGrid\":\"styles_photoThumbnailGrid__3hTKt\",\"imgBorder\":\"styles_imgBorder__mXHoL\",\"starBtn\":\"styles_starBtn__1kZeR\",\"starBtnSelected\":\"styles_starBtnSelected__2Mxa_\",\"commentBtn\":\"styles_commentBtn__250mx\",\"commentBtnFilled\":\"styles_commentBtnFilled__2CXgB\",\"toolbarIcon\":\"styles_toolbarIcon__3uSyR\",\"fixedBtn\":\"styles_fixedBtn__2tdMg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"previewItem\":\"styles_previewItem__3IX2a\",\"previewImage\":\"styles_previewImage__2J3BL\"};"],"sourceRoot":""}