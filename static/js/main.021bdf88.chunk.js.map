{"version":3,"sources":["components/EditCollection/CollectionDetails/styles.module.scss","styles.module.scss","components/Dashboard/CollectionsList/styles.module.scss","components/NewCollection/styles.module.scss","components/CollectionPage/styles.module.scss","components/CommentDialog/styles.module.scss","components/EditCollection/PhotoTableToolbar/styles.module.scss","components/ErrorPage/styles.module.scss","components/ConfirmationDialog/styles.module.scss","components/Lightbox/styles.module.scss","components/CollectionPage/SelectionView/ConfirmationForbiddenDialog/styles.module.scss","components/CollectionPage/SelectionView/SelectionConfirmationDialog/styles.module.scss","components/FilterButtons/styles.module.scss","components/EditCollection/PhotoTable/styles.module.scss","utils/makeId.ts","firebase.ts","config.js","components/ConfirmationDialog/ConfirmationDialog.tsx","components/StatusIcon/StatusIcon.tsx","components/Dashboard/CollectionsList/CollectionsList.tsx","components/Dashboard/Dashboard.tsx","components/NewCollection/NewCollection.tsx","components/Settings/Settings.tsx","components/SignIn/SignIn.tsx","components/Lightbox/Lightbox.tsx","components/CommentDialog/CommentDialog.tsx","components/CollectionPage/PhotoGrid/PhotoGrid.tsx","components/CollectionPage/LockedView/LockedView.tsx","components/CollectionPage/SelectionView/ConfirmationForbiddenDialog/ConfirmationForbiddenDialog.tsx","components/CollectionPage/SelectionView/SelectionConfirmationDialog/SelectionConfirmationDialog.tsx","components/CollectionPage/SelectionView/SelectionView.tsx","components/FilterButtons/FilterButtons.tsx","components/CollectionPage/CollectionPage.tsx","components/EditCollection/CollectionDetails/CollectionDetails.tsx","components/EditCollection/PhotoTableToolbar/PhotoTableToolbar.tsx","components/ImageLoader/ImageLoader.tsx","components/EditCollection/PhotoTable/PhotoTable.tsx","components/EditCollection/AddPhotosDialog/AddPhotosDialog.tsx","components/EditCollection/EditCollection.tsx","components/ErrorPage/ErrorPage.tsx","App.tsx","theme.ts","providers/NotificationProvider.tsx","index.tsx","components/CollectionPage/PhotoGrid/styles.module.scss","components/CollectionPage/SelectionView/styles.module.scss","components/Settings/styles.module.scss","components/CollectionPage/LockedView/styles.module.scss","components/EditCollection/styles.module.scss","components/EditCollection/AddPhotosDialog/styles.module.scss"],"names":["module","exports","makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","err","alert","firestore","storage","generateNewCollection","data","files","setUploadProgress","a","Error","id","collectionRef","collection","doc","get","snapshot","exists","title","minSelect","maxSelect","allowComments","set","dateCreated","FieldValue","serverTimestamp","status","finalComment","photosRef","batch","uploadPhotos","photos","photo","commit","updateSettings","collectionId","update","changeSiteSettings","logoWidth","logoStorageRef","ref","listAll","list","items","forEach","filename","child","delete","put","uploadTask","getDownloadURL","logoUrl","settings","merge","getSiteSettings","addMorePhotos","photosArray","progressStep","progress","size","name","uuid","uuidv4","parse","storageRef","downloadUrl","urlWithoutEnding","match","filenameWithoutExt","jpegUrl","webpUrl","jpegThumbnailUrl","webpThumbnailUrl","push","filenameNumber","Number","cloudUrl","cloudUrlWebp","thumbnail","thumbnailWebp","selected","comment","dateTaken","ModifyDate","updatePhotoSelection","photoId","photoRef","updatePhotoComment","confirmCollection","url","selectedPhotos","mailRef","to","message","subject","text","html","deletePhotos","photoIds","setDeleteProgress","docRef","resetPhotos","deleteCollection","docs","deleteMailDoc","getCollections","collectionsArray","orderBy","collections","index","photoObj","collectionObj","getSingleCollection","changeCollectionStatus","ConfirmationDialog","dialogOpen","onClickCancel","onClickAgree","dialogTitle","dialogContentText","Dialog","open","DialogTitle","IconButton","onClick","className","styles","exitBtn","DialogContent","DialogContentText","LinearProgress","variant","value","DialogActions","Button","disabled","color","autoFocus","StatusIcon","Tooltip","CollectionList","useState","setCollections","deleteProgress","setDialogOpen","requestDeleteId","setRequestDeleteId","requestDeleteName","setRequestDeleteName","history","useHistory","enqueueSnackbar","useSnackbar","useEffect","then","catch","persist","handleDelete","filterRemovedCollection","filter","handleRowClick","Backdrop","CircularProgress","tableContainer","TableContainer","Table","TableHead","TableRow","TableCell","width","TableBody","map","hover","srcSet","type","src","alt","align","aria-label","collectionToDelete","find","requestToDelete","Dashboard","Typography","component","Link","NewCollection","useForm","register","handleSubmit","watch","errors","getValues","control","uploading","setUploading","uploadProgress","minToggle","maxToggle","onSubmit","required","minSelectRequired","goal","minSelectGoal","maxSelectRequired","maxSelectGoal","Box","data-testid","p","TextField","inputRef","maxLength","label","error","helperText","FormControlLabel","Checkbox","style","display","InputProps","inputProps","max","min","valueAsNumber","validate","lowerThanMax","higherThanMin","dropzoneError","defaultValue","rules","notEmpty","array","render","onChange","acceptedFiles","dropzoneText","filesLimit","previewGridClasses","item","previewGridProps","container","spacing","sm","lg","md","showAlerts","showPreviewsInDropzone","showPreviews","showFileNamesInPreview","dropzoneClass","dropzoneErrorBorder","Settings","setLogoUrl","setLogoWidth","defaultWidth","useRef","logoFile","current","fileInputBtn","customFileInput","e","target","URL","createObjectURL","Slider","slider","aria-labelledby","step","valueLabelDisplay","_event","changeWidth","SignIn","setError","signInWithEmailAndPasswordHandler","signInWithEmailAndPassword","email","password","code","mt","LightboxComponent","filteredPhotos","lightboxOpen","setLightboxOpen","lightboxIndex","setLightboxIndex","toolbarButtons","window","innerHeight","document","body","clientHeight","overflow","root","querySelector","mainSrc","isWebpSupported","nextSrc","prevSrc","onCloseRequest","HTMLElement","onMovePrevRequest","onMoveNextRequest","enableZoom","imageTitle","classes","photoIndex","onImageLoad","setTimeout","animationDisabled","CommentDialog","commentOpen","setCommentOpen","commentTextarea","setCommentTextarea","actionButtons","onClose","disabledTextarea","undefined","multiline","rows","preventDefault","PhotoGrid","setCollection","openLightbox","openCommentModal","breakpointCols","default","1600","1100","700","430","masonryGrid","columnClassName","masonryGridColumn","photoThumbnailGrid","imgBorder","commentBtnFilled","commentBtn","heartBtnSelected","heartBtn","event","clickedPhoto","LockedView","setPhotoIndex","Lightbox","toolbarIcon","ConfirmationForbiddenDialog","confirmForbidDialogOpen","setConfirmForbidDialogOpen","SelectionConfirmationDialog","confirmDialogOpen","setConfirmDialogOpen","defaultValues","confirmSelections","location","origin","toString","fullWidth","placeholder","SelectionView","reactPortal","addEventListener","keySelect","removeEventListener","selectPhotoLightbox","savePhotoComment","fixedBtn","FilterButtons","setFilteredPhotos","setFilter","modifyLightbox","photosCount","all","notSelected","unselectedPhotos","ButtonGroup","filterBtns","CollectionPage","useParams","horizontal","selectedDetails","CollectionDetails","setConfirmationDialogOpen","setConfirmationDialogTitle","setConfirmationDialogContentText","setConfirmationDialogAgree","setProgress","copied","setCopied","registerSettings","handleSubmitSettings","watchSettings","errorsSettings","getValuesSettings","controlSettings","changeStatus","resetDialog","onSubmitSettings","copySelections","filenames","navigator","clipboard","writeText","join","titleTextarea","margin","titleBar","button","innerHTML","onBlur","invalid","isTouched","isDirty","checked","Paper","elevation","centeredContainer","PhotoTableToolbar","setSelected","setAddPhotosDialogOpen","agreeDelete","removeDeleted","agreeResetPhotos","Toolbar","toolbarSelected","ImageLoader","children","height","imageReady","setImageReady","failed","setFailed","fetch","res","ok","trie","intervalId","setInterval","clearInterval","alignItems","justifyContent","Skeleton","PhotoTable","isSelected","indexOf","padding","indeterminate","newSelecteds","n","selectedIndex","newSelected","concat","slice","handleClick","AddPhotosDialog","addPhotosDialogOpen","onConfirmUpload","dropzone","EditCollection","confirmationDialogOpen","confirmationDialogTitle","confirmationDialogContentText","confirmationDialogAgree","ErrorPage","centeredConainer","App","user","setUser","loading","setLoading","onAuthStateChanged","uid","Container","maxWidth","ml","mr","logo","logoutBtn","signOut","basename","path","exact","theme","createMuiTheme","palette","common","black","white","background","paper","primary","light","main","dark","contrastText","secondary","hint","typography","fontFamily","overrides","MuiButton","contained","backgroundColor","outlined","borderColor","textPrimary","textSecondary","MuiTableCell","head","fontSize","MuiOutlinedInput","notchedOutline","borderWidth","MuiCheckbox","MuiTableRow","cursor","useStyles","makeStyles","success","warning","info","NotificationProvider","notistackRef","React","createRef","onClickDismiss","key","closeSnackbar","variantSuccess","variantError","variantWarning","variantInfo","maxSnack","hideIconVariant","anchorOrigin","vertical","action","TransitionComponent","Slide","ReactDOM","StrictMode","ThemeProvider","CssBaseline","getElementById"],"mappings":"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","file":"static/js/main.021bdf88.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleTextarea\":\"styles_titleTextarea___LQBb\",\"centeredContainer\":\"styles_centeredContainer__2oj87\",\"titleBar\":\"styles_titleBar__3Svkz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoutBtn\":\"styles_logoutBtn__1Q3Tj\",\"logo\":\"styles_logo__1_jvw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"styles_thumbnail__WqL39\",\"tableContainer\":\"styles_tableContainer__1YpyL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzoneError\":\"styles_dropzoneError__NRvNd\",\"dropzoneErrorBorder\":\"styles_dropzoneErrorBorder__bLA7R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontal\":\"styles_horizontal__2_SKe\",\"selectedDetails\":\"styles_selectedDetails__LstAH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exitBtn\":\"styles_exitBtn__3Yr2u\",\"disabledTextarea\":\"styles_disabledTextarea__32-XD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbarSelected\":\"styles_toolbarSelected__12xMq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2RPhL\",\"centeredConainer\":\"styles_centeredConainer__1Atll\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exitBtn\":\"styles_exitBtn__3IoQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photoIndex\":\"styles_photoIndex__2CgGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exitBtn\":\"styles_exitBtn__3h-ak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"exitBtn\":\"styles_exitBtn__1xUw-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBtns\":\"styles_filterBtns__32b7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"thumbnail\":\"styles_thumbnail__1D0k_\"};","export const makeId = (length: number) => {\r\n  var result = '';\r\n  var characters =\r\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n  var charactersLength = characters.length;\r\n  for (var i = 0; i < length; i++) {\r\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n  }\r\n  return result;\r\n};\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { parse } from 'exifr';\r\n\r\nimport { makeId } from './utils/makeId';\r\nimport { Collection, Photo } from './types';\r\nimport { firebaseConfig } from './config';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\ntry {\r\n  firebase.auth();\r\n} catch (err) {\r\n  alert('Firebase config file is invalid or missing.');\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n\r\nexport const generateNewCollection = async (\r\n  data: Omit<\r\n    Collection,\r\n    'status' | 'finalComment' | 'photos' | 'id' | 'dateCreated'\r\n  >,\r\n  files: FileList,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n): Promise<string> => {\r\n  if (!data || !files) {\r\n    throw new Error('missing data or files');\r\n  }\r\n  setUploadProgress(1);\r\n\r\n  let collectionRef, id, snapshot;\r\n\r\n  do {\r\n    id = makeId(8);\r\n    collectionRef = firestore.collection('collections').doc(id);\r\n    snapshot = await collectionRef.get();\r\n  } while (snapshot.exists);\r\n  setUploadProgress(5);\r\n  const { title, minSelect, maxSelect, allowComments } = data;\r\n  await collectionRef.set({\r\n    title,\r\n    dateCreated: firebase.firestore.FieldValue.serverTimestamp(),\r\n    minSelect,\r\n    maxSelect,\r\n    allowComments,\r\n    status: 'selecting',\r\n    finalComment: '',\r\n  });\r\n  setUploadProgress(10);\r\n\r\n  const photosRef = collectionRef.collection('photos');\r\n  const batch = firestore.batch();\r\n\r\n  const photos = await uploadPhotos(id, files, setUploadProgress);\r\n\r\n  for (let i = 0; i < photos.length; i++) {\r\n    const photo = photos[i];\r\n    batch.set(photosRef.doc(photos[i].id), photo);\r\n  }\r\n  await batch.commit();\r\n\r\n  setUploadProgress(100);\r\n  return id;\r\n};\r\n\r\nexport const updateSettings = async (\r\n  data: Omit<\r\n    Collection,\r\n    'status' | 'finalComment' | 'photos' | 'id' | 'dateCreated'\r\n  >,\r\n  collectionId: Collection['id']\r\n) => {\r\n  const { title, minSelect, maxSelect, allowComments } = data;\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n  await collectionRef.update({\r\n    title,\r\n    minSelect,\r\n    maxSelect,\r\n    allowComments,\r\n    status: 'selecting',\r\n  });\r\n};\r\n\r\nexport const changeSiteSettings = async (\r\n  files: FileList,\r\n  logoWidth: number,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const logoStorageRef = storage.ref(`logo`);\r\n  let logoUrl: string | undefined;\r\n  if (files.length > 0) {\r\n    debugger;\r\n    let list;\r\n    try {\r\n      list = await logoStorageRef.listAll();\r\n    } catch {}\r\n    if (list && list.items.length > 0) {\r\n      const filenames = ['logo.png'];\r\n\r\n      filenames.forEach(async (filename) => {\r\n        try {\r\n          await logoStorageRef.child(filename).delete();\r\n        } catch {}\r\n      });\r\n    }\r\n    const uploadTask = await logoStorageRef.child('logo.png').put(files[0]);\r\n    logoUrl = await uploadTask.ref.getDownloadURL();\r\n  }\r\n  setUploadProgress(50);\r\n\r\n  const settings = firestore.collection('settings').doc('settings');\r\n  if (files.length > 0) {\r\n    await settings.set({ logoUrl, logoWidth }, { merge: true });\r\n  } else {\r\n    await settings.set({ logoWidth }, { merge: true });\r\n  }\r\n  setUploadProgress(100);\r\n};\r\n\r\nexport const getSiteSettings = async () => {\r\n  const settings = await firestore.collection('settings').doc('settings').get();\r\n  return settings.data();\r\n};\r\n\r\nexport const addMorePhotos = async (\r\n  id: string,\r\n  files: FileList,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(id)\r\n    .collection('photos');\r\n\r\n  const batch = firestore.batch();\r\n\r\n  const photos = await uploadPhotos(id, files, setUploadProgress);\r\n\r\n  for (let i = 0; i < photos.length; i++) {\r\n    const photo = photos[i];\r\n    batch.set(photosRef.doc(photos[i].id), photo);\r\n  }\r\n  await batch.commit();\r\n\r\n  setUploadProgress(100);\r\n\r\n  return;\r\n};\r\n\r\nconst uploadPhotos = async (\r\n  id: string,\r\n  files: FileList,\r\n  setUploadProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  const photosArray: Omit<Photo, 'index'>[] = [];\r\n  const progressStep = 85 / files.length;\r\n  let progress = 10;\r\n  for (let i = 0; i < files.length; i++) {\r\n    if (files[i].size > 5000000) {\r\n      throw new Error(`${files[i].name} filesize exceeds 5 MB`);\r\n    }\r\n\r\n    const uuid = uuidv4();\r\n    const data = await parse(files[i], ['ModifyDate']);\r\n\r\n    const storageRef = storage.ref(`${id}/${uuid}.jpg`);\r\n    const uploadTask = await storageRef.put(files[i]);\r\n    const downloadUrl = await uploadTask.ref.getDownloadURL();\r\n    const urlWithoutEnding = downloadUrl.match(/.+?(?=.jpg\\?alt=media)/i);\r\n    let filenameWithoutExt = files[i].name.match(/.+?(?=.jpg)/i);\r\n    if (!filenameWithoutExt) {\r\n      filenameWithoutExt = files[i].name.match(/.+?(?=.jpeg)/i);\r\n    }\r\n    const jpegUrl = `${urlWithoutEnding}_1400x1000.jpeg?alt=media`;\r\n    const webpUrl = `${urlWithoutEnding}_1400x1000.webp?alt=media`;\r\n    const jpegThumbnailUrl = `${urlWithoutEnding}_400x700.jpeg?alt=media`;\r\n    const webpThumbnailUrl = `${urlWithoutEnding}_400x700.webp?alt=media`;\r\n\r\n    photosArray.push({\r\n      id: uuid,\r\n      filename: `${filenameWithoutExt}`,\r\n      filenameNumber: Number(files[i].name.match(/\\d+/)),\r\n      cloudUrl: jpegUrl,\r\n      cloudUrlWebp: webpUrl,\r\n      thumbnail: jpegThumbnailUrl,\r\n      thumbnailWebp: webpThumbnailUrl,\r\n      selected: false,\r\n      comment: '',\r\n      dateTaken: data ? data.ModifyDate : null,\r\n    });\r\n\r\n    progress += progressStep;\r\n    setUploadProgress(progress);\r\n  }\r\n  return photosArray;\r\n};\r\n\r\nexport const updatePhotoSelection = async (\r\n  collectionId: Collection['id'],\r\n  photoId: Photo['id'],\r\n  selected: boolean\r\n) => {\r\n  const photoRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos')\r\n    .doc(photoId);\r\n\r\n  await photoRef.update({ selected });\r\n};\r\nexport const updatePhotoComment = async (\r\n  collectionId: Collection['id'],\r\n  photoId: Photo['id'],\r\n  comment: string\r\n) => {\r\n  const photoRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos')\r\n    .doc(photoId);\r\n\r\n  await photoRef.update({ comment });\r\n};\r\n\r\nexport const confirmCollection = async (\r\n  collectionId: Collection['id'],\r\n  title: Collection['title'],\r\n  url: string,\r\n  selectedPhotos: number | undefined,\r\n  finalComment: string\r\n) => {\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n\r\n  const mailRef = firestore.collection('mail').doc(collectionId);\r\n\r\n  await mailRef.set({\r\n    //TODO change to actual on production\r\n    to: 'arnas.savi@gmail.com',\r\n    message: {\r\n      subject: `${title} is confirmed`,\r\n      text: `Collection '${title}' is confirmed. URL: ${url}`,\r\n      html: `\r\n      <h1>${title} is confirmed</h1>\r\n      <p>Selected photos: ${selectedPhotos}</p>\r\n      <p>Final comment: ${finalComment}</p>\r\n      <p>You can see the selections here: <a href='${url}'>${url}</a></p>\r\n      `,\r\n    },\r\n  });\r\n\r\n  await collectionRef.update({\r\n    status: 'confirmed',\r\n    finalComment: finalComment || '',\r\n  });\r\n};\r\n\r\nexport const deletePhotos = async (\r\n  collectionId: Collection['id'],\r\n  photoIds: Photo['id'][],\r\n  setDeleteProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  setDeleteProgress(1);\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos');\r\n\r\n  const progressStep = 100 / photoIds.length;\r\n  let progress = 0;\r\n\r\n  for (let id of photoIds) {\r\n    const storageRef = storage.ref(collectionId);\r\n    const docRef = photosRef.doc(id);\r\n    await storageRef.child(`${id}_1400x1000.jpeg`).delete();\r\n    await storageRef.child(`${id}_1400x1000.webp`).delete();\r\n    await storageRef.child(`${id}_400x700.jpeg`).delete();\r\n    await storageRef.child(`${id}_400x700.webp`).delete();\r\n    await docRef.delete();\r\n    progress += progressStep;\r\n    setDeleteProgress(progress);\r\n  }\r\n\r\n  return;\r\n};\r\n\r\nexport const resetPhotos = async (\r\n  collectionId: Collection['id'],\r\n  photos: Photo[]\r\n) => {\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos');\r\n  const batch = firestore.batch();\r\n\r\n  for (const photo of photos) {\r\n    batch.update(photosRef.doc(photo.id), { selected: false, comment: '' });\r\n  }\r\n\r\n  await batch.commit();\r\n};\r\n\r\nexport const deleteCollection = async (\r\n  collectionId: Collection['id'],\r\n  setDeleteProgress: React.Dispatch<React.SetStateAction<number>>\r\n) => {\r\n  setDeleteProgress(1);\r\n  const photosRef = firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos');\r\n\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n\r\n  const photos = await photosRef.get();\r\n\r\n  const progressStep = 100 / photos.size;\r\n  let progress = 0;\r\n  for (let photo of photos.docs) {\r\n    const storageRef = storage.ref(collectionId);\r\n    const docRef = photosRef.doc(photo.data().id);\r\n    await storageRef.child(`${photo.data().id}_1400x1000.jpeg`).delete();\r\n    await storageRef.child(`${photo.data().id}_1400x1000.webp`).delete();\r\n    await storageRef.child(`${photo.data().id}_400x700.jpeg`).delete();\r\n    await storageRef.child(`${photo.data().id}_400x700.webp`).delete();\r\n    await docRef.delete();\r\n    progress += progressStep;\r\n    setDeleteProgress(progress);\r\n  }\r\n  await collectionRef.delete();\r\n\r\n  deleteMailDoc(collectionId);\r\n\r\n  return;\r\n};\r\n\r\nexport const getCollections = async () => {\r\n  const collectionsArray: Collection[] = [];\r\n  const collections = await firestore\r\n    .collection('collections')\r\n    .orderBy('dateCreated', 'desc')\r\n    .get();\r\n  for (const collection of collections.docs) {\r\n    const photos = await firestore\r\n      .collection('collections')\r\n      .doc(collection.id)\r\n      .collection('photos')\r\n      .orderBy('dateTaken')\r\n      .get();\r\n    const photosArray: Photo[] = [];\r\n    let index = 1;\r\n    photos.forEach((photo) => {\r\n      const photoObj = {\r\n        index,\r\n        id: photo.data().id,\r\n        cloudUrl: photo.data().cloudUrl,\r\n        cloudUrlWebp: photo.data().cloudUrlWebp,\r\n        thumbnail: photo.data().thumbnail,\r\n        thumbnailWebp: photo.data().thumbnailWebp,\r\n        filename: photo.data().filename,\r\n        filenameNumber: photo.data().filenameNumber,\r\n        selected: photo.data().selected,\r\n        comment: photo.data().comment,\r\n        dateTaken: photo.data().dateTaken,\r\n      };\r\n      photosArray.push(photoObj);\r\n      index++;\r\n    });\r\n    const collectionObj = {\r\n      id: collection.id,\r\n      title: collection.data().title,\r\n      dateCreated: collection.data().dateCreated,\r\n      minSelect: collection.data().minSelect,\r\n      maxSelect: collection.data().maxSelect,\r\n      allowComments: collection.data().allowComments,\r\n      status: collection.data().status,\r\n      finalComment: collection.data().finalComment,\r\n      photos: photosArray,\r\n    };\r\n    collectionsArray.push(collectionObj);\r\n  }\r\n  return collectionsArray;\r\n};\r\n\r\nexport const getSingleCollection = async (collectionId: Collection['id']) => {\r\n  const collection = await firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .get();\r\n  if (!collection.exists) {\r\n    throw new Error(\"collection doesn't exist\");\r\n  }\r\n  const photos = await firestore\r\n    .collection('collections')\r\n    .doc(collectionId)\r\n    .collection('photos')\r\n    .orderBy('dateTaken')\r\n    .get();\r\n  const photosArray: Photo[] = [];\r\n  let index = 1;\r\n  photos.forEach((photo) => {\r\n    const photoObj = {\r\n      index,\r\n      id: photo.data().id,\r\n      cloudUrl: photo.data().cloudUrl,\r\n      cloudUrlWebp: photo.data().cloudUrlWebp,\r\n      thumbnail: photo.data().thumbnail,\r\n      thumbnailWebp: photo.data().thumbnailWebp,\r\n      filename: photo.data().filename,\r\n      filenameNumber: photo.data().filenameNumber,\r\n      selected: photo.data().selected,\r\n      comment: photo.data().comment,\r\n      dateTaken: photo.data().dateTaken,\r\n    };\r\n    photosArray.push(photoObj);\r\n    index++;\r\n  });\r\n\r\n  const collectionObj = {\r\n    id: collection.id,\r\n    title: collection.data()?.title,\r\n    dateCreated: collection.data()?.dateCreated,\r\n    minSelect: collection.data()?.minSelect,\r\n    maxSelect: collection.data()?.maxSelect,\r\n    allowComments: collection.data()?.allowComments,\r\n    status: collection.data()?.status,\r\n    finalComment: collection.data()?.finalComment,\r\n    photos: photosArray,\r\n  };\r\n  return collectionObj;\r\n};\r\n\r\nexport const changeCollectionStatus = async (\r\n  collectionId: Collection['id'],\r\n  status: Collection['status']\r\n) => {\r\n  const collectionRef = firestore.collection('collections').doc(collectionId);\r\n\r\n  await collectionRef.update({ status });\r\n\r\n  if (status === 'editing') {\r\n    deleteMailDoc(collectionId);\r\n  }\r\n};\r\n\r\nconst deleteMailDoc = async (collectionId: Collection['id']) => {\r\n  const mailRef = firestore.collection('mail').doc(collectionId);\r\n\r\n  const snapshot = await mailRef.get();\r\n\r\n  if (snapshot.exists) {\r\n    mailRef.delete();\r\n  }\r\n};\r\n","export const firebaseConfig = {\n  apiKey: 'AIzaSyCgZeYaOGGvx9fdZDSnUs3KtFiab9SSTCc',\n  authDomain: 'photo-proof-showoff.firebaseapp.com',\n  projectId: 'photo-proof-showoff',\n  storageBucket: 'photo-proof-showoff.appspot.com',\n  messagingSenderId: '816746399237',\n  appId: '1:816746399237:web:ff05ae75e27a6a92983e6c',\n};\n","import React from 'react';\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  LinearProgress,\r\n  DialogActions,\r\n  Button,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport styles from './styles.module.scss';\r\nimport { ConfirmationDialogProps } from '../../types';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ConfirmationDialog: React.FC<ConfirmationDialogProps> = ({\r\n  dialogOpen,\r\n  progress,\r\n  onClickCancel,\r\n  onClickAgree,\r\n  dialogTitle,\r\n  dialogContentText,\r\n}) => {\r\n  return (\r\n    <Dialog open={dialogOpen}>\r\n      <DialogTitle id='alert-dialog-title'>{dialogTitle}</DialogTitle>\r\n      <IconButton onClick={onClickCancel} className={styles.exitBtn}>\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <DialogContent>\r\n        <DialogContentText id='alert-dialog-description'>\r\n          {dialogContentText}\r\n        </DialogContentText>\r\n        {progress ? (\r\n          <LinearProgress variant='determinate' value={progress} />\r\n        ) : null}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          disabled={!!progress}\r\n          onClick={onClickCancel}\r\n          color='primary'\r\n          autoFocus\r\n        >\r\n          Cancel\r\n        </Button>\r\n        <Button disabled={!!progress} onClick={onClickAgree} color='secondary'>\r\n          Yes\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationDialog;\r\n","import React from 'react';\r\nimport { Tooltip } from '@material-ui/core';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nimport { StatusIconProps } from '../../types';\r\n\r\nconst StatusIcon: React.FC<StatusIconProps> = ({ status }) => {\r\n  switch (status) {\r\n    case 'editing':\r\n      return (\r\n        <Tooltip title='Editing'>\r\n          <BlockIcon />\r\n        </Tooltip>\r\n      );\r\n    case 'selecting':\r\n      return (\r\n        <Tooltip title='Selecting'>\r\n          <TouchAppIcon />\r\n        </Tooltip>\r\n      );\r\n    case 'confirmed':\r\n      return (\r\n        <Tooltip title='Confirmed'>\r\n          <CheckIcon />\r\n        </Tooltip>\r\n      );\r\n    default:\r\n      return <div>N/A</div>;\r\n  }\r\n};\r\n\r\nexport default StatusIcon;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Collection, Photo } from '../../../types';\r\nimport { getCollections, deleteCollection } from '../../../firebase';\r\nimport styles from './styles.module.scss';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Backdrop,\r\n  CircularProgress,\r\n  IconButton,\r\n  Tooltip,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport ConfirmationDialog from '../../ConfirmationDialog/ConfirmationDialog';\r\nimport StatusIcon from '../../StatusIcon/StatusIcon';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst CollectionList: React.FC = () => {\r\n  const [collections, setCollections] = useState<Collection[] | null>(null);\r\n  const [deleteProgress, setDeleteProgress] = useState(0);\r\n  const [dialogOpen, setDialogOpen] = useState(false);\r\n  const [requestDeleteId, setRequestDeleteId] = useState('');\r\n  const [requestDeleteName, setRequestDeleteName] = useState('');\r\n  const history = useHistory();\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    getCollections()\r\n      .then((data) => setCollections(data))\r\n      .catch((err) => {\r\n        enqueueSnackbar(\r\n          'ERROR: Getting collections failed. Please refresh the page',\r\n          {\r\n            variant: 'error',\r\n            persist: true,\r\n          }\r\n        );\r\n      });\r\n  }, [enqueueSnackbar]);\r\n\r\n  const selectedPhotos = (photos: Photo[]) => {\r\n    return photos.filter((photo) => photo.selected).length;\r\n  };\r\n\r\n  const requestToDelete = (collectionId: string) => {\r\n    setDialogOpen(true);\r\n    setRequestDeleteId(collectionId);\r\n    if (collections) {\r\n      const collectionToDelete = collections.find(\r\n        (collection) => collection.id === collectionId\r\n      );\r\n      if (collectionToDelete) {\r\n        setRequestDeleteName(collectionToDelete.title);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await deleteCollection(requestDeleteId, setDeleteProgress);\r\n      setDialogOpen(false);\r\n      setDeleteProgress(0);\r\n      if (collections) {\r\n        const filterRemovedCollection = collections.filter(\r\n          (collection) => collection.id !== requestDeleteId\r\n        );\r\n        if (filterRemovedCollection) {\r\n          setCollections(filterRemovedCollection);\r\n        }\r\n      }\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Photo deletion failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleRowClick = (collectionId: string) => {\r\n    history.push(`edit/${collectionId}`);\r\n  };\r\n\r\n  if (collections === null) {\r\n    return (\r\n      <Backdrop open={true}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className={styles.tableContainer}>\r\n        <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell width='10%'>first image</TableCell>\r\n                <TableCell width='30%'>name</TableCell>\r\n                <TableCell width='20%'>status</TableCell>\r\n                <TableCell>selected photos</TableCell>\r\n                <TableCell></TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {collections.map((collection) => {\r\n                return (\r\n                  <TableRow key={collection.id} hover={true}>\r\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\r\n                      {collection.photos[0] ? (\r\n                        <picture>\r\n                          <source\r\n                            srcSet={collection.photos[0].thumbnailWebp}\r\n                            type='image/webp'\r\n                          />\r\n                          <img\r\n                            src={collection.photos[0].thumbnail}\r\n                            alt='first collection img'\r\n                            className={styles.thumbnail}\r\n                          />\r\n                        </picture>\r\n                      ) : null}\r\n                    </TableCell>\r\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\r\n                      {collection.title}\r\n                    </TableCell>\r\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\r\n                      <StatusIcon status={collection.status} />\r\n                    </TableCell>\r\n                    <TableCell onClick={() => handleRowClick(collection.id)}>\r\n                      {selectedPhotos(collection.photos)}\r\n                      {' / '}\r\n                      {collection.photos.length}\r\n                    </TableCell>\r\n                    <TableCell align='right'>\r\n                      <Tooltip title='Delete'>\r\n                        <IconButton\r\n                          color='inherit'\r\n                          aria-label='delete'\r\n                          onClick={() => requestToDelete(collection.id)}\r\n                        >\r\n                          <DeleteIcon />\r\n                        </IconButton>\r\n                      </Tooltip>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <ConfirmationDialog\r\n          dialogOpen={dialogOpen}\r\n          progress={deleteProgress}\r\n          onClickCancel={() => setDialogOpen(false)}\r\n          onClickAgree={handleDelete}\r\n          dialogTitle={`Do you really want to delete collection '${requestDeleteName}'?`}\r\n          dialogContentText={'Delete action cannot be reverted!'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CollectionList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport CollectionList from './CollectionsList/CollectionsList';\r\nimport { Typography, Button, Box as div } from '@material-ui/core';\r\n\r\nconst Dashboard: React.FC = () => {\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>Collections</Typography>\r\n      <div className='horizontalButtons'>\r\n        <Button to='/settings' component={Link} variant='outlined'>\r\n          Settings\r\n        </Button>\r\n        <Button to='/new' component={Link} variant='outlined'>\r\n          Create New Collection\r\n        </Button>\r\n      </div>\r\n      <CollectionList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, Fragment } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { generateNewCollection } from '../../firebase';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport {\r\n  Checkbox,\r\n  Typography,\r\n  Button,\r\n  TextField,\r\n  FormControlLabel,\r\n  LinearProgress,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { NewCollectionInputs } from '../../types';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst NewCollection: React.FC = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    watch,\r\n    errors,\r\n    getValues,\r\n    control,\r\n  } = useForm<NewCollectionInputs>();\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const minToggle = watch('minSelectRequired');\r\n  const maxToggle = watch('maxSelectRequired');\r\n\r\n  const onSubmit = async (data: NewCollectionInputs) => {\r\n    try {\r\n      setUploading(true);\r\n      const collectionId = await generateNewCollection(\r\n        {\r\n          title: data.title,\r\n          minSelect: {\r\n            required: data.minSelectRequired,\r\n            goal: data.minSelectGoal,\r\n          },\r\n          maxSelect: {\r\n            required: data.maxSelectRequired,\r\n            goal: data.maxSelectGoal,\r\n          },\r\n          allowComments: data.allowComments,\r\n        },\r\n        data.files,\r\n        setUploadProgress\r\n      );\r\n      setUploading(false);\r\n      history.push(`/edit/${collectionId}`);\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Creating new collection failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>New collection</Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div>\r\n          <div className='horizontalButtons'>\r\n            <Button\r\n              to='/'\r\n              component={Link}\r\n              color='secondary'\r\n              variant='contained'\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button\r\n              aria-label='create'\r\n              id='create'\r\n              color='primary'\r\n              variant='contained'\r\n              type='submit'\r\n            >\r\n              Create\r\n            </Button>\r\n          </div>\r\n          {uploading ? (\r\n            <Box data-testid='uploading' p={'8px'}>\r\n              <LinearProgress variant='determinate' value={uploadProgress} />\r\n            </Box>\r\n          ) : (\r\n            <Box p={'10px'}></Box>\r\n          )}\r\n        </div>\r\n        <TextField\r\n          id='title'\r\n          name='title'\r\n          inputRef={register({ required: true, maxLength: 50 })}\r\n          variant='outlined'\r\n          label='Title'\r\n          error={!!errors.title}\r\n          helperText={errors.title ? 'Title is required' : ' '}\r\n        />\r\n        {/* TODO add watermark feature */}\r\n        {/* <div>\r\n          <FormControlLabel control={<Checkbox />} label='Apply watermark' />\r\n        </div> */}\r\n        <div>\r\n          <FormControlLabel\r\n            control={<Checkbox name='allowComments' inputRef={register} />}\r\n            label='Allow comments'\r\n          />\r\n        </div>\r\n        <Typography variant='body1'>selection goals:</Typography>\r\n        <div>\r\n          <FormControlLabel\r\n            control={<Checkbox name='minSelectRequired' inputRef={register} />}\r\n            label='minimum'\r\n          />\r\n          <div style={{ display: minToggle ? 'inline' : 'none' }}>\r\n            <TextField\r\n              data-testid='minSelectGoal'\r\n              name='minSelectGoal'\r\n              type='number'\r\n              variant='outlined'\r\n              size='small'\r\n              InputProps={{\r\n                inputProps: {\r\n                  max: 999,\r\n                  min: 1,\r\n                },\r\n              }}\r\n              inputRef={register({\r\n                min: '1',\r\n                max: '999',\r\n                valueAsNumber: true,\r\n                validate: {\r\n                  lowerThanMax: (value) =>\r\n                    !getValues('maxSelectRequired') ||\r\n                    !getValues('minSelectRequired') ||\r\n                    getValues('maxSelectGoal') >= value,\r\n                },\r\n              })}\r\n              error={!!errors.minSelectGoal}\r\n              helperText={\r\n                errors.minSelectGoal && 'Must be higher than maximum value'\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <FormControlLabel\r\n            control={<Checkbox name='maxSelectRequired' inputRef={register} />}\r\n            label='maximum'\r\n          />\r\n          <div style={{ display: maxToggle ? 'inline' : 'none' }}>\r\n            <TextField\r\n              data-testid='maxSelectGoal'\r\n              name='maxSelectGoal'\r\n              type='number'\r\n              variant='outlined'\r\n              size='small'\r\n              InputProps={{\r\n                inputProps: {\r\n                  max: 999,\r\n                  min: 1,\r\n                },\r\n              }}\r\n              inputRef={register({\r\n                min: '1',\r\n                max: '999',\r\n                valueAsNumber: true,\r\n                validate: {\r\n                  higherThanMin: (value) =>\r\n                    !getValues('minSelectRequired') ||\r\n                    !getValues('maxSelectRequired') ||\r\n                    getValues('minSelectGoal') <= value,\r\n                },\r\n              })}\r\n              error={!!errors.maxSelectGoal}\r\n              helperText={\r\n                errors.maxSelectGoal && 'Must be higher than minimum value'\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.dropzoneError}>\r\n          <Typography variant='body1'>\r\n            {errors.files ? (\r\n              'Images are required'\r\n            ) : (\r\n              <Fragment>&#8203;</Fragment>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n        <Controller\r\n          name='files'\r\n          control={control}\r\n          defaultValue={[]}\r\n          rules={{\r\n            validate: {\r\n              notEmpty: (array) => {\r\n                return array.length > 0;\r\n              },\r\n            },\r\n          }}\r\n          render={({ onChange }) => (\r\n            <DropzoneArea\r\n              acceptedFiles={['image/jpeg']}\r\n              dropzoneText={'Drop images or click to upload here'}\r\n              onChange={(files) => {\r\n                return onChange([...files]);\r\n              }}\r\n              filesLimit={999}\r\n              previewGridClasses={{\r\n                item: 'itemReference',\r\n              }}\r\n              previewGridProps={{\r\n                container: {\r\n                  spacing: 1,\r\n                },\r\n                item: { sm: 2, lg: 1, md: 1 },\r\n              }}\r\n              showAlerts={false}\r\n              showPreviewsInDropzone={false}\r\n              showPreviews={true}\r\n              showFileNamesInPreview={true}\r\n              dropzoneClass={`dropzoneClass ${\r\n                errors.files && styles.dropzoneErrorBorder\r\n              }`}\r\n            />\r\n          )}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCollection;\r\n","import React, { useState, useRef, Fragment } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport {\r\n  Button,\r\n  Typography,\r\n  Slider,\r\n  Box,\r\n  LinearProgress,\r\n} from '@material-ui/core';\r\nimport { changeSiteSettings } from '../../firebase';\r\nimport { SettingsProps } from '../../types';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\n//TODO implement interactive watermark size/angle adjustment\r\n\r\nconst Settings: React.FC<SettingsProps> = ({\r\n  logoWidth,\r\n  setLogoUrl,\r\n  setLogoWidth,\r\n}) => {\r\n  const { register, handleSubmit, control, errors } = useForm<{\r\n    logoFile: FileList;\r\n    logoWidth: number;\r\n  }>();\r\n\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n\r\n  const history = useHistory();\r\n\r\n  const defaultWidth = useRef(logoWidth);\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const onSubmit = async (data: { logoFile: FileList; logoWidth: number }) => {\r\n    try {\r\n      setUploading(true);\r\n      await changeSiteSettings(\r\n        data.logoFile,\r\n        data.logoWidth,\r\n        setUploadProgress\r\n      );\r\n      setUploading(false);\r\n      history.push('/');\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Saving settings failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const displayImg = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e && e.target && e.target.files) {\r\n      setLogoUrl(URL.createObjectURL(e.target.files[0]));\r\n    }\r\n  };\r\n\r\n  const changeWidth = (value: number) => {\r\n    setLogoWidth(value);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    history.push('/');\r\n    setLogoWidth(defaultWidth.current);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>Settings</Typography>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='horizonalButtons'>\r\n          <Button onClick={handleCancel} color='secondary' variant='contained'>\r\n            Cancel\r\n          </Button>{' '}\r\n          <Button\r\n            aria-label='save'\r\n            id='save'\r\n            variant='contained'\r\n            color='primary'\r\n            type='submit'\r\n            disabled={uploading}\r\n          >\r\n            Save\r\n          </Button>\r\n        </div>\r\n        <div className={styles.dropzoneError}>\r\n          <Typography variant='body1'>\r\n            {errors.logoFile ? (\r\n              'Images are required'\r\n            ) : (\r\n              <Fragment>&#8203;</Fragment>\r\n            )}\r\n          </Typography>\r\n        </div>\r\n        <Typography variant='h6'>Select new logo:</Typography>\r\n        <Button className={styles.fileInputBtn} variant='outlined'>\r\n          <input\r\n            name='logoFile'\r\n            ref={register}\r\n            type='file'\r\n            className={styles.customFileInput}\r\n            onChange={displayImg}\r\n          />\r\n          Upload\r\n        </Button>\r\n        <Typography variant='h6'>Select logo width:</Typography>\r\n        <Controller\r\n          name='logoWidth'\r\n          control={control}\r\n          defaultValue={defaultWidth.current}\r\n          render={({ onChange }) => (\r\n            <Box>\r\n              <Slider\r\n                className={styles.slider}\r\n                ref={register}\r\n                defaultValue={defaultWidth.current}\r\n                aria-labelledby='discrete-slider-small-steps'\r\n                step={1}\r\n                min={0}\r\n                max={500}\r\n                valueLabelDisplay='auto'\r\n                onChange={(_event, value) => {\r\n                  onChange(value as number);\r\n                  changeWidth(value as number);\r\n                }}\r\n                color='secondary'\r\n              />\r\n            </Box>\r\n          )}\r\n        />\r\n        <div>\r\n          {uploading ? (\r\n            <Box data-testid='uploading' p={'3px'}>\r\n              <LinearProgress variant='determinate' value={uploadProgress} />\r\n            </Box>\r\n          ) : (\r\n            <Box p={'5px'}></Box>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { Box, Button, TextField, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { auth } from '../../firebase';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst SignIn = () => {\r\n  const { register, handleSubmit, errors, setError } = useForm();\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const signInWithEmailAndPasswordHandler = async (data: any) => {\r\n    try {\r\n      await auth.signInWithEmailAndPassword(data.email, data.password);\r\n    } catch (err) {\r\n      if (err.code === 'auth/wrong-password') {\r\n        setError('email', {\r\n          message: ' ',\r\n        });\r\n        setError('password', {\r\n          message: 'Email or password is incorrect',\r\n        });\r\n      } else {\r\n        enqueueSnackbar('ERROR: Login failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>Sign In</Typography>\r\n      <Box mt={3}>\r\n        {\r\n          <form onSubmit={handleSubmit(signInWithEmailAndPasswordHandler)}>\r\n            <div>\r\n              <TextField\r\n                id='email'\r\n                variant='outlined'\r\n                name='email'\r\n                label='Email'\r\n                inputRef={register({ required: true })}\r\n                error={!!errors.email}\r\n                helperText={\r\n                  errors.email\r\n                    ? errors.email.message || 'Email is required'\r\n                    : ' '\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              <TextField\r\n                id='password'\r\n                type='password'\r\n                variant='outlined'\r\n                name='password'\r\n                label='Password'\r\n                inputRef={register({ required: true })}\r\n                error={!!errors.password}\r\n                helperText={\r\n                  errors.password\r\n                    ? errors.password.message || 'Password is required'\r\n                    : ' '\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button aria-label='signIn' type='submit' variant='outlined'>\r\n                Sign In\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        }\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\nexport default SignIn;\r\n","import React, { useEffect } from 'react';\r\nimport { LightboxProps } from '../../types';\r\nimport styles from './styles.module.scss';\r\n// @ts-ignore\r\nimport { isWebpSupported } from 'react-image-webp/dist/utils';\r\nimport Lightbox from 'react-image-lightbox';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst LightboxComponent: React.FC<LightboxProps> = ({\r\n  filteredPhotos,\r\n  lightboxOpen,\r\n  setLightboxOpen,\r\n  lightboxIndex,\r\n  setLightboxIndex,\r\n  toolbarButtons,\r\n}) => {\r\n  useEffect(() => {\r\n    if (window.innerHeight < document.body.clientHeight) {\r\n      if (lightboxOpen) {\r\n        document.body.style.overflow = 'hidden';\r\n      } else {\r\n        document.body.style.overflow = 'overlay';\r\n      }\r\n    }\r\n  }, [lightboxOpen]);\r\n\r\n  const root = document.querySelector('#root');\r\n\r\n  const blurRoot = () => {\r\n    setTimeout(() => {\r\n      if (root instanceof HTMLElement) {\r\n        root.style.filter = 'blur(10px)';\r\n      }\r\n    }, 100);\r\n  };\r\n\r\n  const unblurRoot = () => {\r\n    if (root instanceof HTMLElement) {\r\n      root.style.filter = '';\r\n    }\r\n  };\r\n\r\n  if (lightboxOpen) {\r\n    return (\r\n      <Lightbox\r\n        mainSrc={\r\n          isWebpSupported\r\n            ? filteredPhotos[lightboxIndex].cloudUrlWebp\r\n            : filteredPhotos[lightboxIndex].cloudUrl\r\n        }\r\n        nextSrc={\r\n          isWebpSupported\r\n            ? filteredPhotos[(lightboxIndex + 1) % filteredPhotos.length]\r\n                .cloudUrlWebp\r\n            : filteredPhotos[(lightboxIndex + 1) % filteredPhotos.length]\r\n                .cloudUrl\r\n        }\r\n        prevSrc={\r\n          isWebpSupported\r\n            ? filteredPhotos[\r\n                (lightboxIndex + filteredPhotos.length - 1) %\r\n                  filteredPhotos.length\r\n              ].cloudUrlWebp\r\n            : filteredPhotos[\r\n                (lightboxIndex + filteredPhotos.length - 1) %\r\n                  filteredPhotos.length\r\n              ].cloudUrl\r\n        }\r\n        onCloseRequest={() => {\r\n          unblurRoot();\r\n          setLightboxOpen(false);\r\n        }}\r\n        onMovePrevRequest={() =>\r\n          setLightboxIndex(\r\n            (lightboxIndex + filteredPhotos.length - 1) % filteredPhotos.length\r\n          )\r\n        }\r\n        onMoveNextRequest={() =>\r\n          setLightboxIndex((lightboxIndex + 1) % filteredPhotos.length)\r\n        }\r\n        toolbarButtons={toolbarButtons}\r\n        enableZoom={false}\r\n        imageTitle={\r\n          <Typography classes={{ root: styles.photoIndex }}>\r\n            {filteredPhotos[lightboxIndex].index}\r\n          </Typography>\r\n        }\r\n        onImageLoad={blurRoot}\r\n        animationDisabled={true}\r\n      />\r\n    );\r\n  }\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default LightboxComponent;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  DialogActions,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { CommentDialogProps } from '../../types';\r\n\r\nconst CommentDialog: React.FC<CommentDialogProps> = ({\r\n  commentOpen,\r\n  setCommentOpen,\r\n  commentTextarea,\r\n  setCommentTextarea,\r\n  actionButtons,\r\n  disabled,\r\n}) => {\r\n  const handleCommentTextarea = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    e.preventDefault();\r\n    if (setCommentTextarea) setCommentTextarea(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Dialog open={commentOpen} onClose={() => setCommentOpen(false)}>\r\n      <IconButton\r\n        onClick={() => setCommentOpen(false)}\r\n        className={styles.exitBtn}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <DialogTitle id='alert-dialog-title'>Comment</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          classes={disabled ? { root: styles.disabledTextarea } : undefined}\r\n          multiline\r\n          rows={4}\r\n          variant='outlined'\r\n          value={commentTextarea}\r\n          onChange={handleCommentTextarea}\r\n          disabled={disabled}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>{actionButtons}</DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CommentDialog;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { PhotoGridProps } from '../../../types';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport { updatePhotoSelection } from '../../../firebase';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nimport Masonry from 'react-masonry-css';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst PhotoGrid: React.FC<PhotoGridProps> = ({\r\n  collectionId,\r\n  collection,\r\n  setCollection,\r\n  filteredPhotos,\r\n  openLightbox,\r\n  openCommentModal,\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const selectPhoto = (photoId: string) => async (event: any) => {\r\n    try {\r\n      const clickedPhoto = collection?.photos.find(\r\n        (photo) => photo.id === photoId\r\n      );\r\n      if (clickedPhoto && collection && setCollection && collectionId) {\r\n        await updatePhotoSelection(\r\n          collectionId,\r\n          photoId,\r\n          !clickedPhoto.selected\r\n        );\r\n        clickedPhoto.selected = !clickedPhoto?.selected;\r\n        setCollection({\r\n          ...collection,\r\n          photos: collection.photos.map((photo) =>\r\n            photo.id === photoId ? clickedPhoto : photo\r\n          ),\r\n        });\r\n      }\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Photo selection failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const breakpointColumns = {\r\n    default: 5,\r\n    1600: 4,\r\n    1100: 3,\r\n    700: 2,\r\n    430: 1,\r\n  };\r\n\r\n  return (\r\n    <Masonry\r\n      breakpointCols={breakpointColumns}\r\n      className={styles.masonryGrid}\r\n      columnClassName={styles.masonryGridColumn}\r\n    >\r\n      {filteredPhotos.map((photo, index) => {\r\n        return (\r\n          <div className={styles.photoThumbnailGrid} key={photo.id}>\r\n            <div className={styles.imgBorder}>\r\n              <picture>\r\n                <source srcSet={photo.thumbnailWebp} type='image/webp' />\r\n                <img\r\n                  src={photo.thumbnail}\r\n                  alt={collection.title}\r\n                  onClick={() => openLightbox(Number(index))}\r\n                />\r\n              </picture>\r\n              <div className={styles.photoIndex}>{photo.index}</div>\r\n              {collection.status === 'selecting' ? (\r\n                <div>\r\n                  {collection.allowComments ? (\r\n                    <IconButton\r\n                      aria-label='comment'\r\n                      className={\r\n                        photo.comment.length > 0\r\n                          ? styles.commentBtnFilled\r\n                          : styles.commentBtn\r\n                      }\r\n                      onClick={() => openCommentModal(index)}\r\n                    >\r\n                      {photo.comment.length > 0 ? (\r\n                        <ChatBubbleIcon />\r\n                      ) : (\r\n                        <ChatBubbleOutlineIcon />\r\n                      )}\r\n                    </IconButton>\r\n                  ) : null}\r\n                  <IconButton\r\n                    aria-label='select'\r\n                    className={\r\n                      photo.selected ? styles.heartBtnSelected : styles.heartBtn\r\n                    }\r\n                    onClick={selectPhoto(photo.id)}\r\n                  >\r\n                    {photo.selected ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n                  </IconButton>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  {photo.comment.length > 0 && collection.allowComments ? (\r\n                    <IconButton\r\n                      aria-label='comment'\r\n                      className={styles.commentBtnFilled}\r\n                      onClick={() => openCommentModal(index)}\r\n                    >\r\n                      <ChatBubbleIcon />\r\n                    </IconButton>\r\n                  ) : null}\r\n                  {photo.selected ? (\r\n                    <IconButton\r\n                      aria-label='select'\r\n                      className={styles.heartBtnSelected}\r\n                      disabled\r\n                    >\r\n                      <FavoriteIcon />\r\n                    </IconButton>\r\n                  ) : null}\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </Masonry>\r\n  );\r\n};\r\n\r\nexport default PhotoGrid;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { LockedViewProps } from '../../../types';\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nimport Lightbox from '../../Lightbox/Lightbox';\r\nimport CommentDialog from '../../CommentDialog/CommentDialog';\r\nimport PhotoGrid from '../PhotoGrid/PhotoGrid';\r\n\r\nconst LockedView: React.FC<LockedViewProps> = ({\r\n  collection,\r\n  filteredPhotos,\r\n  lightboxOpen,\r\n  setLightboxOpen,\r\n  openLightbox,\r\n  openCommentModal,\r\n  photoIndex,\r\n  setPhotoIndex,\r\n  commentOpen,\r\n  setCommentOpen,\r\n  commentTextarea,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <PhotoGrid\r\n        collection={collection}\r\n        filteredPhotos={filteredPhotos}\r\n        openLightbox={openLightbox}\r\n        openCommentModal={openCommentModal}\r\n      />\r\n      {filteredPhotos.length > 0 && (\r\n        <Lightbox\r\n          filteredPhotos={filteredPhotos}\r\n          lightboxOpen={lightboxOpen}\r\n          setLightboxOpen={setLightboxOpen}\r\n          lightboxIndex={photoIndex}\r\n          setLightboxIndex={setPhotoIndex}\r\n          toolbarButtons={[\r\n            <IconButton aria-label='selectLighbox' disabled>\r\n              {filteredPhotos[photoIndex].selected ? (\r\n                <FavoriteIcon className={styles.toolbarIcon} />\r\n              ) : (\r\n                <FavoriteBorderIcon className={styles.toolbarIcon} />\r\n              )}\r\n            </IconButton>,\r\n            collection.allowComments ? (\r\n              <IconButton\r\n                aria-label='commentLightbox'\r\n                onClick={() => openCommentModal()}\r\n              >\r\n                {filteredPhotos[photoIndex].comment.length > 0 ? (\r\n                  <ChatBubbleIcon className={styles.toolbarIcon} />\r\n                ) : (\r\n                  <ChatBubbleOutlineIcon className={styles.toolbarIcon} />\r\n                )}\r\n              </IconButton>\r\n            ) : null,\r\n          ]}\r\n        />\r\n      )}\r\n      <CommentDialog\r\n        commentOpen={commentOpen}\r\n        setCommentOpen={setCommentOpen}\r\n        commentTextarea={commentTextarea}\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LockedView;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { ConfirmationForbiddenProps } from '../../../../types';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n  DialogContentText,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst ConfirmationForbiddenDialog: React.FC<ConfirmationForbiddenProps> = ({\r\n  collection,\r\n  selectedPhotos,\r\n  confirmForbidDialogOpen,\r\n  setConfirmForbidDialogOpen,\r\n}) => {\r\n  const requirementsText = () => {\r\n    if (collection.minSelect.required && collection.maxSelect.required) {\r\n      return (\r\n        <span>\r\n          you must select{' '}\r\n          <strong>\r\n            from {collection.minSelect.goal} to {collection.maxSelect.goal}\r\n          </strong>{' '}\r\n          photos.\r\n        </span>\r\n      );\r\n    } else if (\r\n      collection.minSelect.required &&\r\n      !collection.maxSelect.required\r\n    ) {\r\n      return (\r\n        <span>\r\n          you must select <strong>at least {collection.minSelect.goal}</strong>{' '}\r\n          photos.\r\n        </span>\r\n      );\r\n    } else if (\r\n      !collection.minSelect.required &&\r\n      collection.maxSelect.required\r\n    ) {\r\n      return (\r\n        <span>\r\n          you must select{' '}\r\n          <strong>a maximum of {collection.maxSelect.goal}</strong> photos.\r\n        </span>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={confirmForbidDialogOpen}\r\n      onClose={() => setConfirmForbidDialogOpen(false)}\r\n    >\r\n      <DialogTitle id='alert-dialog-title'>\r\n        Please adjust your selections!\r\n      </DialogTitle>\r\n      <IconButton\r\n        onClick={() => setConfirmForbidDialogOpen(false)}\r\n        className={styles.exitBtn}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <DialogContent>\r\n        <DialogContentText>\r\n          You have selected <strong>{selectedPhotos}</strong> photos, but{' '}\r\n          {requirementsText()}\r\n        </DialogContentText>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => setConfirmForbidDialogOpen(false)}\r\n          color='primary'\r\n          autoFocus\r\n        >\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmationForbiddenDialog;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { SelectionConfirmationDialogProps } from '../../../../types';\r\nimport { confirmCollection } from '../../../../firebase';\r\nimport {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogTitle,\r\n  TextField,\r\n  DialogActions,\r\n  Button,\r\n  DialogContentText,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { useForm } from 'react-hook-form';\r\n\r\nconst SelectionConfirmationDialog: React.FC<SelectionConfirmationDialogProps> = ({\r\n  collection,\r\n  setCollection,\r\n  collectionId,\r\n  selectedPhotos,\r\n  confirmDialogOpen,\r\n  setConfirmDialogOpen,\r\n}) => {\r\n  const { register, handleSubmit } = useForm<any>({\r\n    defaultValues: { files: [] },\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const confirmSelections = async (data: { finalComment: string }) => {\r\n    try {\r\n      await confirmCollection(\r\n        collectionId,\r\n        collection.title,\r\n        //TODO make subfolder Context or .env\r\n        `${window.location.origin.toString()}/photoproof/edit/${collectionId}`,\r\n        selectedPhotos,\r\n        data.finalComment\r\n      );\r\n      setConfirmDialogOpen(false);\r\n      setCollection({\r\n        ...collection,\r\n        status: 'confirmed',\r\n        finalComment: data.finalComment,\r\n      });\r\n      enqueueSnackbar('Collection confirmed successfully, thank you!', {\r\n        variant: 'default',\r\n      });\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Confirming collection failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={confirmDialogOpen}\r\n      onClose={() => setConfirmDialogOpen(false)}\r\n    >\r\n      <form onSubmit={handleSubmit(confirmSelections)}>\r\n        <DialogTitle id='alert-dialog-title'>Confirm selections</DialogTitle>\r\n        <IconButton\r\n          onClick={() => setConfirmDialogOpen(false)}\r\n          className={styles.exitBtn}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You have selected <strong>{selectedPhotos} photos</strong>.\r\n          </DialogContentText>\r\n          <DialogContentText>\r\n            Do you want to leave a final comment?\r\n          </DialogContentText>\r\n          <TextField\r\n            multiline\r\n            rows={3}\r\n            fullWidth\r\n            variant='outlined'\r\n            placeholder='Final comment'\r\n            name='finalComment'\r\n            inputRef={register}\r\n          />\r\n          <DialogContentText>\r\n            <strong>Warning:</strong> you will not be able to select more photos\r\n            after confirming!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            onClick={() => setConfirmDialogOpen(false)}\r\n            color='secondary'\r\n            autoFocus\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button type='submit' color='primary'>\r\n            Confirm\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SelectionConfirmationDialog;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { SelectionViewProps } from '../../../types';\r\nimport { updatePhotoSelection, updatePhotoComment } from '../../../firebase';\r\nimport { IconButton, Button } from '@material-ui/core';\r\n\r\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport ChatBubbleIcon from '@material-ui/icons/ChatBubble';\r\n\r\nimport Lightbox from '../../Lightbox/Lightbox';\r\nimport CommentDialog from '../../CommentDialog/CommentDialog';\r\nimport PhotoGrid from '../PhotoGrid/PhotoGrid';\r\nimport ConfirmationForbiddenDialog from './ConfirmationForbiddenDialog/ConfirmationForbiddenDialog';\r\nimport SelectionConfirmationDialog from './SelectionConfirmationDialog/SelectionConfirmationDialog';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst SelectionView: React.FC<SelectionViewProps> = ({\r\n  collection,\r\n  setCollection,\r\n  collectionId,\r\n  filteredPhotos,\r\n  lightboxOpen,\r\n  setLightboxOpen,\r\n  openLightbox,\r\n  openCommentModal,\r\n  photoIndex,\r\n  setPhotoIndex,\r\n  commentOpen,\r\n  setCommentOpen,\r\n  commentTextarea,\r\n  setCommentTextarea,\r\n  selectedPhotos,\r\n}) => {\r\n  const [confirmDialogOpen, setConfirmDialogOpen] = useState(false);\r\n  const [confirmForbidDialogOpen, setConfirmForbidDialogOpen] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    if (lightboxOpen) {\r\n      const reactPortal = document.querySelector('.ReactModalPortal');\r\n      if (reactPortal) {\r\n        reactPortal.addEventListener('keyup', keySelect);\r\n        return () => reactPortal.removeEventListener('keyup', keySelect);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [lightboxOpen, photoIndex]);\r\n\r\n  const selectPhotoLightbox = async () => {\r\n    if (filteredPhotos && collection) {\r\n      try {\r\n        const clickedPhoto = filteredPhotos[photoIndex];\r\n        if (clickedPhoto && collection) {\r\n          await updatePhotoSelection(\r\n            collectionId,\r\n            clickedPhoto.id,\r\n            !clickedPhoto.selected\r\n          );\r\n          clickedPhoto.selected = !clickedPhoto?.selected;\r\n          setCollection({\r\n            ...collection,\r\n            photos: collection.photos.map((photo) =>\r\n              photo.id === clickedPhoto.id ? clickedPhoto : photo\r\n            ),\r\n          });\r\n        }\r\n      } catch (err) {\r\n        enqueueSnackbar('ERROR: Photo selection failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const savePhotoComment = async () => {\r\n    setCommentOpen(false);\r\n    if (filteredPhotos && collection) {\r\n      try {\r\n        const clickedPhoto = filteredPhotos[photoIndex];\r\n        if (clickedPhoto && collection) {\r\n          await updatePhotoComment(\r\n            collectionId,\r\n            clickedPhoto.id,\r\n            commentTextarea\r\n          );\r\n          clickedPhoto.comment = commentTextarea;\r\n          setCollection({\r\n            ...collection,\r\n            photos: collection.photos.map((photo) =>\r\n              photo.id === clickedPhoto.id ? clickedPhoto : photo\r\n            ),\r\n          });\r\n        }\r\n      } catch (err) {\r\n        enqueueSnackbar('ERROR: Photo commenting failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const keySelect = (event: any) => {\r\n    if (!lightboxOpen) {\r\n      return;\r\n    }\r\n\r\n    if (event.code === 'ArrowUp' && !filteredPhotos[photoIndex].selected) {\r\n      selectPhotoLightbox();\r\n    } else if (\r\n      event.code === 'ArrowDown' &&\r\n      filteredPhotos[photoIndex].selected\r\n    ) {\r\n      selectPhotoLightbox();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <PhotoGrid\r\n        collectionId={collectionId}\r\n        collection={collection}\r\n        setCollection={setCollection}\r\n        filteredPhotos={filteredPhotos}\r\n        openLightbox={openLightbox}\r\n        openCommentModal={openCommentModal}\r\n      />\r\n      {filteredPhotos.length > 0 && (\r\n        <Lightbox\r\n          filteredPhotos={filteredPhotos}\r\n          lightboxOpen={lightboxOpen}\r\n          setLightboxOpen={setLightboxOpen}\r\n          lightboxIndex={photoIndex}\r\n          setLightboxIndex={setPhotoIndex}\r\n          toolbarButtons={[\r\n            <IconButton\r\n              aria-label='selectLighbox'\r\n              onClick={selectPhotoLightbox}\r\n            >\r\n              {filteredPhotos[photoIndex].selected ? (\r\n                <FavoriteIcon className={styles.toolbarIcon} />\r\n              ) : (\r\n                <FavoriteBorderIcon className={styles.toolbarIcon} />\r\n              )}\r\n            </IconButton>,\r\n            collection.allowComments ? (\r\n              <IconButton\r\n                aria-label='commentLightbox'\r\n                onClick={() => openCommentModal()}\r\n              >\r\n                {filteredPhotos[photoIndex].comment.length > 0 ? (\r\n                  <ChatBubbleIcon className={styles.toolbarIcon} />\r\n                ) : (\r\n                  <ChatBubbleOutlineIcon className={styles.toolbarIcon} />\r\n                )}\r\n              </IconButton>\r\n            ) : null,\r\n          ]}\r\n        />\r\n      )}\r\n\r\n      <CommentDialog\r\n        commentOpen={commentOpen}\r\n        setCommentOpen={setCommentOpen}\r\n        commentTextarea={commentTextarea}\r\n        setCommentTextarea={setCommentTextarea}\r\n        disabled={!collection.allowComments}\r\n        actionButtons={[\r\n          <Button\r\n            key={'cancel'}\r\n            onClick={() => setCommentOpen(false)}\r\n            color='secondary'\r\n            autoFocus\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          <Button key={'save'} onClick={savePhotoComment} color='primary'>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      />\r\n\r\n      <Button\r\n        variant='contained'\r\n        classes={{ root: styles.fixedBtn }}\r\n        onClick={() => {\r\n          if (selectedPhotos != null) {\r\n            if (\r\n              (collection.minSelect.required &&\r\n                selectedPhotos < collection.minSelect.goal) ||\r\n              (collection.maxSelect.required &&\r\n                selectedPhotos > collection.maxSelect.goal)\r\n            ) {\r\n              return setConfirmForbidDialogOpen(true);\r\n            }\r\n            return setConfirmDialogOpen(true);\r\n          }\r\n        }}\r\n      >\r\n        confirm {selectedPhotos} selections\r\n      </Button>\r\n\r\n      <ConfirmationForbiddenDialog\r\n        collection={collection}\r\n        selectedPhotos={selectedPhotos}\r\n        confirmForbidDialogOpen={confirmForbidDialogOpen}\r\n        setConfirmForbidDialogOpen={setConfirmForbidDialogOpen}\r\n      />\r\n\r\n      <SelectionConfirmationDialog\r\n        collection={collection}\r\n        setCollection={setCollection}\r\n        collectionId={collectionId}\r\n        selectedPhotos={selectedPhotos}\r\n        confirmDialogOpen={confirmDialogOpen}\r\n        setConfirmDialogOpen={setConfirmDialogOpen}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectionView;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { FilterButtonsProps, Photo } from '../../types';\r\nimport { Button, ButtonGroup } from '@material-ui/core';\r\n\r\nconst FilterButtons: React.FC<FilterButtonsProps> = ({\r\n  collection,\r\n  setFilteredPhotos,\r\n  setLightboxOpen,\r\n  photoIndex,\r\n  setPhotoIndex,\r\n}) => {\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  const modifyLightbox = (photos: Photo[]) => {\r\n    if (setLightboxOpen && photoIndex && setPhotoIndex) {\r\n      if (photos.length === 0) {\r\n        setLightboxOpen(false);\r\n      } else if (photos.length <= photoIndex) {\r\n        setPhotoIndex(photos.length - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const photosCount = (() => {\r\n    const all = collection.photos.length;\r\n    const selected = collection.photos.filter((photo) => photo.selected).length;\r\n    const notSelected = all - selected;\r\n    return { all, selected, notSelected };\r\n  })();\r\n\r\n  useEffect(() => {\r\n    if (collection) {\r\n      switch (filter) {\r\n        case 'all':\r\n          return setFilteredPhotos(collection.photos);\r\n        case 'selected':\r\n          const selectedPhotos = collection.photos.filter(\r\n            (photo) => photo.selected\r\n          );\r\n          modifyLightbox(selectedPhotos);\r\n          return setFilteredPhotos(selectedPhotos);\r\n        case 'unselected':\r\n          const unselectedPhotos = collection.photos.filter(\r\n            (photo) => !photo.selected\r\n          );\r\n          modifyLightbox(unselectedPhotos);\r\n          return setFilteredPhotos(unselectedPhotos);\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [filter, collection]);\r\n\r\n  return (\r\n    <ButtonGroup\r\n      className={styles.filterBtns}\r\n      aria-label='outlined primary button group'\r\n    >\r\n      <Button\r\n        variant={filter === 'selected' ? 'contained' : undefined}\r\n        onClick={() => setFilter('selected')}\r\n      >\r\n        Selected &nbsp;&nbsp;{photosCount.selected}\r\n      </Button>\r\n      <Button\r\n        variant={filter === 'all' ? 'contained' : undefined}\r\n        onClick={() => setFilter('all')}\r\n      >\r\n        All &nbsp;&nbsp;{photosCount.all}\r\n      </Button>\r\n      <Button\r\n        variant={filter === 'unselected' ? 'contained' : undefined}\r\n        onClick={() => setFilter('unselected')}\r\n      >\r\n        Not Selected &nbsp;&nbsp;{photosCount.notSelected}\r\n      </Button>\r\n    </ButtonGroup>\r\n  );\r\n};\r\n\r\nexport default FilterButtons;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { Collection, Photo } from '../../types';\r\nimport { getSingleCollection } from '../../firebase';\r\nimport { Backdrop, CircularProgress, Typography } from '@material-ui/core';\r\nimport LockIcon from '@material-ui/icons/Lock';\r\n\r\nimport LockedView from './LockedView/LockedView';\r\nimport SelectionView from './SelectionView/SelectionView';\r\nimport FilterButtons from '../FilterButtons/FilterButtons';\r\n\r\nconst CollectionPage: React.FC = () => {\r\n  const { id: collectionId } = useParams<{ id: string }>();\r\n  const [collection, setCollection] = useState<Collection | null>(null);\r\n  const [filteredPhotos, setFilteredPhotos] = useState<Photo[]>([]);\r\n  const [lightboxOpen, setLightboxOpen] = useState(false);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [commentTextarea, setCommentTextarea] = useState('');\r\n  const [commentOpen, setCommentOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    getSingleCollection(collectionId)\r\n      .then((collection) => {\r\n        setCollection(collection);\r\n        setFilteredPhotos(collection.photos);\r\n      })\r\n      .catch((err) => {\r\n        history.push('/error');\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [collectionId]);\r\n\r\n  const openCommentModal = (index?: number) => {\r\n    setCommentOpen(true);\r\n    if (filteredPhotos) {\r\n      if (index) {\r\n        setPhotoIndex(index);\r\n        setCommentTextarea(filteredPhotos[index].comment);\r\n      } else {\r\n        setCommentTextarea(filteredPhotos[photoIndex].comment);\r\n      }\r\n    }\r\n  };\r\n\r\n  const openLightbox = (index: number) => {\r\n    setPhotoIndex(index);\r\n    setLightboxOpen(true);\r\n  };\r\n\r\n  const selectedPhotos = collection?.photos.filter((photo) => photo.selected)\r\n    .length;\r\n\r\n  if (collection === null) {\r\n    return (\r\n      <Backdrop open={true}>\r\n        <CircularProgress color='inherit' />.\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant='h4'>\r\n        {collection.title} {collection.status !== 'selecting' && <LockIcon />}\r\n      </Typography>\r\n      <div>\r\n        <div className={styles.horizontal}>\r\n          <div className={styles.selectedDetails}>\r\n            {collection.minSelect.required && collection.maxSelect.required ? (\r\n              <Typography>\r\n                You must select from {collection.minSelect.goal} to{' '}\r\n                {collection.maxSelect.goal} photos\r\n              </Typography>\r\n            ) : collection.minSelect.required &&\r\n              !collection.maxSelect.required ? (\r\n              <Typography>\r\n                You must select at least {collection.minSelect.goal} photos\r\n              </Typography>\r\n            ) : !collection.minSelect.required &&\r\n              collection.maxSelect.required ? (\r\n              <Typography>\r\n                You must select a maximum of {collection.maxSelect.goal} photos\r\n              </Typography>\r\n            ) : null}\r\n          </div>\r\n          <FilterButtons\r\n            collection={collection}\r\n            setFilteredPhotos={setFilteredPhotos}\r\n            modifyLightbox\r\n            setLightboxOpen={setLightboxOpen}\r\n            photoIndex={photoIndex}\r\n            setPhotoIndex={setPhotoIndex}\r\n          />\r\n        </div>\r\n      </div>\r\n      {collection.photos.length === 0 ? (\r\n        <div>no photos in collection</div>\r\n      ) : filteredPhotos.length === 0 ? (\r\n        <div>no photos in this filter</div>\r\n      ) : null}\r\n      {collection.status === 'selecting' ? (\r\n        <SelectionView\r\n          collection={collection}\r\n          setCollection={setCollection}\r\n          collectionId={collectionId}\r\n          filteredPhotos={filteredPhotos}\r\n          lightboxOpen={lightboxOpen}\r\n          setLightboxOpen={setLightboxOpen}\r\n          openLightbox={openLightbox}\r\n          openCommentModal={openCommentModal}\r\n          photoIndex={photoIndex}\r\n          setPhotoIndex={setPhotoIndex}\r\n          commentOpen={commentOpen}\r\n          setCommentOpen={setCommentOpen}\r\n          commentTextarea={commentTextarea}\r\n          setCommentTextarea={setCommentTextarea}\r\n          selectedPhotos={selectedPhotos}\r\n        />\r\n      ) : (\r\n        <LockedView\r\n          collection={collection}\r\n          filteredPhotos={filteredPhotos}\r\n          lightboxOpen={lightboxOpen}\r\n          setLightboxOpen={setLightboxOpen}\r\n          openLightbox={openLightbox}\r\n          openCommentModal={openCommentModal}\r\n          photoIndex={photoIndex}\r\n          setPhotoIndex={setPhotoIndex}\r\n          commentOpen={commentOpen}\r\n          setCommentOpen={setCommentOpen}\r\n          commentTextarea={commentTextarea}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionPage;\r\n","import React, { useState } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { Collection, CollectionDetailsProps } from '../../../types';\r\nimport { changeCollectionStatus, updateSettings } from '../../../firebase';\r\nimport {\r\n  Checkbox,\r\n  Typography,\r\n  Tooltip,\r\n  Button,\r\n  TextField,\r\n  FormControlLabel,\r\n  Paper,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport StatusIcon from '../../StatusIcon/StatusIcon';\r\n\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst CollectionDetails: React.FC<CollectionDetailsProps> = ({\r\n  collectionId,\r\n  collection,\r\n  setCollection,\r\n  setConfirmationDialogOpen,\r\n  setConfirmationDialogTitle,\r\n  setConfirmationDialogContentText,\r\n  setConfirmationDialogAgree,\r\n  setProgress,\r\n}) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const {\r\n    register: registerSettings,\r\n    handleSubmit: handleSubmitSettings,\r\n    watch: watchSettings,\r\n    errors: errorsSettings,\r\n    getValues: getValuesSettings,\r\n    control: controlSettings,\r\n  } = useForm({\r\n    defaultValues: {\r\n      title: collection.title,\r\n      allowComments: collection.allowComments,\r\n      maxSelectRequired: collection.maxSelect.required,\r\n      minSelectRequired: collection.minSelect.required,\r\n      minSelectGoal: collection.minSelect.goal,\r\n      maxSelectGoal: collection.maxSelect.goal,\r\n    },\r\n  });\r\n\r\n  const minToggle = watchSettings('minSelectRequired');\r\n  const maxToggle = watchSettings('maxSelectRequired');\r\n\r\n  const copyUrl = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    const button = e.target as HTMLElement;\r\n    navigator.clipboard.writeText(button.innerHTML);\r\n    setCopied(true);\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const changeStatus = async (status: Collection['status']) => {\r\n    try {\r\n      await changeCollectionStatus(collectionId, status);\r\n      if (collection) {\r\n        setCollection({ ...collection, status });\r\n      }\r\n      resetDialog();\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Changing collection status failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSubmitSettings = async (data: any) => {\r\n    try {\r\n      await updateSettings(\r\n        {\r\n          title: data.title,\r\n          minSelect: {\r\n            required: data.minSelectRequired,\r\n            goal: data.minSelectGoal,\r\n          },\r\n          maxSelect: {\r\n            required: data.maxSelectRequired,\r\n            goal: data.maxSelectGoal,\r\n          },\r\n          allowComments: data.allowComments,\r\n        },\r\n        collectionId\r\n      );\r\n      if (collection) {\r\n        setCollection({\r\n          ...collection,\r\n          title: data.title,\r\n          minSelect: {\r\n            required: data.minSelectRequired,\r\n            goal: data.minSelectGoal,\r\n          },\r\n          maxSelect: {\r\n            required: data.maxSelectRequired,\r\n            goal: data.maxSelectGoal,\r\n          },\r\n          allowComments: data.allowComments,\r\n          status: 'selecting',\r\n        });\r\n      }\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Saving collection settings failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const copySelections = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    if (collection) {\r\n      const filenames = collection.photos\r\n        .filter((photo) => photo.selected)\r\n        .map((photo) => photo.filename);\r\n\r\n      navigator.clipboard.writeText(filenames.join(' '));\r\n    }\r\n    setCopied(true);\r\n    setTimeout(() => {\r\n      setCopied(false);\r\n    }, 2000);\r\n    resetDialog();\r\n  };\r\n\r\n  const confirmEdit = () => {\r\n    setConfirmationDialogOpen(true);\r\n    setConfirmationDialogTitle('This collection is already confirmed');\r\n    setConfirmationDialogContentText(\r\n      'Do you really want to edit an already confirmed collection?'\r\n    );\r\n    setConfirmationDialogAgree(() => () => changeStatus('editing'));\r\n  };\r\n\r\n  const confirmCopy = () => {\r\n    setConfirmationDialogOpen(true);\r\n    setConfirmationDialogTitle('This collection is not yet confirmed');\r\n    setConfirmationDialogContentText(\r\n      'Do you really want to copy selections from an unconfirmed collection?'\r\n    );\r\n    setConfirmationDialogAgree(() => copySelections);\r\n  };\r\n\r\n  const resetDialog = () => {\r\n    setConfirmationDialogOpen(false);\r\n    setConfirmationDialogTitle('');\r\n    setConfirmationDialogContentText('');\r\n    setConfirmationDialogAgree(() => {});\r\n    setProgress(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmitSettings(onSubmitSettings)}>\r\n        <div className='horizontalButtons'>\r\n          <Button to='/' component={Link} variant='outlined'>\r\n            Home\r\n          </Button>\r\n          {collection.status !== 'editing' ? (\r\n            <Button\r\n              color='secondary'\r\n              variant='contained'\r\n              onClick={\r\n                collection.status === 'confirmed'\r\n                  ? confirmEdit\r\n                  : () => changeStatus('editing')\r\n              }\r\n            >\r\n              Edit\r\n            </Button>\r\n          ) : (\r\n            <Button color='primary' variant='contained' type='submit'>\r\n              Save\r\n            </Button>\r\n          )}\r\n        </div>\r\n\r\n        {collection.status === 'editing' ? (\r\n          <div>\r\n            <TextField\r\n              label='Title'\r\n              id='title'\r\n              name='title'\r\n              defaultValue={collection.title}\r\n              variant='outlined'\r\n              classes={{ root: styles.titleTextarea }}\r\n              margin='dense'\r\n              inputRef={registerSettings({ required: true, maxLength: 50 })}\r\n              error={!!errorsSettings.title}\r\n              helperText={errorsSettings.title ? 'Title is required' : ' '}\r\n              fullWidth={true}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className={styles.titleBar}>\r\n            <StatusIcon status={collection.status} />\r\n            <Typography variant='h4'>{collection.title}</Typography>\r\n          </div>\r\n        )}\r\n\r\n        <Typography>\r\n          Client URL:{' '}\r\n          <Tooltip title={copied ? 'copied!' : 'copy'}>\r\n            <Button onClick={copyUrl}>\r\n              {/* //TODO make subfolder Context or .env */}\r\n              {`${window.location.origin.toString()}/photoproof/collection/${collectionId}`}\r\n            </Button>\r\n          </Tooltip>\r\n          <Button\r\n            to={`/collection/${collectionId}`}\r\n            component={Link}\r\n            variant='contained'\r\n            size='small'\r\n          >\r\n            Open\r\n          </Button>\r\n        </Typography>\r\n\r\n        <Box\r\n          className={\r\n            collection.status === 'editing' ? undefined : 'noPointerEvents'\r\n          }\r\n          mt={2}\r\n        >\r\n          <Typography variant='h6'>Settings:</Typography>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Controller\r\n                  control={controlSettings}\r\n                  name='allowComments'\r\n                  render={(\r\n                    { onChange, onBlur, value, name, ref },\r\n                    { invalid, isTouched, isDirty }\r\n                  ) => (\r\n                    <Checkbox\r\n                      onBlur={onBlur}\r\n                      onChange={(e) => onChange(e.target.checked)}\r\n                      checked={value}\r\n                      inputRef={ref}\r\n                      disabled={collection.status !== 'editing'}\r\n                      color='default'\r\n                    />\r\n                  )}\r\n                />\r\n              }\r\n              label='Allow comments'\r\n            />\r\n          </div>\r\n          <Typography variant='subtitle1'>selection goals:</Typography>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Controller\r\n                  control={controlSettings}\r\n                  name='minSelectRequired'\r\n                  render={(\r\n                    { onChange, onBlur, value, name, ref },\r\n                    { invalid, isTouched, isDirty }\r\n                  ) => (\r\n                    <Checkbox\r\n                      onBlur={onBlur}\r\n                      onChange={(e) => onChange(e.target.checked)}\r\n                      checked={value}\r\n                      inputRef={ref}\r\n                      disabled={collection.status !== 'editing'}\r\n                      color='default'\r\n                    />\r\n                  )}\r\n                />\r\n              }\r\n              label='Minimum'\r\n            />\r\n            <div style={{ display: minToggle ? 'inline' : 'none' }}>\r\n              <TextField\r\n                inputProps={{ 'data-testid': 'minSelectGoal' }}\r\n                data-testid='minSelectGoal'\r\n                name='minSelectGoal'\r\n                type='number'\r\n                variant='outlined'\r\n                size='small'\r\n                InputProps={{\r\n                  inputProps: {\r\n                    max: 999,\r\n                    min: 1,\r\n                  },\r\n                }}\r\n                inputRef={registerSettings({\r\n                  min: '1',\r\n                  max: '999',\r\n                  valueAsNumber: true,\r\n                  validate: {\r\n                    lowerThanMax: (value) =>\r\n                      !getValuesSettings('maxSelectRequired') ||\r\n                      !getValuesSettings('minSelectRequired') ||\r\n                      getValuesSettings('maxSelectGoal') >= value,\r\n                  },\r\n                })}\r\n                error={!!errorsSettings.minSelectGoal}\r\n                helperText={\r\n                  errorsSettings.minSelectGoal &&\r\n                  'Must be higher than maximum value'\r\n                }\r\n                disabled={collection.status !== 'editing'}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <FormControlLabel\r\n              control={\r\n                <Controller\r\n                  control={controlSettings}\r\n                  name='maxSelectRequired'\r\n                  render={(\r\n                    { onChange, onBlur, value, name, ref },\r\n                    { invalid, isTouched, isDirty }\r\n                  ) => (\r\n                    <Checkbox\r\n                      onBlur={onBlur}\r\n                      onChange={(e) => onChange(e.target.checked)}\r\n                      checked={value}\r\n                      inputRef={ref}\r\n                      disabled={collection.status !== 'editing'}\r\n                      color='default'\r\n                    />\r\n                  )}\r\n                />\r\n              }\r\n              label='Maximum'\r\n            />\r\n            <div style={{ display: maxToggle ? 'inline' : 'none' }}>\r\n              <TextField\r\n                data-testid='maxSelectGoal'\r\n                name='maxSelectGoal'\r\n                type='number'\r\n                variant='outlined'\r\n                size='small'\r\n                InputProps={{\r\n                  inputProps: {\r\n                    max: 999,\r\n                    min: 1,\r\n                  },\r\n                }}\r\n                inputRef={registerSettings({\r\n                  min: '1',\r\n                  max: '999',\r\n                  valueAsNumber: true,\r\n                  validate: {\r\n                    higherThanMin: (value) =>\r\n                      !getValuesSettings('minSelectRequired') ||\r\n                      !getValuesSettings('maxSelectRequired') ||\r\n                      getValuesSettings('minSelectGoal') <= value,\r\n                  },\r\n                })}\r\n                error={!!errorsSettings.maxSelectGoal}\r\n                helperText={\r\n                  errorsSettings.maxSelectGoal &&\r\n                  'Must be higher than minimum value'\r\n                }\r\n                disabled={collection.status !== 'editing'}\r\n              />\r\n            </div>\r\n          </div>\r\n        </Box>\r\n      </form>\r\n      <Paper elevation={3} className={styles.centeredContainer}>\r\n        {collection.status === 'confirmed' ? (\r\n          <Typography>Final comment: {collection.finalComment}</Typography>\r\n        ) : null}\r\n        <Tooltip title={copied ? 'copied!' : 'copy'}>\r\n          <Button\r\n            onClick={\r\n              collection.status === 'confirmed' ? copySelections : confirmCopy\r\n            }\r\n            variant='outlined'\r\n          >\r\n            Copy selections\r\n          </Button>\r\n        </Tooltip>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CollectionDetails;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { PhotoTableToolbarProps } from '../../../types';\r\nimport { deletePhotos, resetPhotos } from '../../../firebase';\r\nimport {\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Tooltip,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport FilterButtons from '../../FilterButtons/FilterButtons';\r\n\r\nconst PhotoTableToolbar: React.FC<PhotoTableToolbarProps> = ({\r\n  collectionId,\r\n  collection,\r\n  setCollection,\r\n  setFilteredPhotos,\r\n  setConfirmationDialogOpen,\r\n  setConfirmationDialogTitle,\r\n  setConfirmationDialogContentText,\r\n  setConfirmationDialogAgree,\r\n  setProgress,\r\n  selected,\r\n  setSelected,\r\n  setAddPhotosDialogOpen,\r\n}) => {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const agreeDelete = async () => {\r\n    try {\r\n      await deletePhotos(collectionId, selected, setProgress);\r\n      if (collection) {\r\n        const removeDeleted = collection.photos\r\n          .filter((photo) => {\r\n            for (let id of selected) {\r\n              if (photo.id === id) {\r\n                return false;\r\n              }\r\n            }\r\n            return true;\r\n          })\r\n          .map((photo, index) => {\r\n            return { ...photo, index: index + 1 };\r\n          });\r\n        setCollection({\r\n          ...collection,\r\n          photos: removeDeleted,\r\n        });\r\n      }\r\n      setSelected([]);\r\n      resetDialog();\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Deleting photos failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  const agreeResetPhotos = async () => {\r\n    if (collection) {\r\n      try {\r\n        await resetPhotos(collectionId, collection.photos);\r\n        setCollection({\r\n          ...collection,\r\n          photos: collection.photos.map((photo) => ({\r\n            ...photo,\r\n            selected: false,\r\n            comment: '',\r\n          })),\r\n        });\r\n        resetDialog();\r\n      } catch (err) {\r\n        enqueueSnackbar('ERROR: Resetting photos failed', {\r\n          variant: 'error',\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const confirmDeletion = () => {\r\n    setConfirmationDialogOpen(true);\r\n    setConfirmationDialogTitle('Do you really want to delete these photos?');\r\n    setConfirmationDialogContentText(\r\n      'WARNING: Delete action cannot be reverted!'\r\n    );\r\n    setConfirmationDialogAgree(() => agreeDelete);\r\n  };\r\n\r\n  const confirmResetPhotos = () => {\r\n    setConfirmationDialogOpen(true);\r\n    setConfirmationDialogTitle(\r\n      'Do you really want to reset all selections and comments?'\r\n    );\r\n    setConfirmationDialogContentText(\r\n      'WARNING: Reset action cannot be reverted!'\r\n    );\r\n    setConfirmationDialogAgree(() => agreeResetPhotos);\r\n  };\r\n\r\n  const resetDialog = () => {\r\n    setConfirmationDialogOpen(false);\r\n    setConfirmationDialogTitle('');\r\n    setConfirmationDialogContentText('');\r\n    setConfirmationDialogAgree(() => {});\r\n    setProgress(0);\r\n  };\r\n\r\n  return (\r\n    <Toolbar>\r\n      {selected.length > 0 ? (\r\n        <div className={styles.toolbarSelected}>\r\n          <Typography color='inherit' component='div'>\r\n            {selected.length} to be deleted\r\n          </Typography>\r\n          <Tooltip title='Delete'>\r\n            <IconButton aria-label='delete' onClick={confirmDeletion}>\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </div>\r\n      ) : (\r\n        <div className={styles.toolbarSelected}>\r\n          {collection.status === 'editing' ? (\r\n            <div className='horizontalButtons'>\r\n              <Button\r\n                onClick={() => {\r\n                  setAddPhotosDialogOpen(true);\r\n                }}\r\n                variant='outlined'\r\n              >\r\n                Add photos\r\n              </Button>\r\n              <Button onClick={confirmResetPhotos} variant='outlined'>\r\n                Reset selections and comments\r\n              </Button>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n      <FilterButtons\r\n        collection={collection}\r\n        setFilteredPhotos={setFilteredPhotos}\r\n      />\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nexport default PhotoTableToolbar;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Skeleton } from '@material-ui/lab';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Photo } from '../../types';\r\n\r\ninterface ImageLoaderProps {\r\n  photo: Photo;\r\n  children: React.ReactNode;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst ImageLoader: React.FC<ImageLoaderProps> = ({\r\n  photo,\r\n  children,\r\n  width,\r\n  height,\r\n}) => {\r\n  const [imageReady, setImageReady] = useState(false);\r\n  const [failed, setFailed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetch(photo.cloudUrlWebp, {}).then((res) => {\r\n      if (res.ok) {\r\n        setImageReady(true);\r\n      } else {\r\n        let trie = 1;\r\n        const intervalId = setInterval(() => {\r\n          fetch(photo.cloudUrlWebp, {}).then((res) => {\r\n            if (res.ok) {\r\n              clearInterval(intervalId);\r\n              setImageReady(true);\r\n            } else if (trie > 10) {\r\n              setFailed(true);\r\n            }\r\n            trie += 1;\r\n          });\r\n        }, 500);\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  if (failed) {\r\n    return (\r\n      <div\r\n        style={{\r\n          width,\r\n          height,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n        }}\r\n      >\r\n        <CloseIcon />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!imageReady) {\r\n    return <Skeleton variant='rect' width={width} height={height} />;\r\n  }\r\n\r\n  return <div>{children}</div>;\r\n};\r\n\r\nexport default ImageLoader;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { PhotoTableProps } from '../../../types';\r\nimport {\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from '@material-ui/core';\r\n\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nimport ImageLoader from '../../ImageLoader/ImageLoader';\r\n\r\nconst PhotoTable: React.FC<PhotoTableProps> = ({\r\n  collection,\r\n  filteredPhotos,\r\n  selected,\r\n  setSelected,\r\n  setPhotoIndex,\r\n  setLightboxOpen,\r\n}) => {\r\n  const openLightbox = (index: number) => (event: any) => {\r\n    setPhotoIndex(index);\r\n    setLightboxOpen(true);\r\n  };\r\n\r\n  const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.checked && filteredPhotos) {\r\n      const newSelecteds = filteredPhotos.map((n) => n.id);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<unknown>, id: string) => {\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected: string[] = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const isSelected = (id: string) => selected.indexOf(id) !== -1;\r\n\r\n  return (\r\n    <TableContainer>\r\n      <Table size='small'>\r\n        <TableHead>\r\n          <TableRow>\r\n            {collection.status === 'editing' ? (\r\n              <TableCell padding='checkbox' size='medium'>\r\n                <Checkbox\r\n                  indeterminate={\r\n                    selected.length > 0 &&\r\n                    selected.length < filteredPhotos.length\r\n                  }\r\n                  checked={\r\n                    filteredPhotos.length > 0 &&\r\n                    selected.length === filteredPhotos.length\r\n                  }\r\n                  onChange={handleSelectAllClick}\r\n                />\r\n              </TableCell>\r\n            ) : null}\r\n            <TableCell width='5%' size='medium'>\r\n              no.\r\n            </TableCell>\r\n            <TableCell width='10%'>thumbnail</TableCell>\r\n            <TableCell width='30%'>filename</TableCell>\r\n            <TableCell padding='checkbox'></TableCell>\r\n            <TableCell>comment</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredPhotos.map((photo, index) => (\r\n            <TableRow key={photo.id} selected={isSelected(photo.id)}>\r\n              {collection.status === 'editing' ? (\r\n                <TableCell\r\n                  data-testid='checkbox'\r\n                  padding='checkbox'\r\n                  onClick={(event) => handleClick(event, photo.id)}\r\n                >\r\n                  <Checkbox checked={isSelected(photo.id)} />\r\n                </TableCell>\r\n              ) : null}\r\n              <TableCell>{photo.index}.</TableCell>\r\n              <TableCell padding='none'>\r\n                <ImageLoader photo={photo} width={150} height={100}>\r\n                  <picture>\r\n                    <source srcSet={photo.thumbnailWebp} type='image/webp' />\r\n                    <img\r\n                      src={photo.thumbnail}\r\n                      alt={collection.title}\r\n                      className={styles.thumbnail}\r\n                      onClick={openLightbox(index)}\r\n                    />\r\n                  </picture>\r\n                </ImageLoader>\r\n              </TableCell>\r\n              <TableCell>{photo.filename}</TableCell>\r\n              <TableCell padding='checkbox'>\r\n                {photo.selected ? (\r\n                  <FavoriteBorder data-testid='selected' />\r\n                ) : null}\r\n              </TableCell>\r\n              <TableCell data-testid='comment'>{photo.comment}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default PhotoTable;\r\n","import React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { AddPhotosDialogProps } from '../../../types';\r\nimport { getSingleCollection, addMorePhotos } from '../../../firebase';\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  LinearProgress,\r\n  Box,\r\n  IconButton,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { DropzoneArea } from 'material-ui-dropzone';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Fragment } from 'react';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst AddPhotosDialog: React.FC<AddPhotosDialogProps> = ({\r\n  collectionId,\r\n  setCollection,\r\n  setProgress,\r\n  addPhotosDialogOpen,\r\n  setAddPhotosDialogOpen,\r\n  progress,\r\n}) => {\r\n  const { handleSubmit, errors, control } = useForm<any>({\r\n    defaultValues: { files: [] },\r\n  });\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  const onConfirmUpload = async (data: { files: FileList }) => {\r\n    try {\r\n      await addMorePhotos(collectionId, data.files, setProgress);\r\n      setAddPhotosDialogOpen(false);\r\n      setProgress(0);\r\n      const collection = await getSingleCollection(collectionId);\r\n      setCollection(collection);\r\n    } catch (err) {\r\n      enqueueSnackbar('ERROR: Photo upload failed', {\r\n        variant: 'error',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog open={addPhotosDialogOpen}>\r\n      <form onSubmit={handleSubmit(onConfirmUpload)}>\r\n        <DialogTitle id='alert-dialog-title'>Add photos</DialogTitle>\r\n        <IconButton\r\n          onClick={() => setAddPhotosDialogOpen(false)}\r\n          className={styles.exitBtn}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n        <DialogContent>\r\n          {progress ? (\r\n            <Box p={'3px'}>\r\n              <LinearProgress variant='determinate' value={progress} />\r\n            </Box>\r\n          ) : (\r\n            <Box p={'5px'}></Box>\r\n          )}\r\n          <div className={styles.dropzoneError}>\r\n            <Typography data-testid='error' variant='body1'>\r\n              {errors.files ? (\r\n                'Images are required'\r\n              ) : (\r\n                <Fragment>&#8203;</Fragment>\r\n              )}\r\n            </Typography>\r\n          </div>\r\n          <Controller\r\n            name='files'\r\n            control={control}\r\n            rules={{\r\n              validate: {\r\n                notEmpty: (array) => {\r\n                  return array.length > 0;\r\n                },\r\n              },\r\n            }}\r\n            render={({ onChange }) => (\r\n              <DropzoneArea\r\n                acceptedFiles={['image/jpeg']}\r\n                dropzoneText={'Drop images or click to upload here'}\r\n                onChange={(files) => {\r\n                  return onChange([...files]);\r\n                }}\r\n                filesLimit={999}\r\n                previewGridClasses={{\r\n                  item: 'itemReference',\r\n                }}\r\n                previewGridProps={{\r\n                  container: {\r\n                    spacing: 1,\r\n                  },\r\n                  item: { sm: 2, lg: 2, md: 2 },\r\n                }}\r\n                showAlerts={false}\r\n                showPreviewsInDropzone={false}\r\n                showPreviews={true}\r\n                showFileNamesInPreview={true}\r\n                dropzoneClass={`${styles.dropzone} ${\r\n                  errors.files && styles.dropzoneErrorBorder\r\n                }`}\r\n              />\r\n            )}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            disabled={!!progress}\r\n            onClick={() => setAddPhotosDialogOpen(false)}\r\n            color='secondary'\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <Button disabled={!!progress} color='primary' type='submit'>\r\n            Add\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddPhotosDialog;\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Collection, Photo } from '../../types';\r\nimport { getSingleCollection } from '../../firebase';\r\nimport { IconButton, Backdrop, CircularProgress } from '@material-ui/core';\r\n\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport MessageIcon from '@material-ui/icons/Message';\r\n\r\nimport ConfirmationDialog from '../ConfirmationDialog/ConfirmationDialog';\r\n\r\nimport CollectionDetails from './CollectionDetails/CollectionDetails';\r\nimport PhotoTableToolbar from './PhotoTableToolbar/PhotoTableToolbar';\r\nimport PhotoTable from './PhotoTable/PhotoTable';\r\nimport AddPhotosDialog from './AddPhotosDialog/AddPhotosDialog';\r\nimport Lightbox from '../Lightbox/Lightbox';\r\nimport CommentDialog from '../CommentDialog/CommentDialog';\r\n\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst EditCollection: React.FC = () => {\r\n  const { id: collectionId } = useParams<{ id: string }>();\r\n\r\n  const [collection, setCollection] = useState<Collection | null>(null);\r\n  const [filteredPhotos, setFilteredPhotos] = useState<Photo[]>([]);\r\n  const [photoIndex, setPhotoIndex] = useState(0);\r\n  const [lightboxOpen, setLightboxOpen] = useState(false);\r\n  const [selected, setSelected] = useState<string[]>([]);\r\n  const [confirmationDialogOpen, setConfirmationDialogOpen] = useState(false);\r\n  const [confirmationDialogTitle, setConfirmationDialogTitle] = useState('');\r\n  const [\r\n    confirmationDialogContentText,\r\n    setConfirmationDialogContentText,\r\n  ] = useState('');\r\n  const [confirmationDialogAgree, setConfirmationDialogAgree] = useState<\r\n    (value: any) => void\r\n  >(() => {});\r\n  const [progress, setProgress] = useState(0);\r\n  const [addPhotosDialogOpen, setAddPhotosDialogOpen] = useState(false);\r\n  const [commentOpen, setCommentOpen] = useState(false);\r\n  const [commentTextarea, setCommentTextarea] = useState('');\r\n\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    getSingleCollection(collectionId)\r\n      .then((collection) => {\r\n        setCollection(collection);\r\n        setFilteredPhotos(collection.photos);\r\n      })\r\n      .catch((err) => {\r\n        enqueueSnackbar('ERROR: Getting collection failed', {\r\n          variant: 'error',\r\n        });\r\n      });\r\n  }, [collectionId, enqueueSnackbar]);\r\n\r\n  const openCommentModal = (index?: number) => {\r\n    setCommentOpen(true);\r\n    if (filteredPhotos) {\r\n      if (index) {\r\n        setPhotoIndex(index);\r\n        setCommentTextarea(filteredPhotos[index].comment);\r\n      } else {\r\n        setCommentTextarea(filteredPhotos[photoIndex].comment);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n\r\n  if (collection === null || filteredPhotos === null) {\r\n    return (\r\n      <Backdrop open={true}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <CollectionDetails\r\n        collectionId={collectionId}\r\n        collection={collection}\r\n        setCollection={setCollection}\r\n        setConfirmationDialogOpen={setConfirmationDialogOpen}\r\n        setConfirmationDialogTitle={setConfirmationDialogTitle}\r\n        setConfirmationDialogContentText={setConfirmationDialogContentText}\r\n        setConfirmationDialogAgree={setConfirmationDialogAgree}\r\n        setProgress={setProgress}\r\n      />\r\n      <PhotoTableToolbar\r\n        collectionId={collectionId}\r\n        collection={collection}\r\n        setCollection={setCollection}\r\n        filteredPhotos={filteredPhotos}\r\n        setFilteredPhotos={setFilteredPhotos}\r\n        setConfirmationDialogOpen={setConfirmationDialogOpen}\r\n        setConfirmationDialogTitle={setConfirmationDialogTitle}\r\n        setConfirmationDialogContentText={setConfirmationDialogContentText}\r\n        setConfirmationDialogAgree={setConfirmationDialogAgree}\r\n        setProgress={setProgress}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setAddPhotosDialogOpen={setAddPhotosDialogOpen}\r\n      />\r\n      <PhotoTable\r\n        collection={collection}\r\n        filteredPhotos={filteredPhotos}\r\n        selected={selected}\r\n        setSelected={setSelected}\r\n        setPhotoIndex={setPhotoIndex}\r\n        setLightboxOpen={setLightboxOpen}\r\n      />\r\n      {filteredPhotos.length > 0 && (\r\n        <Lightbox\r\n          filteredPhotos={filteredPhotos}\r\n          lightboxOpen={lightboxOpen}\r\n          setLightboxOpen={setLightboxOpen}\r\n          lightboxIndex={photoIndex}\r\n          setLightboxIndex={setPhotoIndex}\r\n          toolbarButtons={[\r\n            filteredPhotos[photoIndex].comment.length > 0 ? (\r\n              <IconButton\r\n                className={styles.toolbarIcon}\r\n                onClick={() => openCommentModal()}\r\n              >\r\n                <MessageIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <div className={styles.toolbarIcon}></div>\r\n            ),\r\n            filteredPhotos[photoIndex].selected ? (\r\n              <IconButton className={styles.toolbarIcon} disabled>\r\n                <StarBorderIcon />\r\n              </IconButton>\r\n            ) : (\r\n              <div className={styles.toolbarIcon}></div>\r\n            ),\r\n          ]}\r\n        />\r\n      )}\r\n      <ConfirmationDialog\r\n        dialogOpen={confirmationDialogOpen}\r\n        progress={progress}\r\n        onClickCancel={() => setConfirmationDialogOpen(false)}\r\n        onClickAgree={confirmationDialogAgree}\r\n        dialogTitle={confirmationDialogTitle}\r\n        dialogContentText={confirmationDialogContentText}\r\n      />\r\n      <AddPhotosDialog\r\n        collectionId={collectionId}\r\n        setCollection={setCollection}\r\n        setProgress={setProgress}\r\n        addPhotosDialogOpen={addPhotosDialogOpen}\r\n        setAddPhotosDialogOpen={setAddPhotosDialogOpen}\r\n        progress={progress}\r\n      />\r\n      <CommentDialog\r\n        commentOpen={commentOpen}\r\n        setCommentOpen={setCommentOpen}\r\n        commentTextarea={commentTextarea}\r\n        disabled={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditCollection;\r\n","import { Button, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport styles from './styles.module.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ErrorPage: React.FC = () => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button to='/' component={Link} variant='outlined'>\r\n        home\r\n      </Button>\r\n      <div className={styles.centeredConainer}>\r\n        <Typography variant='h3'>Page not found</Typography>\r\n        <Typography variant='h1'>404</Typography>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorPage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styles from './styles.module.scss';\r\nimport 'react-image-lightbox/style.css';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport NewCollection from './components/NewCollection/NewCollection';\r\nimport Settings from './components/Settings/Settings';\r\nimport SignIn from './components/SignIn/SignIn';\r\nimport CollectionPage from './components/CollectionPage/CollectionPage';\r\nimport EditCollection from './components/EditCollection/EditCollection';\r\nimport ErrorPage from './components/ErrorPage/ErrorPage';\r\nimport { auth, getSiteSettings } from './firebase';\r\nimport {\r\n  Container,\r\n  Backdrop,\r\n  CircularProgress,\r\n  Button,\r\n  Box,\r\n} from '@material-ui/core';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState<null | string>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [logoUrl, setLogoUrl] = useState<string | undefined>(undefined);\r\n  const [logoWidth, setLogoWidth] = useState(100);\r\n  const { enqueueSnackbar } = useSnackbar();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        setUser(user.uid);\r\n      } else {\r\n        setUser(null);\r\n      }\r\n      setLoading(false);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getSiteSettings()\r\n      .then((settings) => {\r\n        if (settings && settings.logoUrl && settings.logoWidth) {\r\n          setLogoUrl(settings.logoUrl);\r\n          setLogoWidth(settings.logoWidth);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        enqueueSnackbar('ERROR: Getting site settings failed', {\r\n          variant: 'error',\r\n          persist: true,\r\n        });\r\n      });\r\n  }, [enqueueSnackbar]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Backdrop open={true}>\r\n        <CircularProgress color='inherit' />\r\n      </Backdrop>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container maxWidth='xl'>\r\n      <Box ml={2} mr={2}>\r\n        {logoUrl && (\r\n          <img\r\n            className={styles.logo}\r\n            src={logoUrl}\r\n            style={{ width: logoWidth }}\r\n            alt='logo'\r\n          />\r\n        )}\r\n        {user && (\r\n          <div className={styles.logoutBtn}>\r\n            <Button onClick={() => auth.signOut()} variant='outlined'>\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <Router basename={'/photoproof/'}>\r\n          <Switch>\r\n            <Route path='/collection/:id' render={() => <CollectionPage />} />\r\n            {!user ? <Route path='/' render={() => <SignIn />} /> : null}\r\n            <Route\r\n              path='/settings'\r\n              render={() => (\r\n                <Settings\r\n                  logoWidth={logoWidth}\r\n                  setLogoUrl={setLogoUrl}\r\n                  setLogoWidth={setLogoWidth}\r\n                />\r\n              )}\r\n            />\r\n            <Route path='/new' render={() => <NewCollection />} />\r\n            <Route path='/edit/:id' render={() => <EditCollection />} />\r\n            <Route exact path='/' render={() => <Dashboard />} />\r\n            <Route render={() => <ErrorPage />} />\r\n          </Switch>\r\n        </Router>\r\n      </Box>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nexport const theme = createMuiTheme({\r\n  palette: {\r\n    common: { black: '#000', white: '#fff' },\r\n    background: {\r\n      paper: 'rgba(64, 64, 64, 1)',\r\n      default: 'rgba(39, 39, 43, 1)',\r\n    },\r\n    primary: {\r\n      light: 'rgba(149, 154, 184, 1)',\r\n      main: 'rgba(41, 46, 136, 1)',\r\n      dark: 'rgba(73, 86, 158, 1)',\r\n      contrastText: '#fff',\r\n    },\r\n    secondary: {\r\n      light: 'rgba(138, 35, 70, 1)',\r\n      main: 'rgba(103, 9, 42, 1)',\r\n      dark: 'rgba(152, 14, 63, 1)',\r\n      contrastText: 'rgba(255, 255, 255, 1)',\r\n    },\r\n    error: {\r\n      light: 'rgba(179, 135, 135, 1)',\r\n      main: 'rgba(128, 70, 50, 1)',\r\n      dark: 'rgba(102, 50, 50, 1)',\r\n      contrastText: '#fff',\r\n    },\r\n    text: {\r\n      primary: 'rgba(241, 241, 241, 1)',\r\n      secondary: 'rgba(228, 228, 228, 1)',\r\n      disabled: 'rgba(0, 0, 0, 0.38)',\r\n      hint: 'rgba(0, 0, 0, 0.38)',\r\n    },\r\n  },\r\n  typography: {\r\n    fontFamily: [\r\n      'Nunito',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n    ].join(','),\r\n  },\r\n  overrides: {\r\n    MuiButton: {\r\n      contained: {\r\n        backgroundColor: '#555',\r\n        color: '#eee',\r\n        '&:hover': {\r\n          backgroundColor: '#666',\r\n          color: '#eee',\r\n        },\r\n      },\r\n      outlined: {\r\n        borderColor: '#eee',\r\n      },\r\n      textPrimary: {\r\n        color: 'rgba(188, 194, 230)',\r\n      },\r\n      textSecondary: {\r\n        color: 'rgb(255, 87, 29);',\r\n      },\r\n    },\r\n    MuiTableCell: {\r\n      head: {\r\n        fontSize: '1rem !important',\r\n        backgroundColor: 'rgba(255,255,255,0.1)',\r\n      },\r\n    },\r\n    MuiOutlinedInput: {\r\n      root: {\r\n        '&$disabled': {\r\n          color: '#eee',\r\n        },\r\n      },\r\n      notchedOutline: {\r\n        borderWidth: '1px',\r\n        borderColor: '#eee',\r\n      },\r\n      // disabled: {\r\n      //   borderColor: '#555',\r\n      //   color: '#eee',\r\n      // },\r\n    },\r\n    MuiCheckbox: {\r\n      root: {\r\n        color: '#aaa',\r\n        // '&$checked': {\r\n        //   color: 'green',\r\n        // },\r\n        '&$disabled': {\r\n          color: '#555',\r\n        },\r\n      },\r\n    },\r\n    MuiTableRow: {\r\n      hover: {\r\n        '&:hover': {\r\n          backgroundColor: '#444 !important',\r\n          cursor: 'pointer',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});\r\nexport default theme;\r\n","import React from 'react';\r\nimport { SnackbarProvider } from 'notistack';\r\nimport { Button, Slide } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  success: {\r\n    backgroundColor: 'rgba(41, 136, 77, 1) !important',\r\n    '& button': {\r\n      color: 'white !important',\r\n    },\r\n  },\r\n  error: {\r\n    backgroundColor: 'rgba(138, 35, 70, 1) !important',\r\n    '& button': {\r\n      color: 'white !important',\r\n    },\r\n  },\r\n  warning: {\r\n    backgroundColor: 'rgba(171, 170, 0, 1) !important',\r\n    '& button': {\r\n      color: 'white !important',\r\n    },\r\n  },\r\n  info: {\r\n    backgroundColor: 'rgba(41, 46, 136, 1) !important',\r\n    '& button': {\r\n      color: 'white !important',\r\n    },\r\n  },\r\n  root: {\r\n    '& > div': {\r\n      backgroundColor: 'rgba(183, 183, 183, 1)',\r\n      color: 'black',\r\n      '& button': {\r\n        color: 'black',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\ninterface NotificationProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst NotificationProvider: React.FC<NotificationProviderProps> = ({\r\n  children,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const notistackRef = React.createRef() as React.RefObject<SnackbarProvider>;\r\n  const onClickDismiss = (key: React.ReactText) => () => {\r\n    (notistackRef.current as any).closeSnackbar(key);\r\n  };\r\n\r\n  return (\r\n    <SnackbarProvider\r\n      classes={{\r\n        variantSuccess: classes.success,\r\n        variantError: classes.error,\r\n        variantWarning: classes.warning,\r\n        variantInfo: classes.info,\r\n        root: classes.root,\r\n      }}\r\n      ref={notistackRef}\r\n      maxSnack={5}\r\n      hideIconVariant\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      action={(key) => <Button onClick={onClickDismiss(key)}>✕</Button>}\r\n      // @ts-ignore\r\n      TransitionComponent={Slide}\r\n    >\r\n      {children}\r\n    </SnackbarProvider>\r\n  );\r\n};\r\n\r\nexport default NotificationProvider;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.scss';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport { theme } from './theme';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport NotificationProvider from './providers/NotificationProvider';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <NotificationProvider>\r\n        <App />\r\n      </NotificationProvider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"masonryGrid\":\"styles_masonryGrid__2qe5-\",\"masonryGridColumn\":\"styles_masonryGridColumn__Q4hmE\",\"photoThumbnailGrid\":\"styles_photoThumbnailGrid__8nntj\",\"imgBorder\":\"styles_imgBorder__3fi3T\",\"photoIndex\":\"styles_photoIndex__2u3av\",\"heartBtn\":\"styles_heartBtn__3LbnO\",\"heartBtnSelected\":\"styles_heartBtnSelected__1etCZ\",\"commentBtn\":\"styles_commentBtn__oHX1C\",\"commentBtnFilled\":\"styles_commentBtnFilled__2T58n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbarIcon\":\"styles_toolbarIcon__1b01N\",\"fixedBtn\":\"styles_fixedBtn__1nuOb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzoneError\":\"styles_dropzoneError__3-m5E\",\"customFileInput\":\"styles_customFileInput__1QhDy\",\"fileInputBtn\":\"styles_fileInputBtn__39JlO\",\"slider\":\"styles_slider__2BL7N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbarIcon\":\"styles_toolbarIcon__1UWSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toolbarIcon\":\"styles_toolbarIcon__170qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropzone\":\"styles_dropzone__qzElo\",\"exitBtn\":\"styles_exitBtn__2CkxR\",\"dropzoneError\":\"styles_dropzoneError__3EhZp\",\"dropzoneErrorBorder\":\"styles_dropzoneErrorBorder__3qup_\"};"],"sourceRoot":""}